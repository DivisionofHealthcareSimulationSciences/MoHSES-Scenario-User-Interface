{"ast":null,"code":"export default {\n  data() {\n    return {\n      highlightedRegion: null\n    };\n  },\n  mounted() {\n    this.drawBodyModel();\n  },\n  methods: {\n    drawBodyModel() {\n      const canvas = this.$refs.canvas;\n      const ctx = canvas.getContext(\"2d\");\n\n      // Draw the head\n      ctx.fillStyle = \"#FFCC99\";\n      ctx.beginPath();\n      ctx.arc(100, 100, 50, 0, 2 * Math.PI);\n      ctx.fill();\n\n      // Draw the torso\n      ctx.fillStyle = \"#FFFFCC\";\n      ctx.fillRect(75, 150, 50, 100);\n\n      // Draw the arms\n      ctx.fillStyle = \"#FFCC99\";\n      ctx.fillRect(25, 150, 50, 10);\n      ctx.fillRect(125, 150, 50, 10);\n\n      // Draw the legs\n      ctx.fillStyle = \"#99CCFF\";\n      ctx.fillRect(75, 250, 10, 50);\n      ctx.fillRect(115, 250, 10, 50);\n    },\n    handleMouseMove(event) {\n      const canvas = this.$refs.canvas;\n      const rect = canvas.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n\n      // Check if the mouse is over the head\n      if (this.isPointInCircle(x, y, 100, 100, 50)) {\n        this.highlightedRegion = \"head\";\n      }\n      // Check if the mouse is over the torso\n      else if (this.isPointInRect(x, y, 75, 150, 50, 100)) {\n        this.highlightedRegion = \"torso\";\n      }\n      // Check if the mouse is over the left arm\n      else if (this.isPointInRect(x, y, 25, 150, 50, 10)) {\n        this.highlightedRegion = \"left arm\";\n      }\n      // Check if the mouse is over the right arm\n      else if (this.isPointInRect(x, y, 125, 150, 50, 10)) {\n        this.highlightedRegion = \"right arm\";\n      }\n      // Check if the mouse is over the left leg\n      else if (this.isPointInRect(x, y, 75, 250, 10, 50)) {\n        this.highlightedRegion = \"left leg\";\n      }\n      // Check if the mouse is over the right leg\n      else if (this.isPointInRect(x, y, 115, 250, 10, 50)) {\n        this.highlightedRegion = \"right leg\";\n      }\n      // Clear the highlighted region if the mouse is not over any body part\n      else {\n        this.highlightedRegion = null;\n      }\n    },\n    isPointInCircle(x, y, cx, cy, r) {\n      const dx = x - cx;\n      const dy = y - cy;\n      return dx * dx + dy * dy <= r * r;\n    },\n    isPointInRect(x, y, rx, ry, rw, rh) {\n      return x >= rx && x <= rx + rw && y >= ry && y <= ry + rh;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["data","highlightedRegion","mounted","drawBodyModel","methods","canvas","$refs","ctx","getContext","fillStyle","beginPath","arc","Math","PI","fill","fillRect","handleMouseMove","event","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","isPointInCircle","isPointInRect","cx","cy","r","dx","dy","rx","ry","rw","rh"],"sourceRoot":"","sources":["/Users/stlp/Desktop/BIOEN 404/User Interface/MoHSES-Scenario-User-Interface/src/views/AboutView.vue"],"sourcesContent":["<template>\n  <div>\n    <canvas ref=\"canvas\" @mousemove=\"handleMouseMove\"></canvas>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      highlightedRegion: null\n    }\n  },\n  mounted() {\n    this.drawBodyModel();\n  },\n  methods: {\n    drawBodyModel() {\n      const canvas = this.$refs.canvas;\n      const ctx = canvas.getContext(\"2d\");\n      \n      // Draw the head\n      ctx.fillStyle = \"#FFCC99\";\n      ctx.beginPath();\n      ctx.arc(100, 100, 50, 0, 2 * Math.PI);\n      ctx.fill();\n      \n      // Draw the torso\n      ctx.fillStyle = \"#FFFFCC\";\n      ctx.fillRect(75, 150, 50, 100);\n      \n      // Draw the arms\n      ctx.fillStyle = \"#FFCC99\";\n      ctx.fillRect(25, 150, 50, 10);\n      ctx.fillRect(125, 150, 50, 10);\n      \n      // Draw the legs\n      ctx.fillStyle = \"#99CCFF\";\n      ctx.fillRect(75, 250, 10, 50);\n      ctx.fillRect(115, 250, 10, 50);\n    },\n    handleMouseMove(event) {\n      const canvas = this.$refs.canvas;\n      const rect = canvas.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      \n      // Check if the mouse is over the head\n      if (this.isPointInCircle(x, y, 100, 100, 50)) {\n        this.highlightedRegion = \"head\";\n      }\n      // Check if the mouse is over the torso\n      else if (this.isPointInRect(x, y, 75, 150, 50, 100)) {\n        this.highlightedRegion = \"torso\";\n      }\n      // Check if the mouse is over the left arm\n      else if (this.isPointInRect(x, y, 25, 150, 50, 10)) {\n        this.highlightedRegion = \"left arm\";\n      }\n      // Check if the mouse is over the right arm\n      else if (this.isPointInRect(x, y, 125, 150, 50, 10)) {\n        this.highlightedRegion = \"right arm\";\n      }\n      // Check if the mouse is over the left leg\n      else if (this.isPointInRect(x, y, 75, 250, 10, 50)) {\n        this.highlightedRegion = \"left leg\";\n      }\n      // Check if the mouse is over the right leg\n      else if (this.isPointInRect(x, y, 115, 250, 10, 50)) {\n        this.highlightedRegion = \"right leg\";\n      }\n      // Clear the highlighted region if the mouse is not over any body part\n      else {\n        this.highlightedRegion = null;\n      }\n    },\n    isPointInCircle(x, y, cx, cy, r) {\n      const dx = x - cx;\n      const dy = y - cy;\n      return dx*dx + dy*dy <= r*r;\n    },\n    isPointInRect(x, y, rx, ry, rw, rh) {\n      return x >= rx && x <= rx + rw && y >= ry && y <= ry + rh;\n    }\n  }\n};\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}