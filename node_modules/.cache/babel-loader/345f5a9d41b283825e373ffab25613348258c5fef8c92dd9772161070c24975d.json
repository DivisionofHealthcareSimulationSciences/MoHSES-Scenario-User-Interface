{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"20px\"\n  }\n}, \"Please upload your .CSV:\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  const _component_v_toolbar_title = _resolveComponent(\"v-toolbar-title\");\n  const _component_v_toolbar = _resolveComponent(\"v-toolbar\");\n  const _component_v_file_input = _resolveComponent(\"v-file-input\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_main = _resolveComponent(\"v-main\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_v_toolbar, {\n    style: {\n      \"color\": \"white\"\n    },\n    color: \"#4b0082\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_toolbar_title, null, {\n      default: _withCtx(() => [_createTextVNode(\"BioGears Plotting Tool\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }), _createVNode(_component_v_main, {\n    class: \"bg-grey-lighten-3\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_container, null, {\n      default: _withCtx(() => [_createVNode(_component_v_card, {\n        class: \"mt-n12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n          default: _withCtx(() => [_hoisted_1, _hoisted_2, _createVNode(_component_v_file_input, {\n            modelValue: _ctx.chosenFile,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.chosenFile = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n            onClick: _ctx.importFile\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Import File\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"]), _createElementVNode(\"p\", null, _toDisplayString(this.data), 1 /* TEXT */)]),\n\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAQYA,oBAAuD;EAApDC,KAAuB,EAAvB;IAAA;EAAA;AAAuB,GAAC,0BAAwB;gCACnDD,oBAAI;;;;;;;;;;;;6DARZE,aAEYC;IAFDF,KAAoB,EAApB;MAAA;IAAA,CAAoB;IAACG,KAAK,EAAC;;sBACpC,MAAyD,CAAzDF,aAAyDG;wBAAxC,MAAsB,kBAAtB,wBAAsB;;;;;MAEzCH,aAaSI;IAbDC,KAAK,EAAC;EAAmB;sBAC/B,MAWc,CAXdL,aAWcM;wBAVZ,MASS,CATTN,aASSO;QATDF,KAAK,EAAC;MAAQ;0BACpB,MAOY,CAPZL,aAOYQ;4BANV,MAAuD,CAAvDC,UAAuD,EACvDC,UAAI,EACJV,aAAkDW;wBAA3BC,eAAU;uEAAVA,eAAU;mDACjCZ,aAAqBa,sBACrBb,aAA8Cc;YAAtCC,OAAK,EAAEH;UAAU;8BAAE,MAAW,kBAAX,aAAW;;0CACtCd,oBAAsB,iCAAXkB,IAAI","names":["_createElementVNode","style","_createVNode","_component_v_toolbar","color","_component_v_toolbar_title","_component_v_main","class","_component_v_container","_component_v_card","_component_v_card_text","_hoisted_1","_hoisted_2","_component_v_file_input","_ctx","_component_v_spacer","_component_v_btn","onClick","data"],"sourceRoot":"","sources":["/Users/stlp/Desktop/Spring 2023/BIOEN 405/User Interface/MoHSES-Scenario-User-Interface/src/views/PlottingView.vue"],"sourcesContent":["<template>\n    <v-toolbar style=\"color: white\" color=\"#4b0082\">\n      <v-toolbar-title>BioGears Plotting Tool</v-toolbar-title>\n    </v-toolbar>\n    <v-main class=\"bg-grey-lighten-3\">\n      <v-container>\n        <v-card class=\"mt-n12\">\n          <v-card-text>\n            <p style=\"font-size: 20px\">Please upload your .CSV:</p>\n            <br>\n            <v-file-input v-model=\"chosenFile\"></v-file-input>\n            <v-spacer></v-spacer>\n            <v-btn @click=\"importFile\">Import File</v-btn>\n            <p>{{ this.data }}</p>\n        </v-card-text>\n        </v-card>\n      </v-container>\n    </v-main>\n  </template>\n  \n<script>\nexport default {\n      data: () => ({\n        chosenFile: null,\n        data: null,\n        columnData:[],\n      }),\n      methods: {\n        importFile() {\n      \n      if (this.chosenFile === null) {\n        this.data = \"No File Chosen\"\n      } else {\n        var reader = new FileReader();\n        var file = this.chosenFile[0]\n        // Use the javascript reader object to load the contents\n        // of the file in the v-model prop\n        reader.readAsText(file);\n        reader.onload = () => {\n        this.data = reader.result;\n        this.columnData = [];\n        const rows = this.data.split('\\n')\n        for (let i=0; i<rows.length;i++)\n        \n      }\n    }\n}\n  }\n}\n</script>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}