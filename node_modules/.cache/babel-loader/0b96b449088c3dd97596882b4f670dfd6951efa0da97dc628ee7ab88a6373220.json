{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport xmlbuilder from 'xmlbuilder';\nexport default {\n  data: () => ({\n    age_min: 0,\n    age_max: 120,\n    height_min: 0,\n    height_max: 200,\n    weight_min: 0,\n    weight_max: 200,\n    tab: 'home',\n    name: [],\n    drawer: false,\n    valid: true,\n    expanded: [0],\n    capability: [{\n      required: [],\n      name: [],\n      data: [],\n      propertyName: [],\n      dataType: [],\n      value: []\n    }],\n    scenario_props: {\n      \"name\": [],\n      \"authors\": []\n    },\n    patient_props: {\n      \"type\": [],\n      \"name\": [],\n      \"title\": [],\n      \"age\": 50,\n      \"gender\": [],\n      \"height\": 150,\n      \"weight\": 75\n    },\n    environment_props: {\n      \"surrounding\": [],\n      \"altitude\": [],\n      \"temperature\": [],\n      \"pressure\": [],\n      \"co2\": [],\n      \"sounds\": [],\n      \"smells\": []\n    },\n    ed_props: {\n      'instruction': [],\n      'narrative': [],\n      'learnerCount': [],\n      'role': [],\n      'setup_checklist': [],\n      'equipment': [],\n      'supplies': [],\n      'duration': [],\n      'scenario_type': [],\n      'assessment_type': [],\n      'learner_group': [],\n      'objectives': [],\n      'task': [],\n      'conditions': [],\n      'exit_criteria': []\n    },\n    nameRules: [v => !!v || 'Name is required'],\n    genders: ['Male', 'Female'],\n    types: ['Medical Doctor', 'Paramedic', 'Nurse']\n  }),\n  methods: {\n    addCapability() {\n      this.capability.push({\n        required: '',\n        name: '',\n        data: '',\n        propertyName: '',\n        dataType: '',\n        value: ''\n      });\n    },\n    nextTab(id) {\n      this.tab = id;\n    },\n    removeCapability(index) {\n      this.capability.splice(index, 1);\n    },\n    validate() {\n      this.$refs.form.validate();\n    },\n    reset() {\n      this.$refs.form.reset();\n    },\n    pathClicked(id) {\n      let pathElement = document.getElementById(id);\n      if (this.name.some(x => Object.keys(x).includes(id))) {\n        this.name = this.name.filter(x => !Object.keys(x).includes(id));\n      } else {\n        this.name.push({\n          [id]: ''\n        });\n      }\n      if (pathElement.classList.contains(\"active\")) {\n        pathElement.classList.remove(\"active\");\n      } else {\n        pathElement.classList.add(\"active\");\n      }\n    },\n    saveXML() {\n      const xml = xmlbuilder.create('AMMConfiguration', {\n        encoding: 'UTF-8'\n      });\n      xml.att({\n        'xmlns:xsd': 'http://www.w3.org/2001/XMLSchema',\n        'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance'\n      });\n      const metadata = xml.ele('metadata');\n      for (var key1 in this.patient_props) {\n        if (Array.isArray(this.patient_props[key1])) {\n          for (var item1 in this.patient_props[key1]) {\n            metadata.ele(key1, this.patient_props[key1][item1]);\n          }\n        } else {\n          metadata.ele(key1, this.patient_props[key1]);\n        }\n      }\n      for (var key2 in this.environment_props) {\n        if (Array.isArray(this.environment_props[key2])) {\n          for (var item2 in this.environment_props[key2]) {\n            metadata.ele(key2, this.environment_props[key2][item2]);\n          }\n        } else {\n          metadata.ele(key2, this.environment_props[key2]);\n        }\n      }\n      for (var key3 in this.ed_props) {\n        if (Array.isArray(this.ed_props[key3])) {\n          for (var item3 in this.ed_props[key3]) {\n            metadata.ele(key3, this.ed_props[key3][item3]);\n          }\n        } else {\n          metadata.ele(key3, this.ed_props[key3]);\n        }\n      }\n      for (var item4 in this.capability) {\n        for (var key4 in this.capability[item4]) {\n          metadata.ele(key4, this.capability[item4][key4]);\n        }\n      }\n      var xmlString = xml.end({\n        pretty: true\n      });\n      const blob = new Blob([xmlString], {\n        type: 'text/xml'\n      });\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = 'data.xml';\n      link.click();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["xmlbuilder","data","age_min","age_max","height_min","height_max","weight_min","weight_max","tab","name","drawer","valid","expanded","capability","required","propertyName","dataType","value","scenario_props","patient_props","environment_props","ed_props","nameRules","v","genders","types","methods","addCapability","push","nextTab","id","removeCapability","index","splice","validate","$refs","form","reset","pathClicked","pathElement","document","getElementById","some","x","Object","keys","includes","filter","classList","contains","remove","add","saveXML","xml","create","encoding","att","metadata","ele","key1","Array","isArray","item1","key2","item2","key3","item3","item4","key4","xmlString","end","pretty","blob","Blob","type","link","createElement","href","URL","createObjectURL","download","click"],"sourceRoot":"","sources":["C:\\Users\\sanik\\Downloads\\capstone\\MoHSES-Scenario-User-Interface\\src\\views\\MoHSESView.vue"],"sourcesContent":["<template>\r\n    <v-toolbar color=\"green\">\r\n      <v-toolbar-title>MoHSES Scenario Creation Tool</v-toolbar-title>\r\n    </v-toolbar>\r\n    <v-row>\r\n      <v-col cols=\"3\">\r\n        <v-tabs v-model=\"tab\" direction=\"vertical\" color=\"green\">\r\n          <v-tab value=\"home\">\r\n            <v-icon start> mdi-home </v-icon> About this page\r\n          </v-tab>\r\n          <v-tab value=\"option-1\">\r\n            <v-icon start> mdi-form-textbox </v-icon> Scenario Properties\r\n          </v-tab>\r\n          <v-tab value=\"option-2\">\r\n            <v-icon start> mdi-account </v-icon> Patient Properties\r\n          </v-tab>\r\n          <v-tab value=\"option-3\">\r\n            <v-icon start> mdi-access-point </v-icon> Environment Properties\r\n          </v-tab>\r\n          <v-tab value=\"option-4\">\r\n            <v-icon start> mdi-list-status </v-icon> Educational Encounter Properties\r\n          </v-tab>\r\n          <v-tab value=\"option-5\">\r\n            <v-icon start> mdi-tools </v-icon> Capabilities\r\n          </v-tab>\r\n        </v-tabs>\r\n      </v-col>\r\n      <v-col cols=\"8\" class=\"my-content\">\r\n        <v-window v-model=\"tab\">\r\n          <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\r\n            <v-main>\r\n              <v-window-item value=\"home\" transition=\"scale\" reverse-transition=\"scale\">\r\n                <p>This is the home page.</p>\r\n                <v-col cols=\"auto\">\r\n                  <v-btn @click=\"nextTab('option-1')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\r\n                </v-col>\r\n              </v-window-item>\r\n              <v-window-item value=\"option-1\" transition=\"scale\" reverse-transition=\"scale\">\r\n                <v-card flat>\r\n                  <v-card-text>\r\n                    <v-select v-model=\"patient_props['type']\" :items=\"types\" :rules=\"[v => !!v || 'Type is required']\" label=\"Instructor Type\" required clearable></v-select>\r\n                    <v-text-field v-model=\"scenario_props['name']\" label=\"Scenario Name\" required clearable></v-text-field>\r\n                    <v-combobox v-model=\"scenario_props['authors']\" label=\"Authors\" required clearable multiple chips hint='Click \"enter\" to add multiple items'></v-combobox>\r\n                  </v-card-text>\r\n                </v-card>\r\n                <br>\r\n                <v-row justify=\"center\">\r\n                  <v-col cols=\"auto\">\r\n                    <v-btn @click=\"nextTab('home')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\r\n                  </v-col>\r\n                  <v-col cols=\"auto\">\r\n                    <v-btn @click=\"nextTab('option-2')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\r\n                  </v-col>\r\n                </v-row>\r\n                <br>\r\n              </v-window-item>\r\n            </v-main>\r\n            <v-window-item value=\"option-2\" transition=\"scale\" reverse-transition=\"scale\">\r\n              <v-card flat>\r\n                <v-card-text>\r\n                  <v-text-field v-model=\"patient_props['name']\" :rules=\"nameRules\" label=\"Name\" required clearable></v-text-field>\r\n                  <v-text-field v-model=\"patient_props['title']\" :rules=\"nameRules\" label=\"Title or Rank\" required clearable></v-text-field>\r\n                  <v-select v-model=\"patient_props['gender']\" :items=\"genders\" :rules=\"[v => !!v || 'Sex is required']\" label=\"Sex\" required clearable></v-select>\r\n                  <v-slider v-model=\"patient_props['age']\" label=\"Age\" class=\"align-center\" :max=\"age_max\" :min=\"age_min\" :step=\"1\" clearable>\r\n                    <template v-slot:append>\r\n                      <v-text-field v-model=\"patient_props['age']\" hide-details single-line density=\"compact\" type=\"number\" clearable style=\"width: 110px\"></v-text-field>\r\n                    </template>\r\n                  </v-slider>\r\n                  <v-slider v-model=\"patient_props['height']\" label=\"Height [cm]\" class=\"align-center\" :max=\"height_max\" :min=\"height_min\" :step=\"0.1\" clearable>\r\n                    <template v-slot:append>\r\n                      <v-text-field v-model=\"patient_props['height']\" hide-details clearable single-line density=\"compact\" type=\"number\" style=\"width: 110px\"></v-text-field>\r\n                    </template>\r\n                  </v-slider>\r\n                  <v-slider v-model=\"patient_props['weight']\" label=\"Weight [kg]\" class=\"align-center\" :max=\"weight_max\" :min=\"weight_min\" :step=\"0.1\" clearable>\r\n                    <template v-slot:append>\r\n                      <v-text-field v-model=\"patient_props['weight']\" hide-details single-line clearable density=\"compact\" type=\"number\" style=\"width: 110px\"></v-text-field>\r\n                    </template>\r\n                  </v-slider>\r\n                </v-card-text>\r\n              </v-card>\r\n              <br>\r\n              <v-row justify=\"center\">\r\n                <v-col cols=\"auto\">\r\n                  <v-btn @click=\"nextTab('option-1')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\r\n                </v-col>\r\n                <v-col cols=\"auto\">\r\n                  <v-btn @click=\"nextTab('option-3')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\r\n                </v-col>\r\n              </v-row>\r\n              <br>\r\n            </v-window-item>\r\n            <v-window-item value=\"option-3\" transition=\"scale\" reverse-transition=\"scale\">\r\n              <v-card flat>\r\n                <v-card-text>\r\n                  <v-textarea v-model=\"environment_props['surrounding']\" label=\"Surrounding\" clearable></v-textarea>\r\n                  <v-text-field v-model=\"environment_props['altitude']\" :rules=\"nameRules\" label=\"Altitude or Elevation\" required clearable></v-text-field>\r\n                  <v-text-field v-model=\"environment_props['temperature']\" :rules=\"nameRules\" label=\"Temperature [C]\" required clearable></v-text-field>\r\n                  <v-text-field v-model=\"environment_props['pressure']\" :rules=\"nameRules\" label=\"Pressure [mmHg]\" required clearable></v-text-field>\r\n                  <v-text-field v-model=\"environment_props['co2']\" :rules=\"nameRules\" label=\"Ambient CO2 [fraction]\" required clearable></v-text-field>\r\n                  <v-combobox v-model=\"environment_props['sounds']\" label=\"Ambient Sounds\" multiple clearable chips hint='Click \"enter\" to add multiple items'></v-combobox>\r\n                  <v-combobox v-model=\"environment_props['smells']\" label=\"Smells\" multiple clearable chips hint='Click \"enter\" to add multiple items'></v-combobox>\r\n                </v-card-text>\r\n              </v-card>\r\n              <br>\r\n              <v-row justify=\"center\">\r\n                <v-col cols=\"auto\">\r\n                  <v-btn @click=\"nextTab('option-2')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\r\n                </v-col>\r\n                <v-col cols=\"auto\">\r\n                  <v-btn @click=\"nextTab('option-4')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\r\n                </v-col>\r\n              </v-row>\r\n              <br>\r\n            </v-window-item>\r\n            <v-window-item value=\"option-4\" transition=\"scale\" reverse-transition=\"scale\">\r\n              <v-card flat>\r\n                <v-card-text>\r\n                  <v-textarea v-model=\"ed_props['instruction']\" label=\"Instructions\" clearable></v-textarea>\r\n                  <v-textarea v-model=\"ed_props['narrative']\" label=\"Narrative\" clearable></v-textarea>\r\n                  <v-text-field v-model=\"ed_props['learnerCount']\" label=\"Number of Learners\" clearable></v-text-field>\r\n                  <v-text-field v-model=\"ed_props['role']\" label=\"Roles\" clearable></v-text-field>\r\n                  <v-combobox v-model=\"ed_props['setup_checklist']\" label=\"Setup Checklist\" multiple clearable chips hint='Click \"enter\" to add multiple items'></v-combobox>\r\n                  <v-combobox v-model=\"ed_props['equipment']\" label=\"Equipment\" multiple clearable chips hint='Click \"enter\" to add multiple items'></v-combobox>\r\n                  <v-combobox v-model=\"ed_props['supplies']\" label=\"Supplies\" multiple clearable chips hint='Click \"enter\" to add multiple items'></v-combobox>\r\n                  <v-text-field v-model=\"ed_props['duration']\" label=\"Estimated Duration\" clearable></v-text-field>\r\n                  <v-text-field v-model=\"ed_props['scenario_type']\" label=\"Scenario Type\" clearable></v-text-field>\r\n                  <v-text-field v-model=\"ed_props['assessment_type']\" label=\"Assessment Type\" clearable></v-text-field>\r\n                  <v-text-field v-model=\"ed_props['learner_group']\" label=\"Learner Group\" clearable></v-text-field>\r\n                  <v-combobox v-model=\"ed_props['objectives']\" label=\"Learning Objectives\" multiple clearable chips hint='Click \"enter\" to add multiple items'></v-combobox>\r\n                  <v-combobox v-model=\"ed_props['task']\" label=\"Task Descriptions\" multiple clearable chips hint='Click \"enter\" to add multiple items'></v-combobox>\r\n                  <v-combobox v-model=\"ed_props['conditions']\" label=\"Performance Conditions\" multiple clearable chips hint='Click \"enter\" to add multiple items'></v-combobox>\r\n                  <v-combobox v-model=\"ed_props['exit_criteria']\" label=\"Exit Criteria\" multiple clearable chips hint='Click \"enter\" to add multiple items'></v-combobox>\r\n                </v-card-text>\r\n              </v-card>\r\n              <br>\r\n              <v-row justify=\"center\">\r\n                <v-col cols=\"auto\">\r\n                  <v-btn @click=\"nextTab('option-3')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\r\n                </v-col>\r\n                <v-col cols=\"auto\">\r\n                  <v-btn @click=\"nextTab('option-5')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\r\n                </v-col>\r\n              </v-row>\r\n              <br>\r\n            </v-window-item>\r\n            <v-window-item value=\"option-5\" transition=\"scale\" reverse-transition=\"scale\">\r\n              <div v-for=\"(exp, index) in capability\" :key=\"index\">\r\n                <v-checkbox-btn v-model=\"exp.required\" label=\"Required\"></v-checkbox-btn>\r\n                <v-text-field clearable v-model=\"exp.name\" label=\"Capability Name\"></v-text-field>\r\n                <v-text-field clearable v-model=\"exp.data\" label=\"Configuration Data\"></v-text-field>\r\n                <v-text-field clearable v-model=\"exp.propertyName\" label=\"Property Name\"></v-text-field>\r\n                <v-select clearable v-model=\"exp.dataType\" label=\"Data Type\" :items=\"['string', 'number', 'boolean', 'option']\"></v-select>\r\n                <v-file-input clearable v-model=\"exp.value\" label=\"Value\"></v-file-input>\r\n                <v-btn @click=\"removeCapability(index)\">Remove Capability</v-btn>\r\n                <br>\r\n                <br>\r\n              </div>\r\n              <v-btn @click=\"addCapability\">Add Capability</v-btn>\r\n              <br>\r\n              <v-row justify=\"center\">\r\n                <v-col cols=\"auto\">\r\n                  <v-btn @click=\"nextTab('option-4')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\r\n                </v-col>\r\n                <v-col cols=\"auto\">\r\n                  <v-btn @click=\"nextTab('option-6')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\r\n                </v-col>\r\n              </v-row>\r\n              <br>\r\n              <v-btn :disabled=\"!valid\" color=\"success\" class=\"mr-4\" @click=\"saveXML\"> Submit </v-btn>\r\n              <v-btn color=\"error\" class=\"mr-4\" @click=\"reset\"> Reset Form </v-btn>\r\n              <br>\r\n            </v-window-item>\r\n          </v-form>\r\n        </v-window>\r\n      </v-col>\r\n    </v-row>\r\n  </template>\r\n  <script>\r\n    import xmlbuilder from 'xmlbuilder'\r\n    export default {\r\n      data: () => ({\r\n        age_min: 0,\r\n        age_max: 120,\r\n        height_min: 0,\r\n        height_max: 200,\r\n        weight_min: 0,\r\n        weight_max: 200,\r\n        tab: 'home',\r\n        name: [],\r\n        drawer: false,\r\n        valid: true,\r\n        expanded: [0],\r\n        capability: [{\r\n          required: [],\r\n          name: [],\r\n          data: [],\r\n          propertyName: [],\r\n          dataType: [],\r\n          value: []\r\n        }, ],\r\n        scenario_props: {\r\n          \"name\": [],\r\n          \"authors\": []\r\n        },\r\n        patient_props: {\r\n          \"type\": [],\r\n          \"name\": [],\r\n          \"title\": [],\r\n          \"age\": 50,\r\n          \"gender\": [],\r\n          \"height\": 150,\r\n          \"weight\": 75,\r\n        },\r\n        environment_props: {\r\n          \"surrounding\": [],\r\n          \"altitude\": [],\r\n          \"temperature\": [],\r\n          \"pressure\": [],\r\n          \"co2\": [],\r\n          \"sounds\": [],\r\n          \"smells\": []\r\n        },\r\n        ed_props: {\r\n          'instruction': [],\r\n          'narrative': [],\r\n          'learnerCount': [],\r\n          'role': [],\r\n          'setup_checklist': [],\r\n          'equipment': [],\r\n          'supplies': [],\r\n          'duration': [],\r\n          'scenario_type': [],\r\n          'assessment_type': [],\r\n          'learner_group': [],\r\n          'objectives': [],\r\n          'task': [],\r\n          'conditions': [],\r\n          'exit_criteria': []\r\n        },\r\n        nameRules: [\r\n          v => !!v || 'Name is required',\r\n        ],\r\n        genders: ['Male', 'Female'],\r\n        types: ['Medical Doctor', 'Paramedic', 'Nurse'],\r\n      }),\r\n      methods: {\r\n        addCapability() {\r\n          this.capability.push({\r\n            required: '',\r\n            name: '',\r\n            data: '',\r\n            propertyName: '',\r\n            dataType: '',\r\n            value: ''\r\n          });\r\n        },\r\n        nextTab(id) {\r\n          this.tab = id;\r\n        },\r\n        removeCapability(index) {\r\n          this.capability.splice(index, 1);\r\n        },\r\n        validate() {\r\n          this.$refs.form.validate()\r\n        },\r\n        reset() {\r\n          this.$refs.form.reset()\r\n        },\r\n        pathClicked(id) {\r\n          let pathElement = document.getElementById(id);\r\n          if (this.name.some(x => Object.keys(x).includes(id))) {\r\n            this.name = this.name.filter(x => !Object.keys(x).includes(id));\r\n          } else {\r\n            this.name.push({\r\n              [id]: ''\r\n            })\r\n          }\r\n          if (pathElement.classList.contains(\"active\")) {\r\n            pathElement.classList.remove(\"active\");\r\n          } else {\r\n            pathElement.classList.add(\"active\");\r\n          }\r\n        },\r\n        saveXML() {\r\n          const xml = xmlbuilder.create('AMMConfiguration', {\r\n            encoding: 'UTF-8'\r\n          })\r\n          xml.att({'xmlns:xsd':'http://www.w3.org/2001/XMLSchema', 'xmlns:xsi':'http://www.w3.org/2001/XMLSchema-instance'})\r\n          const metadata = xml.ele('metadata')\r\n          for (var key1 in this.patient_props) {\r\n            if (Array.isArray(this.patient_props[key1])) {\r\n              for (var item1 in this.patient_props[key1]) {\r\n                metadata.ele(key1, this.patient_props[key1][item1])\r\n              }\r\n            } else {\r\n              metadata.ele(key1, this.patient_props[key1])\r\n            }\r\n          }\r\n          for (var key2 in this.environment_props) {\r\n            if (Array.isArray(this.environment_props[key2])) {\r\n              for (var item2 in this.environment_props[key2]) {\r\n                metadata.ele(key2, this.environment_props[key2][item2])\r\n              }\r\n            } else {\r\n              metadata.ele(key2, this.environment_props[key2])\r\n            }\r\n          }\r\n          for (var key3 in this.ed_props) {\r\n            if (Array.isArray(this.ed_props[key3])) {\r\n              for (var item3 in this.ed_props[key3]) {\r\n                metadata.ele(key3, this.ed_props[key3][item3])\r\n              }\r\n            } else {\r\n              metadata.ele(key3, this.ed_props[key3])\r\n            }\r\n          }\r\n          for (var item4 in this.capability) {\r\n            for (var key4 in this.capability[item4]) {\r\n              metadata.ele(key4, this.capability[item4][key4])\r\n            }\r\n          }\r\n          var xmlString = xml.end({\r\n            pretty: true\r\n          });\r\n          const blob = new Blob([xmlString], {\r\n            type: 'text/xml'\r\n          })\r\n          const link = document.createElement('a')\r\n          link.href = URL.createObjectURL(blob)\r\n          link.download = 'data.xml'\r\n          link.click()\r\n        }\r\n      },\r\n    }\r\n  </script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}