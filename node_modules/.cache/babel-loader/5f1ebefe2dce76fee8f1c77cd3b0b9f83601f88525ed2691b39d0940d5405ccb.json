{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport csv from 'csv-parser';\nexport default {\n  data() {\n    return {\n      columnData: []\n    };\n  },\n  methods: {\n    onFileSelected(event) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      reader.onload = () => {\n        const data = reader.result;\n        this.columnData = [];\n\n        // Use csv-parser to parse the CSV file\n        csv().fromString(data).on('data', row => {\n          // Get the value of the first column\n          const columnValue = row[0];\n\n          // Push the column value into the array\n          this.columnData.push(columnValue);\n        }).on('end', () => {\n          console.log('CSV file successfully processed');\n          console.log('Column data:', this.columnData);\n        });\n      };\n      reader.readAsText(file);\n    }\n  }\n};","map":{"version":3,"mappings":";AAqBA,OAAOA,GAAE,MAAO,YAAY;AAE5B,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,cAAc,CAACC,KAAK,EAAE;MACpB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,MAAMC,MAAK,GAAI,IAAIC,UAAU,EAAE;MAE/BD,MAAM,CAACE,MAAK,GAAI,MAAM;QACpB,MAAMV,IAAG,GAAIQ,MAAM,CAACG,MAAM;QAC1B,IAAI,CAACV,UAAS,GAAI,EAAE;;QAEpB;QACAF,GAAG,EAAC,CACDa,UAAU,CAACZ,IAAI,EACfa,EAAE,CAAC,MAAM,EAAGC,GAAG,IAAK;UACnB;UACA,MAAMC,WAAU,GAAID,GAAG,CAAC,CAAC,CAAC;;UAE1B;UACA,IAAI,CAACb,UAAU,CAACe,IAAI,CAACD,WAAW,CAAC;QACnC,CAAC,EACAF,EAAE,CAAC,KAAK,EAAE,MAAM;UACfI,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;UAC9CD,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,IAAI,CAACjB,UAAU,CAAC;QAC9C,CAAC,CAAC;MACN,CAAC;MAEDO,MAAM,CAACW,UAAU,CAACd,IAAI,CAAC;IACzB;EACF;AACF,CAAC","names":["csv","data","columnData","methods","onFileSelected","event","file","target","files","reader","FileReader","onload","result","fromString","on","row","columnValue","push","console","log","readAsText"],"sourceRoot":"","sources":["/Users/stlp/Desktop/Spring 2023/BIOEN 405/User Interface/MoHSES-Scenario-User-Interface/src/views/PlottingView.vue"],"sourcesContent":["<template>\n    <v-toolbar style=\"color: white\" color=\"#4b0082\">\n      <v-toolbar-title>BioGears Plotting Tool</v-toolbar-title>\n    </v-toolbar>\n    <v-main class=\"bg-grey-lighten-3\">\n      <v-container>\n        <v-card class=\"mt-n12\">\n          <v-card-text>\n            <p style=\"font-size: 20px\">Please upload your .CSV:</p>\n            <br>\n            <v-file-input v-model=\"chosenFile\"></v-file-input>\n            <v-spacer></v-spacer>\n            <v-btn @click=\"importFile\">Import File</v-btn>\n            <p>{{ this.data }}</p>\n        </v-card-text>\n        </v-card>\n      </v-container>\n    </v-main>\n  </template>\n  \n<script>\nimport csv from 'csv-parser';\n\nexport default {\n  data() {\n    return {\n      columnData: [],\n    };\n  },\n  methods: {\n    onFileSelected(event) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      \n      reader.onload = () => {\n        const data = reader.result;\n        this.columnData = [];\n        \n        // Use csv-parser to parse the CSV file\n        csv()\n          .fromString(data)\n          .on('data', (row) => {\n            // Get the value of the first column\n            const columnValue = row[0];\n            \n            // Push the column value into the array\n            this.columnData.push(columnValue);\n          })\n          .on('end', () => {\n            console.log('CSV file successfully processed');\n            console.log('Column data:', this.columnData);\n          });\n      };\n      \n      reader.readAsText(file);\n    },\n  },\n};\n</script>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}