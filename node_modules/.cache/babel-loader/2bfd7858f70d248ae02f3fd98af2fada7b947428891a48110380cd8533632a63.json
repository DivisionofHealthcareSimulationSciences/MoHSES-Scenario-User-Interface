{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport xmlbuilder from 'xmlbuilder';\nexport default {\n  data: () => ({\n    drawer: false,\n    valid: true,\n    expanded: [0],\n    capability: [{\n      required: [],\n      name: [],\n      data: [],\n      propertyName: [],\n      dataType: [],\n      value: []\n    }],\n    scenario_props: {\n      \"name\": [],\n      \"authors\": []\n    },\n    patient_props: {\n      \"type\": [],\n      \"name\": [],\n      \"title\": [],\n      \"age\": [],\n      \"gender\": [],\n      \"height\": [],\n      \"weight\": []\n    },\n    environment_props: {\n      \"surrounding\": [],\n      \"altitude\": [],\n      \"temperature\": [],\n      \"pressure\": [],\n      \"co2\": [],\n      \"sounds\": [],\n      \"smells\": []\n    },\n    ed_props: {\n      'instruction': [],\n      'narrative': [],\n      'learnerCount': [],\n      'role': [],\n      'setup_checklist': [],\n      'equipment': [],\n      'supplies': [],\n      'duration': [],\n      'scenario_type': [],\n      'assessment_type': [],\n      'learner_group': [],\n      'objectives': [],\n      'task': [],\n      'conditions': [],\n      'exit_criteria': []\n    },\n    nameRules: [v => !!v || 'Name is required'],\n    genders: ['Male', 'Female'],\n    types: ['Medical Doctor', 'Paramedic', 'Nurse']\n  }),\n  methods: {\n    addCapability() {\n      this.capability.push({\n        required: '',\n        name: '',\n        data: '',\n        propertyName: '',\n        dataType: '',\n        value: ''\n      });\n    },\n    removeCapability(index) {\n      this.capability.splice(index, 1);\n    },\n    validate() {\n      this.$refs.form.validate();\n    },\n    reset() {\n      this.$refs.form.reset();\n    },\n    saveXML() {\n      const xml = xmlbuilder.create('AMMConfiguration', {\n        encoding: 'UTF-8'\n      });\n      xml.att({\n        'xmlns:xsd': 'http://www.w3.org/2001/XMLSchema',\n        'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance'\n      });\n      const metadata = xml.ele('metadata');\n      for (var key1 in this.patient_props) {\n        if (Array.isArray(this.patient_props[key1])) {\n          for (var item1 in this.patient_props[key1]) {\n            metadata.ele(key1, this.patient_props[key1][item1]);\n          }\n        } else {\n          metadata.ele(key1, this.patient_props[key1]);\n        }\n      }\n      for (var key2 in this.environment_props) {\n        if (Array.isArray(this.environment_props[key2])) {\n          for (var item2 in this.environment_props[key2]) {\n            metadata.ele(key2, this.environment_props[key2][item2]);\n          }\n        } else {\n          metadata.ele(key2, this.environment_props[key2]);\n        }\n      }\n      for (var key3 in this.ed_props) {\n        if (Array.isArray(this.ed_props[key3])) {\n          for (var item3 in this.ed_props[key3]) {\n            metadata.ele(key3, this.ed_props[key3][item3]);\n          }\n        } else {\n          metadata.ele(key3, this.ed_props[key3]);\n        }\n      }\n      for (var item4 in this.capability) {\n        for (var key4 in this.capability[item4]) {\n          metadata.ele(key4, this.capability[item4][key4]);\n        }\n      }\n      var xmlString = xml.end({\n        pretty: true\n      });\n      const blob = new Blob([xmlString], {\n        type: 'text/xml'\n      });\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = 'data.xml';\n      link.click();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["xmlbuilder","data","drawer","valid","expanded","capability","required","name","propertyName","dataType","value","scenario_props","patient_props","environment_props","ed_props","nameRules","v","genders","types","methods","addCapability","push","removeCapability","index","splice","validate","$refs","form","reset","saveXML","xml","create","encoding","att","metadata","ele","key1","Array","isArray","item1","key2","item2","key3","item3","item4","key4","xmlString","end","pretty","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","click"],"sourceRoot":"","sources":["C:\\Users\\sanik\\Downloads\\capstone\\MoHSES-Scenario-User-Interface\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\r\n<v-main>\r\n  <v-row class=\"justify-center\">\r\n      <v-col cols=\"12\" sm=\"8\" md=\"6\">\r\n      <v-form\r\n        ref=\"form\"\r\n        v-model=\"valid\"\r\n        lazy-validation\r\n      >\r\n        \r\n        <v-select\r\n          v-model=\"patient_props['type']\"\r\n          :items=\"types\"\r\n          :rules=\"[v => !!v || 'Type is required']\"\r\n          label=\"Instructor Type\"\r\n          required\r\n        ></v-select>\r\n\r\n        <v-expansion-panels v-model=\"expanded\">\r\n\r\n          <v-expansion-panel>\r\n          <v-expansion-panel-title>\r\n            Scenario Properties\r\n          </v-expansion-panel-title>\r\n          \r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"scenario_props['name']\"\r\n              label=\"Scenario Name\"\r\n              required\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-combobox\r\n              v-model=\"scenario_props['authors']\"\r\n              label=\"Authors\"\r\n              required\r\n              multiple\r\n              chips\r\n              hint='Click \"enter\" to add multiple items'\r\n            ></v-combobox>\r\n          </v-expansion-panel-text>\r\n\r\n          </v-expansion-panel>\r\n\r\n          <v-expansion-panel>\r\n          <v-expansion-panel-title>\r\n            Patient Properties\r\n          </v-expansion-panel-title>\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"patient_props['name']\"\r\n              :rules=\"nameRules\"\r\n              label=\"Name\"\r\n              required\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"patient_props['title']\"\r\n              :rules=\"nameRules\"\r\n              label=\"Title or Rank\"\r\n              required\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"patient_props['age']\"\r\n              :rules=\"nameRules\"\r\n              label=\"Age\"\r\n              required\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-select\r\n              v-model=\"patient_props['gender']\"\r\n              :items=\"genders\"\r\n              :rules=\"[v => !!v || 'Gender is required']\"\r\n              label=\"Gender\"\r\n              required\r\n            ></v-select>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"patient_props['height']\"\r\n              :rules=\"nameRules\"\r\n              label=\"Height [cm]\"\r\n              required\r\n              ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"patient_props['weight']\"\r\n              :rules=\"nameRules\"\r\n              label=\"Weight [kg]\"\r\n              required\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n          </v-expansion-panel>\r\n\r\n          <v-expansion-panel>\r\n          <v-expansion-panel-title>\r\n            Environment Properties\r\n          </v-expansion-panel-title>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-textarea\r\n              v-model=\"environment_props['surrounding']\"\r\n              label=\"Surrounding\"\r\n            ></v-textarea>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"environment_props['altitude']\"\r\n              :rules=\"nameRules\"\r\n              label=\"Altitude or Elevation\"\r\n              required\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"environment_props['temperature']\"\r\n              :rules=\"nameRules\"\r\n              label=\"Temperature [C]\"\r\n              required\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"environment_props['pressure']\"\r\n              :rules=\"nameRules\"\r\n              label=\"Pressure [mmHg]\"\r\n              required\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"environment_props['co2']\"\r\n              :rules=\"nameRules\"\r\n              label=\"Ambient CO2 [fraction]\"\r\n              required\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-combobox\r\n              v-model=\"environment_props['sounds']\"\r\n              label=\"Ambient Sounds\"\r\n              multiple\r\n              chips\r\n              hint='Click \"enter\" to add multiple items'\r\n            ></v-combobox>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-combobox\r\n              v-model=\"environment_props['smells']\"\r\n              label=\"Smells\"\r\n              multiple\r\n              chips\r\n              hint='Click \"enter\" to add multiple items'\r\n            ></v-combobox>\r\n          </v-expansion-panel-text>\r\n\r\n          </v-expansion-panel>\r\n\r\n          <v-expansion-panel>\r\n          <v-expansion-panel-title>\r\n            Educational Encounter Properties\r\n          </v-expansion-panel-title>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-textarea\r\n              v-model=\"ed_props['instruction']\"\r\n              label=\"Instructions\"\r\n            ></v-textarea>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-textarea\r\n              v-model=\"ed_props['narrative']\"\r\n              label=\"Narrative\"\r\n            ></v-textarea>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"ed_props['learnerCount']\"\r\n              label=\"Number of Learners\"\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"ed_props['role']\"\r\n              label=\"Roles\"\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-combobox\r\n              v-model=\"ed_props['setup_checklist']\"\r\n              label=\"Setup Checklist\"\r\n              multiple\r\n              chips\r\n              hint='Click \"enter\" to add multiple items'\r\n            ></v-combobox>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-combobox\r\n              v-model=\"ed_props['equipment']\"\r\n              label=\"Equipment\"\r\n              multiple\r\n              chips\r\n              hint='Click \"enter\" to add multiple items'\r\n            ></v-combobox>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-combobox\r\n              v-model=\"ed_props['supplies']\"\r\n              label=\"Supplies\"\r\n              multiple\r\n              chips\r\n              hint='Click \"enter\" to add multiple items'\r\n            ></v-combobox>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"ed_props['duration']\"\r\n              label=\"Estimated Duration\"\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"ed_props['scenario_type']\"\r\n              label=\"Scenario Type\"\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"ed_props['assessment_type']\"\r\n              label=\"Assessment Type\"\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"ed_props['learner_group']\"\r\n              label=\"Learner Group\"\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-combobox\r\n              v-model=\"ed_props['objectives']\"\r\n              label=\"Learning Objectives\"\r\n              multiple\r\n              chips\r\n              hint='Click \"enter\" to add multiple items'\r\n            ></v-combobox>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-combobox\r\n              v-model=\"ed_props['task']\"\r\n              label=\"Task Descriptions\"\r\n              multiple\r\n              chips\r\n              hint='Click \"enter\" to add multiple items'\r\n            ></v-combobox>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-combobox\r\n              v-model=\"ed_props['conditions']\"\r\n              label=\"Performance Conditions\"\r\n              multiple\r\n              chips\r\n              hint='Click \"enter\" to add multiple items'\r\n            ></v-combobox>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-combobox\r\n              v-model=\"ed_props['exit_criteria']\"\r\n              label=\"Exit Criteria\"\r\n              multiple\r\n              chips\r\n              hint='Click \"enter\" to add multiple items'\r\n            ></v-combobox>\r\n          </v-expansion-panel-text>\r\n          </v-expansion-panel>\r\n\r\n          <v-expansion-panel>\r\n          <v-expansion-panel-title>\r\n            Capabilities\r\n          </v-expansion-panel-title>\r\n          <v-expansion-panel-text>\r\n            <div v-for=\"(exp, index) in capability\" :key=\"index\">\r\n              <v-checkbox-btn v-model=\"exp.required\" label=\"Required\"></v-checkbox-btn>\r\n              <v-text-field v-model=\"exp.name\" label=\"Capability Name\"></v-text-field>\r\n              <v-text-field v-model=\"exp.data\" label=\"Configuration Data\"></v-text-field>\r\n              <v-text-field v-model=\"exp.propertyName\" label=\"Property Name\"></v-text-field>\r\n              <v-select v-model=\"exp.dataType\" label=\"Data Type\" :items=\"['string', 'number', 'boolean', 'option']\"></v-select>\r\n              <v-file-input v-model=\"exp.value\" label=\"Value\"></v-file-input>\r\n              <v-btn @click=\"removeCapability(index)\">Remove Capability</v-btn>\r\n              <br>\r\n              <br>\r\n            </div>\r\n            <v-btn @click=\"addCapability\">Add Capability</v-btn>\r\n          </v-expansion-panel-text>\r\n          </v-expansion-panel>\r\n\r\n\r\n        </v-expansion-panels>\r\n        <br>\r\n        <br>\r\n\r\n\r\n        <v-btn\r\n          :disabled=\"!valid\"\r\n          color=\"success\"\r\n          class=\"mr-4\"\r\n          @click=\"saveXML\"\r\n        >\r\n          Submit\r\n        </v-btn>\r\n\r\n        <v-btn\r\n          color=\"error\"\r\n          class=\"mr-4\"\r\n          @click=\"reset\"\r\n        >\r\n          Reset Form\r\n        </v-btn>\r\n\r\n      </v-form>\r\n      </v-col>\r\n      </v-row>\r\n\r\n    </v-main>\r\n</template>\r\n\r\n<script>\r\n  import xmlbuilder from 'xmlbuilder'\r\n\r\n  export default {\r\n    data: () => ({\r\n      drawer: false,\r\n      valid: true,\r\n      expanded: [0],\r\n      capability: [\r\n        { required: [],\r\n          name: [],\r\n          data: [],\r\n          propertyName: [],\r\n          dataType: [],\r\n          value: [] },\r\n      ],\r\n      scenario_props: {\r\n        \"name\":[],\r\n        \"authors\":[]\r\n      },\r\n      patient_props: {\r\n        \"type\": [],\r\n        \"name\": [],\r\n        \"title\": [],\r\n        \"age\": [],\r\n        \"gender\": [],\r\n        \"height\": [],\r\n        \"weight\": [],\r\n      },\r\n      environment_props: {\r\n        \"surrounding\": [],\r\n        \"altitude\":[],\r\n        \"temperature\":[],\r\n        \"pressure\":[],\r\n        \"co2\":[],\r\n        \"sounds\":[],\r\n        \"smells\":[]\r\n      },\r\n      ed_props: {\r\n        'instruction':[],\r\n        'narrative':[],\r\n        'learnerCount':[],\r\n        'role':[],\r\n        'setup_checklist':[],\r\n        'equipment':[],\r\n        'supplies':[],\r\n        'duration':[],\r\n        'scenario_type':[],\r\n        'assessment_type':[],\r\n        'learner_group':[],\r\n        'objectives':[],\r\n        'task':[],\r\n        'conditions':[],\r\n        'exit_criteria':[]\r\n      },\r\n      nameRules: [\r\n        v => !!v || 'Name is required',\r\n      ],\r\n      genders: [\r\n        'Male',\r\n        'Female'\r\n      ],\r\n      types: [\r\n        'Medical Doctor',\r\n        'Paramedic',\r\n        'Nurse'\r\n      ],\r\n    }),\r\n    methods: {\r\n      addCapability() {\r\n        this.capability.push({\r\n          required: '',\r\n          name: '',\r\n          data: '',\r\n          propertyName: '',\r\n          dataType: '',\r\n          value: ''\r\n          });\r\n      },\r\n      removeCapability(index) {\r\n        this.capability.splice(index, 1);\r\n      },\r\n      validate () {\r\n        this.$refs.form.validate()\r\n      },\r\n      reset () {\r\n        this.$refs.form.reset()\r\n      },\r\n      saveXML () {\r\n        const xml = xmlbuilder.create('AMMConfiguration', {encoding: 'UTF-8'})\r\n          xml.att({'xmlns:xsd':'http://www.w3.org/2001/XMLSchema',\r\n                'xmlns:xsi':'http://www.w3.org/2001/XMLSchema-instance'\r\n          })\r\n          const metadata = xml.ele('metadata')\r\n            for (var key1 in this.patient_props) {\r\n              if (Array.isArray(this.patient_props[key1])) {\r\n                for (var item1 in this.patient_props[key1]) {\r\n                  metadata.ele(key1, this.patient_props[key1][item1])\r\n                }\r\n              } else {\r\n                metadata.ele(key1, this.patient_props[key1])\r\n              }\r\n            }\r\n  \r\n            for (var key2 in this.environment_props) {\r\n              if (Array.isArray(this.environment_props[key2])) {\r\n                for (var item2 in this.environment_props[key2]) {\r\n                  metadata.ele(key2, this.environment_props[key2][item2])\r\n                }\r\n              } else {\r\n                metadata.ele(key2, this.environment_props[key2])\r\n              }\r\n            }\r\n            for (var key3 in this.ed_props) {\r\n              if (Array.isArray(this.ed_props[key3])) {\r\n                for (var item3 in this.ed_props[key3]) {\r\n                  metadata.ele(key3, this.ed_props[key3][item3])\r\n                }\r\n              } else {\r\n                metadata.ele(key3, this.ed_props[key3])\r\n              }\r\n            }\r\n            for (var item4 in this.capability) {\r\n              for (var key4 in this.capability[item4]) {\r\n                  metadata.ele(key4, this.capability[item4][key4])\r\n                }\r\n            }\r\n        var xmlString = xml.end({ pretty: true });\r\n        const blob = new Blob([xmlString], {type:'text/xml'})\r\n        const link = document.createElement('a')\r\n        link.href = URL.createObjectURL(blob)\r\n        link.download = 'data.xml'\r\n        link.click()\r\n      }\r\n    }\r\n  }\r\n  </script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}