{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport xmlbuilder from 'xmlbuilder';\nexport default {\n  data: () => ({\n    age_min: 0,\n    age_max: 120,\n    height_min: 0,\n    height_max: 200,\n    weight_min: 0,\n    weight_max: 200,\n    tab: 'home',\n    name: [],\n    drawer: false,\n    valid: true,\n    expanded: [0],\n    capability: [{\n      required: [],\n      name: [],\n      data: [],\n      propertyName: [],\n      dataType: [],\n      value: []\n    }],\n    scenario_props: {\n      \"name\": [],\n      \"authors\": []\n    },\n    patient_props: {\n      \"type\": [],\n      \"name\": [],\n      \"title\": [],\n      \"age\": 50,\n      \"gender\": [],\n      \"height\": 150,\n      \"weight\": 75\n    },\n    environment_props: {\n      \"surrounding\": [],\n      \"altitude\": [],\n      \"temperature\": [],\n      \"pressure\": [],\n      \"co2\": [],\n      \"sounds\": [],\n      \"smells\": []\n    },\n    ed_props: {\n      'instruction': [],\n      'narrative': [],\n      'learnerCount': [],\n      'role': [],\n      'setup_checklist': [],\n      'equipment': [],\n      'supplies': [],\n      'duration': [],\n      'scenario_type': [],\n      'assessment_type': [],\n      'learner_group': [],\n      'objectives': [],\n      'task': [],\n      'conditions': [],\n      'exit_criteria': []\n    },\n    nameRules: [v => !!v || 'Name is required'],\n    genders: ['Male', 'Female'],\n    types: ['Medical Doctor', 'Paramedic', 'Nurse']\n  }),\n  methods: {\n    addCapability() {\n      this.capability.push({\n        required: '',\n        name: '',\n        data: '',\n        propertyName: '',\n        dataType: '',\n        value: ''\n      });\n    },\n    nextTab(id) {\n      this.tab = id;\n    },\n    removeCapability(index) {\n      this.capability.splice(index, 1);\n    },\n    validate() {\n      this.$refs.form.validate();\n    },\n    reset() {\n      this.$refs.form.reset();\n    },\n    pathClicked(id) {\n      let pathElement = document.getElementById(id);\n      if (this.name.some(x => Object.keys(x).includes(id))) {\n        this.name = this.name.filter(x => !Object.keys(x).includes(id));\n      } else {\n        this.name.push({\n          [id]: ''\n        });\n      }\n      if (pathElement.classList.contains(\"active\")) {\n        pathElement.classList.remove(\"active\");\n      } else {\n        pathElement.classList.add(\"active\");\n      }\n    },\n    saveXML() {\n      const xml = xmlbuilder.create('AMMConfiguration', {\n        encoding: 'UTF-8'\n      });\n      xml.att({\n        'xmlns:xsd': 'http://www.w3.org/2001/XMLSchema',\n        'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance'\n      });\n      const metadata = xml.ele('metadata');\n      for (var key1 in this.patient_props) {\n        if (Array.isArray(this.patient_props[key1])) {\n          for (var item1 in this.patient_props[key1]) {\n            metadata.ele(key1, this.patient_props[key1][item1]);\n          }\n        } else {\n          metadata.ele(key1, this.patient_props[key1]);\n        }\n      }\n      for (var key2 in this.environment_props) {\n        if (Array.isArray(this.environment_props[key2])) {\n          for (var item2 in this.environment_props[key2]) {\n            metadata.ele(key2, this.environment_props[key2][item2]);\n          }\n        } else {\n          metadata.ele(key2, this.environment_props[key2]);\n        }\n      }\n      for (var key3 in this.ed_props) {\n        if (Array.isArray(this.ed_props[key3])) {\n          for (var item3 in this.ed_props[key3]) {\n            metadata.ele(key3, this.ed_props[key3][item3]);\n          }\n        } else {\n          metadata.ele(key3, this.ed_props[key3]);\n        }\n      }\n      for (var item4 in this.capability) {\n        for (var key4 in this.capability[item4]) {\n          metadata.ele(key4, this.capability[item4][key4]);\n        }\n      }\n      var xmlString = xml.end({\n        pretty: true\n      });\n      const blob = new Blob([xmlString], {\n        type: 'text/xml'\n      });\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = 'data.xml';\n      link.click();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["xmlbuilder","data","age_min","age_max","height_min","height_max","weight_min","weight_max","tab","name","drawer","valid","expanded","capability","required","propertyName","dataType","value","scenario_props","patient_props","environment_props","ed_props","nameRules","v","genders","types","methods","addCapability","push","nextTab","id","removeCapability","index","splice","validate","$refs","form","reset","pathClicked","pathElement","document","getElementById","some","x","Object","keys","includes","filter","classList","contains","remove","add","saveXML","xml","create","encoding","att","metadata","ele","key1","Array","isArray","item1","key2","item2","key3","item3","item4","key4","xmlString","end","pretty","blob","Blob","type","link","createElement","href","URL","createObjectURL","download","click"],"sourceRoot":"","sources":["/Users/stlp/Desktop/Spring 2023/BIOEN 405/User Interface/MoHSES-Scenario-User-Interface/src/views/MoHSESView.vue"],"sourcesContent":["<template>\n    <v-toolbar\n      color=\"primary\"\n    >\n      <v-toolbar-title>MoHSES Scenario Creation Tool</v-toolbar-title>\n    </v-toolbar>\n    <v-row>\n        <v-col cols=\"3\">\n            <v-tabs\n                v-model=\"tab\"\n                direction=\"vertical\"\n                color=\"primary\"\n            >\n                <v-tab value=\"home\">\n                    <v-icon start>\n                        mdi-home\n                    </v-icon>\n                    About this page\n                </v-tab>\n                <v-tab value=\"option-1\">\n                    <v-icon start>\n                        mdi-form-textbox\n                    </v-icon>\n                    Scenario Properties\n                </v-tab>\n                <v-tab value=\"option-2\">\n                    <v-icon start>\n                        mdi-account\n                    </v-icon>\n                    Patient Properties\n                </v-tab>\n                <v-tab value=\"option-3\">\n                    <v-icon start>\n                        mdi-access-point\n                    </v-icon>\n                    Environment Properties\n                </v-tab>\n                <v-tab value=\"option-4\">\n                    <v-icon start>\n                        mdi-list-status\n                    </v-icon>\n                    Educational Encounter Properties\n                </v-tab>\n                <v-tab value=\"option-5\">\n                    <v-icon start>\n                        mdi-tools\n                    </v-icon>\n                    Capabilities\n                </v-tab>\n            </v-tabs>\n        </v-col>\n        <v-col cols=\"8\" class=\"my-content\">\n            <v-window v-model=\"tab\">\n                <v-main>\n                    <v-window-item value=\"home\" :transition=\"false\" :reverse-transition=\"false\">\n                        <p>This is the home page.</p>\n                        <v-col cols=\"auto\">\n                            <v-btn @click=\"nextTab('option-1')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\n                        </v-col>\n                    </v-window-item>\n                    <v-window-item value=\"option-1\" :transition=\"false\" :reverse-transition=\"false\">\n                        <v-card flat>\n                            <v-card-text>\n                                <v-select\n                                v-model=\"patient_props['type']\"\n                                :items=\"types\"\n                                :rules=\"[v => !!v || 'Type is required']\"\n                                label=\"Instructor Type\"\n                                required\n                                clearable\n                                ></v-select>\n                                <v-text-field\n                                v-model=\"scenario_props['name']\"\n                                label=\"Scenario Name\"\n                                required\n                                clearable\n                                ></v-text-field>\n\n                                <v-combobox\n                                v-model=\"scenario_props['authors']\"\n                                label=\"Authors\"\n                                required\n                                clearable\n                                multiple\n                                chips\n                                hint='Click \"enter\" to add multiple items'\n                                ></v-combobox>\n                            </v-card-text>\n                     </v-card>\n                    <br>\n                    <v-row justify=\"center\">\n                    <v-col cols=\"auto\">\n                        <v-btn @click=\"nextTab('home')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\n                    </v-col>\n                    <v-col cols=\"auto\">\n                        <v-btn @click=\"nextTab('option-2')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\n                    </v-col>\n                    </v-row>\n                    <br>\n                    </v-window-item>\n                </v-main>\n\n        <v-window-item value=\"option-2\" :transition=\"false\" :reverse-transition=\"false\">\n          <v-card flat>\n                <v-card-text>\n                    <v-text-field\n                    v-model=\"patient_props['name']\"\n                    :rules=\"nameRules\"\n                    label=\"Name\"\n                    required\n                    clearable\n                    ></v-text-field>\n\n                    <v-text-field\n                    v-model=\"patient_props['title']\"\n                    :rules=\"nameRules\"\n                    label=\"Title or Rank\"\n                    required\n                    clearable\n                    ></v-text-field>\n\n                    <v-select\n                    v-model=\"patient_props['gender']\"\n                    :items=\"genders\"\n                    :rules=\"[v => !!v || 'Sex is required']\"\n                    label=\"Sex\"\n                    required\n                    ></v-select>\n\n            <v-slider\n              v-model=\"patient_props['age']\"\n              label=\"Age\"\n              class=\"align-center\"\n              :max=\"age_max\"\n              :min=\"age_min\"\n              :step=\"1\"\n            >\n              <template v-slot:append>\n                <v-text-field\n                  v-model=\"patient_props['age']\"\n                  hide-details\n                  single-line\n                  density=\"compact\"\n                  type=\"number\"\n                  style=\"width: 90px\"\n                ></v-text-field>\n              </template>\n            </v-slider>\n            \n            <v-slider\n              v-model=\"patient_props['height']\"\n              label=\"Height [cm]\"\n              class=\"align-center\"\n              :max=\"height_max\"\n              :min=\"height_min\"\n              :step=\"0.1\"\n            >\n              <template v-slot:append>\n                <v-text-field\n                  v-model=\"patient_props['height']\"\n                  hide-details\n                  single-line\n                  density=\"compact\"\n                  type=\"number\"\n                  style=\"width: 90px\"\n                ></v-text-field>\n              </template>\n            </v-slider>\n\n            <v-slider\n              v-model=\"patient_props['weight']\"\n              label=\"Weight [kg]\"\n              class=\"align-center\"\n              :max=\"weight_max\"\n              :min=\"weight_min\"\n              :step=\"0.1\"\n            >\n              <template v-slot:append>\n                <v-text-field\n                  v-model=\"patient_props['weight']\"\n                  hide-details\n                  single-line\n                  density=\"compact\"\n                  type=\"number\"\n                  style=\"width: 90px\"\n                ></v-text-field>\n              </template>\n            </v-slider>\n\n            </v-card-text> \n          </v-card>\n          <br>\n          <v-row justify=\"center\">\n          <v-col cols=\"auto\">\n            <v-btn @click=\"nextTab('option-1')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\n          </v-col>\n          <v-col cols=\"auto\">\n            <v-btn @click=\"nextTab('option-3')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\n          </v-col>\n        </v-row>\n        <br>\n        </v-window-item>\n        <v-window-item value=\"option-3\" :transition=\"false\" :reverse-transition=\"false\">\n          <v-card flat>\n            <v-card-text>\n              <v-textarea\n              v-model=\"environment_props['surrounding']\"\n              label=\"Surrounding\"\n            ></v-textarea>\n\n            <v-text-field\n              v-model=\"environment_props['altitude']\"\n              :rules=\"nameRules\"\n              label=\"Altitude or Elevation\"\n              required\n            ></v-text-field>\n\n            <v-text-field\n              v-model=\"environment_props['temperature']\"\n              :rules=\"nameRules\"\n              label=\"Temperature [C]\"\n              required\n            ></v-text-field>\n\n            <v-text-field\n              v-model=\"environment_props['pressure']\"\n              :rules=\"nameRules\"\n              label=\"Pressure [mmHg]\"\n              required\n            ></v-text-field>\n \n            <v-text-field\n              v-model=\"environment_props['co2']\"\n              :rules=\"nameRules\"\n              label=\"Ambient CO2 [fraction]\"\n              required\n            ></v-text-field>\n\n            <v-combobox\n              v-model=\"environment_props['sounds']\"\n              label=\"Ambient Sounds\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n\n            <v-combobox\n              v-model=\"environment_props['smells']\"\n              label=\"Smells\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n            </v-card-text>\n          </v-card>\n          <br>\n          <v-row justify=\"center\">\n          <v-col cols=\"auto\">\n            <v-btn @click=\"nextTab('option-2')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\n          </v-col>\n          <v-col cols=\"auto\">\n            <v-btn @click=\"nextTab('option-4')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\n          </v-col>\n        </v-row>\n        <br>\n        </v-window-item>\n\n        <v-window-item value=\"option-4\" :transition=\"false\" :reverse-transition=\"false\">\n          <v-card flat>\n            <v-card-text>\n              <v-textarea\n              v-model=\"ed_props['instruction']\"\n              label=\"Instructions\"\n            ></v-textarea>\n\n            <v-textarea\n              v-model=\"ed_props['narrative']\"\n              label=\"Narrative\"\n            ></v-textarea>\n\n            <v-text-field\n              v-model=\"ed_props['learnerCount']\"\n              label=\"Number of Learners\"\n            ></v-text-field>\n\n            <v-text-field\n              v-model=\"ed_props['role']\"\n              label=\"Roles\"\n            ></v-text-field>\n\n            <v-combobox\n              v-model=\"ed_props['setup_checklist']\"\n              label=\"Setup Checklist\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n\n            <v-combobox\n              v-model=\"ed_props['equipment']\"\n              label=\"Equipment\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n\n            <v-combobox\n              v-model=\"ed_props['supplies']\"\n              label=\"Supplies\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n\n            <v-text-field\n              v-model=\"ed_props['duration']\"\n              label=\"Estimated Duration\"\n            ></v-text-field>\n\n            <v-text-field\n              v-model=\"ed_props['scenario_type']\"\n              label=\"Scenario Type\"\n            ></v-text-field>\n\n            <v-text-field\n              v-model=\"ed_props['assessment_type']\"\n              label=\"Assessment Type\"\n            ></v-text-field>\n\n            <v-text-field\n              v-model=\"ed_props['learner_group']\"\n              label=\"Learner Group\"\n            ></v-text-field>\n\n            <v-combobox\n              v-model=\"ed_props['objectives']\"\n              label=\"Learning Objectives\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n\n            <v-combobox\n              v-model=\"ed_props['task']\"\n              label=\"Task Descriptions\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n\n            <v-combobox\n              v-model=\"ed_props['conditions']\"\n              label=\"Performance Conditions\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n\n            <v-combobox\n              v-model=\"ed_props['exit_criteria']\"\n              label=\"Exit Criteria\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n\n            </v-card-text>\n          </v-card>\n          <br>\n          <v-row justify=\"center\">\n          <v-col cols=\"auto\">\n            <v-btn @click=\"nextTab('option-3')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\n          </v-col>\n          <v-col cols=\"auto\">\n            <v-btn @click=\"nextTab('option-5')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\n          </v-col>\n        </v-row>\n        <br>\n        </v-window-item>\n        \n        <v-window-item value=\"option-5\" :transition=\"false\" :reverse-transition=\"false\">\n            <div v-for=\"(exp, index) in capability\" :key=\"index\">\n                <v-checkbox-btn v-model=\"exp.required\" label=\"Required\"></v-checkbox-btn>\n                <v-text-field v-model=\"exp.name\" label=\"Capability Name\"></v-text-field>\n                <v-text-field v-model=\"exp.data\" label=\"Configuration Data\"></v-text-field>\n                <v-text-field v-model=\"exp.propertyName\" label=\"Property Name\"></v-text-field>\n                <v-select v-model=\"exp.dataType\" label=\"Data Type\" :items=\"['string', 'number', 'boolean', 'option']\"></v-select>\n                <v-file-input v-model=\"exp.value\" label=\"Value\"></v-file-input>\n                <v-btn @click=\"removeCapability(index)\">Remove Capability</v-btn>\n            <br>\n            <br>\n            </div>\n            <v-btn @click=\"addCapability\">Add Capability</v-btn>\n            <br>\n          <v-row justify=\"center\">\n          <v-col cols=\"auto\">\n            <v-btn @click=\"nextTab('option-4')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\n          </v-col>\n          <v-col cols=\"auto\">\n            <v-btn @click=\"nextTab('option-6')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\n          </v-col>\n        </v-row>\n        <br>\n\n  <v-btn\n    :disabled=\"!valid\"\n    color=\"success\"\n    class=\"mr-4\"\n  >\n    Submit\n  </v-btn>\n  <v-btn\n    color=\"error\"\n    class=\"mr-4\"\n    @click=\"reset\"\n  >\n    Reset Form\n  </v-btn>\n  <br>\n</v-window-item>\n</v-window>\n</v-col>\n</v-row>\n</template>\n\n<script>\nimport xmlbuilder from 'xmlbuilder'\n  export default {\n    data: () => ({\n      age_min: 0,\n      age_max: 120,\n      height_min: 0,\n      height_max: 200,\n      weight_min: 0,\n      weight_max: 200,\n      tab: 'home',\n      name: [],\n      drawer: false,\n      valid: true,\n      expanded: [0],\n      capability: [\n        { required: [],\n          name: [],\n          data: [],\n          propertyName: [],\n          dataType: [],\n          value: [] },\n      ],\n      scenario_props: {\n        \"name\":[],\n        \"authors\":[]\n      },\n      patient_props: {\n        \"type\": [],\n        \"name\": [],\n        \"title\": [],\n        \"age\": 50,\n        \"gender\": [],\n        \"height\": 150,\n        \"weight\": 75,\n      },\n      environment_props: {\n        \"surrounding\": [],\n        \"altitude\":[],\n        \"temperature\":[],\n        \"pressure\":[],\n        \"co2\":[],\n        \"sounds\":[],\n        \"smells\":[]\n      },\n      ed_props: {\n        'instruction':[],\n        'narrative':[],\n        'learnerCount':[],\n        'role':[],\n        'setup_checklist':[],\n        'equipment':[],\n        'supplies':[],\n        'duration':[],\n        'scenario_type':[],\n        'assessment_type':[],\n        'learner_group':[],\n        'objectives':[],\n        'task':[],\n        'conditions':[],\n        'exit_criteria':[]\n      },\n      nameRules: [\n        v => !!v || 'Name is required',\n      ],\n      genders: [\n        'Male',\n        'Female'\n      ],\n      types: [\n        'Medical Doctor',\n        'Paramedic',\n        'Nurse'\n      ],\n    }),\n    methods: {\n      addCapability() {\n        this.capability.push({\n          required: '',\n          name: '',\n          data: '',\n          propertyName: '',\n          dataType: '',\n          value: ''\n          });\n      },\n      nextTab(id){\n        this.tab = id;\n      },\n      removeCapability(index) {\n        this.capability.splice(index, 1);\n      },\n      validate () {\n        this.$refs.form.validate()\n      },\n      reset () {\n        this.$refs.form.reset()\n      },\n      pathClicked(id) {\n        let pathElement = document.getElementById(id);\n        if (this.name.some(x => Object.keys(x).includes(id))) {\n          this.name = this.name.filter(x => !Object.keys(x).includes(id));\n        } else {\n          this.name.push({[id]: ''})\n        }\n        if (pathElement.classList.contains(\"active\")) {\n          pathElement.classList.remove(\"active\");\n        } else {\n          pathElement.classList.add(\"active\");\n        }\n      },\n      saveXML () {\n        const xml = xmlbuilder.create('AMMConfiguration', {encoding: 'UTF-8'})\n          xml.att({'xmlns:xsd':'http://www.w3.org/2001/XMLSchema',\n                'xmlns:xsi':'http://www.w3.org/2001/XMLSchema-instance'\n          })\n          const metadata = xml.ele('metadata')\n            for (var key1 in this.patient_props) {\n              if (Array.isArray(this.patient_props[key1])) {\n                for (var item1 in this.patient_props[key1]) {\n                  metadata.ele(key1, this.patient_props[key1][item1])\n                }\n              } else {\n                metadata.ele(key1, this.patient_props[key1])\n              }\n            }\n  \n            for (var key2 in this.environment_props) {\n              if (Array.isArray(this.environment_props[key2])) {\n                for (var item2 in this.environment_props[key2]) {\n                  metadata.ele(key2, this.environment_props[key2][item2])\n                }\n              } else {\n                metadata.ele(key2, this.environment_props[key2])\n              }\n            }\n            for (var key3 in this.ed_props) {\n              if (Array.isArray(this.ed_props[key3])) {\n                for (var item3 in this.ed_props[key3]) {\n                  metadata.ele(key3, this.ed_props[key3][item3])\n                }\n              } else {\n                metadata.ele(key3, this.ed_props[key3])\n              }\n            }\n            for (var item4 in this.capability) {\n              for (var key4 in this.capability[item4]) {\n                  metadata.ele(key4, this.capability[item4][key4])\n                }\n            }\n        var xmlString = xml.end({ pretty: true });\n        const blob = new Blob([xmlString], {type:'text/xml'})\n        const link = document.createElement('a')\n        link.href = URL.createObjectURL(blob)\n        link.download = 'data.xml'\n        link.click()\n      }\n    },\n  }\n  </script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}