{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport xmlbuilder from 'xmlbuilder';\nexport default {\n  data: () => ({\n    environment_props: {\n      \"temperature\": null,\n      \"pressure\": null,\n      \"humidity\": null,\n      \"state\": null,\n      \"cityName\": null\n    },\n    temperature_min: 0,\n    temperature_max: 100,\n    pressure_min: 0,\n    pressure_max: 1000,\n    weatherData: null,\n    lat: null,\n    lon: null,\n    date: null,\n    dialog1: null,\n    dialog: null,\n    age_min: 18,\n    age_max: 65,\n    core_temp_min: 0,\n    core_temp_max: 70,\n    heart_rate_min: 50,\n    heart_rate_max: 109,\n    resp_rate_min: 12,\n    resp_rate_max: 20,\n    height_min: 55,\n    height_max: 190,\n    height_units: ['cm', 'in'],\n    height_unit: 'cm',\n    weight_min: 20,\n    weight_max: 250,\n    weight_units: ['kg', 'lb'],\n    weight_unit: 'kg',\n    time_min: 0,\n    time_max: 60,\n    action_time: 0,\n    action_unit: 'min',\n    sev_min: 0,\n    sev_max: 1,\n    med_options: ['A', 'B', 'C'],\n    tab: 'home',\n    name: [],\n    sides: ['Left', 'Right'],\n    open_closed: ['Open', 'Closed'],\n    drawer: false,\n    valid: true,\n    expanded: [0],\n    scenario_file_name: [],\n    action: [{\n      region: [],\n      type: []\n    }],\n    colors: {\n      'Head': 'blue',\n      'Neck': 'black',\n      'Chest': 'black',\n      'Back': 'black',\n      'Abdomen': 'black',\n      'Pelvis': 'black',\n      'Extremities': 'black'\n    },\n    patient_props: {\n      \"Name\": [],\n      \"Sex\": [],\n      \"age\": 44,\n      \"weight\": 65,\n      \"height\": 170\n    },\n    patient_vitals: {\n      \"BloodTypeABO\": 'AB',\n      \"BloodTypeRh\": 'Positive',\n      \"DiastolicArterialPressureBaseline\": [],\n      \"HeartRateBaseline\": 72,\n      \"RespirationRateBaseline\": 14,\n      \"SystolicArterialPressureBaseline\": []\n    },\n    scenario_props: {\n      'Name': [],\n      'Description': []\n    },\n    genders: ['Male', 'Female'],\n    patient_body: {\n      'Head': ['Hemorrhage', 'Brain Injury', 'Acute Stress', 'Burn Wound'],\n      'Neck': ['Airway Obstruction', 'Apnea', 'Burn Wound'],\n      'Chest': ['Asthma Attack', 'Acute Respiratory Distress', 'Bronchoconstriction', 'Cardiac Arrest', 'Tension Pneumothorax', 'Burn Wound', 'Hemorrhage'],\n      'Back': ['Burn Wound'],\n      'Abdomen': ['Burn Wound'],\n      'Pelvis': ['Burn Wound'],\n      'Extremities': ['Burn Wound', 'Hemorrhage']\n    },\n    hemorrhage_regions: {\n      'Head': ['Brain'],\n      'Chest': ['Aorta', 'Myocardium', 'Vena Cava', 'Lung'],\n      'Abdomen': ['Spleen', 'Liver', 'LeftKidney', 'RightKidney', 'Splanchnic', 'SmallIntestine', 'LargeIntestine'],\n      'Extremities': ['LeftArm', 'RightArm', 'LeftLeg', 'RightLeg']\n    },\n    brain_injury_types: ['Diffuse', 'LeftFocal', 'RightFocal'],\n    body_regions: ['Head', 'Neck', 'Chest', 'Back', 'Abdomen', 'Pelvis', 'Extremities'],\n    blood_types: ['A', 'B', 'AB', 'O'],\n    rh: ['Positive', 'Negative'],\n    time_units: ['s', 'min', 'hr']\n  }),\n  methods: {\n    changeColors() {\n      const selected_regions = [];\n      for (var actions in this.action) {\n        selected_regions.push(this.action[actions]['region']);\n      }\n      console.log(selected_regions);\n      for (let region of this.body_regions) {\n        if (selected_regions.includes(region)) {\n          this.colors[region] = 'red';\n        } else {\n          this.colors[region] = 'black';\n        }\n      }\n    },\n    nextTab(id) {\n      this.tab = id;\n    },\n    addAction() {\n      this.action.push({\n        region: '',\n        type: '',\n        severity: ''\n      });\n    },\n    removeAction(index) {\n      this.action.splice(index, 1);\n    },\n    validate() {\n      this.$refs.form.validate();\n    },\n    reset() {\n      this.$refs.form.reset();\n    },\n    pathClicked(id) {\n      let pathElement = document.getElementById(id);\n      if (this.name.some(x => Object.keys(x).includes(id))) {\n        this.name = this.name.filter(x => !Object.keys(x).includes(id));\n      } else {\n        this.name.push({\n          [id]: ''\n        });\n      }\n      if (pathElement.classList.contains(\"active\")) {\n        pathElement.classList.remove(\"active\");\n      } else {\n        pathElement.classList.add(\"active\");\n      }\n    },\n    saveStateXML() {\n      const xml = xmlbuilder.create('Patient', {\n        encoding: 'UTF-8',\n        standalone: \"yes\"\n      });\n      xml.att({\n        'xmlns': \"uri:/mil/tatrc/physiology/datamodel\",\n        'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n        'contentVersion': \"BioGears_7.5\"\n      });\n      for (var key1 in this.patient_props) {\n        if (key1 == 'age') {\n          const Age = xml.ele('Age');\n          Age.att('value', this.patient_props[key1]);\n          Age.att('units', 'yr');\n        } else if (key1 == 'height') {\n          const Height = xml.ele('Height');\n          Height.att('readOnly', 'false');\n          Height.att('value', this.patient_props[key1]);\n          Height.att('unit', this.height_unit);\n        } else if (key1 == 'weight') {\n          const Weight = xml.ele('Weight');\n          Weight.att('readOnly', 'false');\n          Weight.att('value', this.patient_props[key1]);\n          Weight.att('unit', this.weight_unit);\n        } else {\n          xml.ele(key1, this.patient_props[key1]);\n        }\n      }\n      for (var key2 in this.patient_vitals) {\n        if (key2 == 'BloodTypeRh') {\n          if (this.patient_vitals[key2] == 'Positive') {\n            xml.ele(key2, 'true');\n          } else if (this.patient_vitals[key2] == 'Negative') {\n            xml.ele(key2, 'false');\n          }\n        } else if (key2 == 'DiastolicArterialPressureBaseline') {\n          const DiastolicArterialPressureBaseline = xml.ele('DiastolicArterialPressureBaseline');\n          DiastolicArterialPressureBaseline.att('value', this.patient_vitals[key2]);\n          DiastolicArterialPressureBaseline.att('units', 'mmHg');\n        } else if (key2 == 'SystolicArterialPressureBaseline') {\n          const SystolicArterialPressureBaseline = xml.ele('SystolicArterialPressureBaseline');\n          SystolicArterialPressureBaseline.att('value', this.patient_vitals[key2]);\n          SystolicArterialPressureBaseline.att('units', 'mmHg');\n        } else if (key2 == 'HeartRateBaseline') {\n          const HeartRate = xml.ele('HeartRateBaseline');\n          HeartRate.att('value', this.patient_vitals[key2]);\n          HeartRate.att('units', '1/min');\n        } else if (key2 == 'RespirationRateBaseline') {\n          const RespRate = xml.ele('RespirationRateBaseline');\n          RespRate.att('value', this.patient_vitals[key2]);\n          RespRate.att('units', '1/min');\n        } else {\n          xml.ele(key2, this.patient_vitals[key2]);\n        }\n      }\n      var xmlString = xml.end({\n        pretty: true\n      });\n      const blob = new Blob([xmlString], {\n        type: 'text/xml'\n      });\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = 'patientdata.xml';\n      link.click();\n    },\n    saveScenarioXML() {\n      const xml = xmlbuilder.create('Scenario', {\n        encoding: 'UTF-8',\n        standalone: \"yes\"\n      });\n      xml.att({\n        'xmlns': \"uri:/mil/tatrc/physiology/datamodel\",\n        'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n        'contentVersion': \"BioGears_7.5\"\n      });\n      for (var key1 in this.scenario_props) {\n        xml.ele(key1, this.scenario_props[key1]);\n      }\n      const InitialParams = xml.ele('InitialParameters');\n      InitialParams.ele('PatientFile', 'patientdata.xml');\n      const data_req = xml.ele('DataRequests');\n      data_req.att('SamplesPerSecond', 50);\n      const map = data_req.ele('DataRequest');\n      map.att('xsi:type', 'PhysiologyDataRequestData');\n      map.att('Name', 'MeanArterialPressure');\n      map.att('Unit', 'mmHg');\n      map.att('Precision', 1);\n      const sap = data_req.ele('DataRequest');\n      sap.att('xsi:type', 'PhysiologyDataRequestData');\n      sap.att('Name', 'SystolicArterialPressure');\n      sap.att('Unit', 'mmHg');\n      sap.att('Precision', 0);\n      const dap = data_req.ele('DataRequest');\n      dap.att('xsi:type', 'PhysiologyDataRequestData');\n      dap.att('Name', 'DiastolicArterialPressure');\n      dap.att('Unit', 'mmHg');\n      dap.att('Precision', 1);\n      const co = data_req.ele('DataRequest');\n      co.att('xsi:type', 'PhysiologyDataRequestData');\n      co.att('Name', 'CardiacOutput');\n      co.att('Unit', 'L/min');\n      co.att('Precision', 2);\n      const cvp = data_req.ele('DataRequest');\n      cvp.att('xsi:type', 'PhysiologyDataRequestData');\n      cvp.att('Name', 'CentralVenousPressure');\n      cvp.att('Unit', 'mmHg');\n      cvp.att('Precision', 2);\n      const hr = data_req.ele('DataRequest');\n      hr.att('xsi:type', 'PhysiologyDataRequestData');\n      hr.att('Name', 'HeartRate');\n      hr.att('Unit', '');\n      hr.att('Precision', 2);\n      const tv = data_req.ele('DataRequest');\n      tv.att('xsi:type', 'PhysiologyDataRequestData');\n      tv.att('Name', 'TidalVolume');\n      tv.att('Unit', 'mL');\n      tv.att('Precision', 3);\n      const rr = data_req.ele('DataRequest');\n      rr.att('xsi:type', 'PhysiologyDataRequestData');\n      rr.att('Name', 'RespirationRate');\n      rr.att('Unit', '1/min');\n      rr.att('Precision', 2);\n      const oxsat = data_req.ele('DataRequest');\n      oxsat.att('xsi:type', 'PhysiologyDataRequestData');\n      oxsat.att('Name', 'OxygenSaturation');\n      oxsat.att('Unit', 'unitless');\n      oxsat.att('Precision', 3);\n      const ct = data_req.ele('DataRequest');\n      ct.att('xsi:type', 'PhysiologyDataRequestData');\n      ct.att('Name', 'CoreTemperature');\n      ct.att('Unit', 'degC');\n      ct.att('Precision', 1);\n      for (var item2 in this.action) {\n        const act = xml.ele('Action');\n        if (this.action[item2]['type'] == 'Tension Pneumothorax') {\n          act.att('xsi:type', 'TensionPneumothoraxData');\n          act.att('Type', this.action[item2]['openclose']);\n          act.att('Side', this.action[item2]['side']);\n          const sev = act.ele('Severity');\n          sev.att('value', this.action[item2]['severity']);\n        } else if (this.action[item2]['type'] == 'Hemorrhage') {\n          act.att('xsi:type', 'HemorrhageData');\n          act.att('Compartment', this.action[item2]['compartment']);\n          const initrate = act.ele('InitialRate');\n          initrate.att('value', this.action[item2]['hemrate']);\n          initrate.att('unit', 'mL/min');\n        } else {\n          act.att('xsi:type', this.action[item2]['type']);\n          const sev = act.ele('Severity');\n          sev.att('value', this.action[item2]['severity']);\n        }\n      }\n      const time_act = xml.ele('Action');\n      time_act.att('xsi:type', 'AdvanceTimeData');\n      const time = time_act.ele('Time');\n      time.att('value', this.action_time);\n      time.att('unit', this.action_unit);\n      var xmlString = xml.end({\n        pretty: true\n      });\n      const blob = new Blob([xmlString], {\n        type: 'text/xml'\n      });\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = 'biogearsscenario.xml';\n      link.click();\n    },\n    saveBiogearsFiles() {\n      this.saveStateXML();\n      this.saveScenarioXML();\n    },\n    async pullEnvironmentData() {\n      const fetch = require('node-fetch'); // Only needed in Node.js environment\n      var apiKey = '7a72fefa61ba4a84959231957230205'; // Replace with your Weather API key\n      console.log(this.date);\n      try {\n        const response = await fetch(`http://api.weatherapi.com/v1/history.json?key=${apiKey}&q=${this.lat},${this.lon}&dt=${this.date}`);\n        const data = await response.json();\n        // Extract location information\n        const location = data.location;\n        this.environment_props['cityName'] = location.name;\n        this.environment_props['state'] = location.region;\n        if (data.forecast && data.forecast.forecastday && data.forecast.forecastday.length > 0) {\n          this.weatherData = data.forecast.forecastday[0].day;\n          this.environment_props['temperature'] = this.weatherData.avgtemp_c;\n          this.environment_props['humidity'] = this.weatherData.avghumidity;\n          console.log(`Temperature: ${this.environment_props['temperature']} °C`);\n          console.log(`Relative Humidity: ${this.environment_props['humidity']} %`);\n          console.log(data.forecast.forecastday[0].hour);\n          // Calculate the sum of all pressure fields using the reduce() method\n          const sum = data.forecast.forecastday[0].hour.reduce((accumulator, currentObj) => {\n            return accumulator + currentObj.pressure_mb;\n          }, 0);\n          // Calculate the average by dividing the sum by the length of the dataArray\n          this.environment_props['pressure'] = sum / data.forecast.forecastday[0].hour.length / 1.33322;\n        } else {\n          console.log('No weather data found for the given location and date.');\n        }\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AA+fA,OAAOA,UAAS,MAAO,YAAW;AAClC,eAAe;EACdC,IAAI,EAAE,OAAO;IACZC,iBAAiB,EAAE;MAClB,aAAa,EAAE,IAAI;MACnB,UAAU,EAAE,IAAI;MAChB,UAAU,EAAE,IAAI;MAChB,OAAO,EAAE,IAAI;MACb,UAAU,EAAE;IACb,CAAC;IACDC,eAAe,EAAE,CAAC;IAClBC,eAAe,EAAE,GAAG;IACpBC,YAAY,EAAE,CAAC;IACfC,YAAY,EAAE,IAAI;IAClBC,WAAW,EAAE,IAAI;IACjBC,GAAG,EAAE,IAAI;IACTC,GAAG,EAAE,IAAI;IACTC,IAAI,EAAE,IAAI;IACVC,OAAO,EAAE,IAAI;IACbC,MAAM,EAAE,IAAI;IACZC,OAAO,EAAE,EAAE;IACPC,OAAO,EAAE,EAAE;IACXC,aAAa,EAAE,CAAC;IAChBC,aAAa,EAAE,EAAE;IACjBC,cAAc,EAAE,EAAE;IAClBC,cAAc,EAAE,GAAG;IACnBC,aAAa,EAAE,EAAE;IACjBC,aAAa,EAAE,EAAE;IACjBC,UAAU,EAAE,EAAE;IACdC,UAAU,EAAE,GAAG;IACfC,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;IAC1BC,WAAW,EAAE,IAAI;IACjBC,UAAU,EAAE,EAAE;IACdC,UAAU,EAAE,GAAG;IACfC,YAAY,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;IAC1BC,WAAW,EAAE,IAAI;IACjBC,QAAQ,EAAE,CAAC;IACXC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,KAAK;IAClBC,OAAO,EAAE,CAAC;IACVC,OAAO,EAAE,CAAC;IACVC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAC5BC,GAAG,EAAE,MAAM;IACXC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC;IACxBC,WAAW,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC;IAC/BC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,CAAC,CAAC,CAAC;IACbC,kBAAkB,EAAE,EAAE;IACtBC,MAAM,EAAE,CACN;MAAEC,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE;IACR,CAAC,CACF;IACLC,MAAM,EAAE;MACR,MAAM,EAAC,MAAM;MACP,MAAM,EAAE,OAAO;MACf,OAAO,EAAE,OAAO;MAChB,MAAM,EAAC,OAAO;MACd,SAAS,EAAC,OAAO;MACjB,QAAQ,EAAC,OAAO;MAChB,aAAa,EAAC;IACpB,CAAC;IACGC,aAAa,EAAE;MACb,MAAM,EAAE,EAAE;MACV,KAAK,EAAE,EAAE;MACT,KAAK,EAAE,EAAE;MACT,QAAQ,EAAE,EAAE;MACZ,QAAQ,EAAE;IAEZ,CAAC;IACDC,cAAc,EAAE;MACd,cAAc,EAAE,IAAI;MACpB,aAAa,EAAE,UAAU;MACzB,mCAAmC,EAAE,EAAE;MACvC,mBAAmB,EAAE,EAAE;MACvB,yBAAyB,EAAE,EAAE;MAC7B,kCAAkC,EAAC;IACrC,CAAC;IACDC,cAAc,EAAE;MACd,MAAM,EAAE,EAAE;MACV,aAAa,EAAE;IACjB,CAAC;IACDC,OAAO,EAAE,CACP,MAAM,EACN,QAAO,CACR;IACDC,YAAY,EAAE;MACZ,MAAM,EAAC,CAAC,YAAY,EAAE,cAAc,EAAE,cAAc,EAAE,YAAY,CAAC;MACnE,MAAM,EAAC,CAAC,oBAAoB,EAAE,OAAO,EAAE,YAAY,CAAC;MACpD,OAAO,EAAC,CAAC,eAAe,EAAE,4BAA4B,EAAE,qBAAqB,EAAE,gBAAgB,EAAE,sBAAsB,EAAE,YAAY,EAAE,YAAY,CAAC;MACpJ,MAAM,EAAC,CAAC,YAAY,CAAC;MACrB,SAAS,EAAC,CAAC,YAAY,CAAC;MACxB,QAAQ,EAAC,CAAC,YAAY,CAAC;MACvB,aAAa,EAAC,CAAC,YAAY,EAAE,YAAY;IAC3C,CAAC;IACDC,kBAAkB,EAAE;MAClB,MAAM,EAAE,CAAC,OAAO,CAAC;MACjB,OAAO,EAAE,CAAC,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,MAAM,CAAC;MACrD,SAAS,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,gBAAgB,EAAE,gBAAgB,CAAC;MAC7G,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU;IAChE,CAAC;IACDC,kBAAkB,EAAE,CAClB,SAAS,EACT,WAAW,EACX,YAAW,CACZ;IACCC,YAAY,EAAE,CACZ,MAAM,EACN,MAAM,EACN,OAAO,EACP,MAAM,EACN,SAAS,EACT,QAAQ,EACR,aAAa;IAEfC,WAAW,EAAE,CACX,GAAG,EACH,GAAG,EACH,IAAI,EACJ,GAAE,CACH;IACDC,EAAE,EAAE,CACF,UAAU,EACV,UAAS,CACV;IACDC,UAAU,EAAE,CACV,GAAG,EACH,KAAK,EACL,IAAG;EAEV,CAAC,CAAC;EACFC,OAAO,EAAE;IACRC,YAAY,GAAG;MACd,MAAMC,gBAAe,GAAI,EAAC;MAC1B,KAAK,IAAIC,OAAM,IAAK,IAAI,CAAClB,MAAM,EAAE;QAChCiB,gBAAgB,CAACE,IAAI,CAAC,IAAI,CAACnB,MAAM,CAACkB,OAAO,CAAC,CAAC,QAAQ,CAAC;MACrD;MACAE,OAAO,CAACC,GAAG,CAACJ,gBAAgB;MAC3B,KAAK,IAAIhB,MAAK,IAAK,IAAI,CAACU,YAAY,EAAE;QACrC,IAAIM,gBAAgB,CAACK,QAAQ,CAACrB,MAAM,CAAC,EAAE;UACtC,IAAI,CAACE,MAAM,CAACF,MAAM,IAAI,KAAK;QAC5B,OACK;UACJ,IAAI,CAACE,MAAM,CAACF,MAAM,IAAI,OAAO;QAC9B;MACD;IACF,CAAC;IACDsB,OAAO,CAACC,EAAE,EAAE;MACV,IAAI,CAAChC,GAAE,GAAIgC,EAAE;IACd,CAAC;IACDC,SAAS,GAAG;MACX,IAAI,CAACzB,MAAM,CAACmB,IAAI,CAAC;QAChBlB,MAAM,EAAE,EAAE;QACVC,IAAI,EAAE,EAAE;QACRwB,QAAQ,EAAE;MACX,CAAC,CAAC;IACH,CAAC;IACDC,YAAY,CAACC,KAAK,EAAE;MACnB,IAAI,CAAC5B,MAAM,CAAC6B,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAC7B,CAAC;IACDE,QAAQ,GAAG;MACV,IAAI,CAACC,KAAK,CAACC,IAAI,CAACF,QAAQ,EAAC;IAC1B,CAAC;IACDG,KAAK,GAAG;MACP,IAAI,CAACF,KAAK,CAACC,IAAI,CAACC,KAAK,EAAC;IACvB,CAAC;IACDC,WAAW,CAACV,EAAE,EAAE;MACf,IAAIW,WAAU,GAAIC,QAAQ,CAACC,cAAc,CAACb,EAAE,CAAC;MAC7C,IAAG,IAAI,CAAC/B,IAAI,CAAC6C,IAAI,CAACC,KAAKC,MAAM,CAACC,IAAI,CAACF,CAAC,CAAC,CAACjB,QAAQ,CAACE,EAAE,CAAC,CAAC,EAAE;QACpD,IAAI,CAAC/B,IAAG,GAAI,IAAI,CAACA,IAAI,CAACiD,MAAM,CAACH,KAAK,CAACC,MAAM,CAACC,IAAI,CAACF,CAAC,CAAC,CAACjB,QAAQ,CAACE,EAAE,CAAC,CAAC;MAChE,OAAO;QACN,IAAI,CAAC/B,IAAI,CAAC0B,IAAI,CAAC;UACd,CAACK,EAAE,GAAG;QACP,CAAC;MACF;MACA,IAAGW,WAAW,CAACQ,SAAS,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAC5CT,WAAW,CAACQ,SAAS,CAACE,MAAM,CAAC,QAAQ,CAAC;MACvC,OAAO;QACNV,WAAW,CAACQ,SAAS,CAACG,GAAG,CAAC,QAAQ,CAAC;MACpC;IACD,CAAC;IACDC,YAAY,GAAG;MACd,MAAMC,GAAE,GAAI5F,UAAU,CAAC6F,MAAM,CAAC,SAAS,EAAE;QACxCC,QAAQ,EAAE,OAAO;QACjBC,UAAU,EAAE;MACb,CAAC;MACDH,GAAG,CAACI,GAAG,CAAC;QACP,OAAO,EAAE,qCAAqC;QAC9C,WAAW,EAAE,2CAA2C;QACxD,gBAAgB,EAAE;MACnB,CAAC;MACD,KAAI,IAAIC,IAAG,IAAK,IAAI,CAACjD,aAAa,EAAE;QACnC,IAAGiD,IAAG,IAAK,KAAK,EAAE;UACjB,MAAMC,GAAE,GAAIN,GAAG,CAACO,GAAG,CAAC,KAAK;UACzBD,GAAG,CAACF,GAAG,CAAC,OAAO,EAAE,IAAI,CAAChD,aAAa,CAACiD,IAAI,CAAC;UACzCC,GAAG,CAACF,GAAG,CAAC,OAAO,EAAE,IAAI;QACtB,OAAO,IAAIC,IAAG,IAAK,QAAQ,EAAE;UAC5B,MAAMG,MAAK,GAAIR,GAAG,CAACO,GAAG,CAAC,QAAQ;UAC/BC,MAAM,CAACJ,GAAG,CAAC,UAAU,EAAE,OAAO;UAC9BI,MAAM,CAACJ,GAAG,CAAC,OAAO,EAAE,IAAI,CAAChD,aAAa,CAACiD,IAAI,CAAC;UAC5CG,MAAM,CAACJ,GAAG,CAAC,MAAM,EAAE,IAAI,CAACxE,WAAW;QACpC,OAAO,IAAIyE,IAAG,IAAK,QAAQ,EAAE;UAC5B,MAAMI,MAAK,GAAIT,GAAG,CAACO,GAAG,CAAC,QAAQ;UAC/BE,MAAM,CAACL,GAAG,CAAC,UAAU,EAAE,OAAO;UAC9BK,MAAM,CAACL,GAAG,CAAC,OAAO,EAAE,IAAI,CAAChD,aAAa,CAACiD,IAAI,CAAC;UAC5CI,MAAM,CAACL,GAAG,CAAC,MAAM,EAAE,IAAI,CAACpE,WAAW;QACpC,OAAO;UACNgE,GAAG,CAACO,GAAG,CAACF,IAAI,EAAE,IAAI,CAACjD,aAAa,CAACiD,IAAI,CAAC;QACvC;MACD;MACA,KAAI,IAAIK,IAAG,IAAK,IAAI,CAACrD,cAAc,EAAE;QACpC,IAAGqD,IAAG,IAAK,aAAa,EAAE;UACzB,IAAG,IAAI,CAACrD,cAAc,CAACqD,IAAI,KAAK,UAAU,EAAE;YAC3CV,GAAG,CAACO,GAAG,CAACG,IAAI,EAAE,MAAM;UACrB,OAAO,IAAG,IAAI,CAACrD,cAAc,CAACqD,IAAI,KAAK,UAAU,EAAE;YAClDV,GAAG,CAACO,GAAG,CAACG,IAAI,EAAE,OAAO;UACtB;QACD,OAAO,IAAGA,IAAG,IAAK,mCAAmC,EAAE;UACtD,MAAMC,iCAAgC,GAAIX,GAAG,CAACO,GAAG,CAAC,mCAAmC;UACrFI,iCAAiC,CAACP,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC/C,cAAc,CAACqD,IAAI,CAAC;UACxEC,iCAAiC,CAACP,GAAG,CAAC,OAAO,EAAE,MAAM;QACtD,OAAO,IAAGM,IAAG,IAAK,kCAAkC,EAAE;UACrD,MAAME,gCAA+B,GAAIZ,GAAG,CAACO,GAAG,CAAC,kCAAkC;UACnFK,gCAAgC,CAACR,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC/C,cAAc,CAACqD,IAAI,CAAC;UACvEE,gCAAgC,CAACR,GAAG,CAAC,OAAO,EAAE,MAAM;QACrD,OAAO,IAAGM,IAAG,IAAK,mBAAmB,EAAE;UACtC,MAAMG,SAAQ,GAAIb,GAAG,CAACO,GAAG,CAAC,mBAAmB;UAC7CM,SAAS,CAACT,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC/C,cAAc,CAACqD,IAAI,CAAC;UAChDG,SAAS,CAACT,GAAG,CAAC,OAAO,EAAE,OAAO;QAC/B,OAAO,IAAGM,IAAG,IAAK,yBAAyB,EAAE;UAC5C,MAAMI,QAAO,GAAId,GAAG,CAACO,GAAG,CAAC,yBAAyB;UAClDO,QAAQ,CAACV,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC/C,cAAc,CAACqD,IAAI,CAAC;UAC/CI,QAAQ,CAACV,GAAG,CAAC,OAAO,EAAE,OAAO;QAC9B,OAAO;UACNJ,GAAG,CAACO,GAAG,CAACG,IAAI,EAAE,IAAI,CAACrD,cAAc,CAACqD,IAAI,CAAC;QACxC;MACD;MACA,IAAIK,SAAQ,GAAIf,GAAG,CAACgB,GAAG,CAAC;QACvBC,MAAM,EAAE;MACT,CAAC,CAAC;MACF,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAACJ,SAAS,CAAC,EAAE;QAClC7D,IAAI,EAAE;MACP,CAAC;MACD,MAAMkE,IAAG,GAAIhC,QAAQ,CAACiC,aAAa,CAAC,GAAG;MACvCD,IAAI,CAACE,IAAG,GAAIC,GAAG,CAACC,eAAe,CAACN,IAAI;MACpCE,IAAI,CAACK,QAAO,GAAI,iBAAgB;MAChCL,IAAI,CAACM,KAAK,EAAC;IACZ,CAAC;IACDC,eAAe,GAAG;MACjB,MAAM3B,GAAE,GAAI5F,UAAU,CAAC6F,MAAM,CAAC,UAAU,EAAE;QACzCC,QAAQ,EAAE,OAAO;QACjBC,UAAU,EAAE;MACb,CAAC;MACDH,GAAG,CAACI,GAAG,CAAC;QACP,OAAO,EAAE,qCAAqC;QAC9C,WAAW,EAAE,2CAA2C;QACxD,gBAAgB,EAAE;MACnB,CAAC;MACD,KAAI,IAAIC,IAAG,IAAK,IAAI,CAAC/C,cAAc,EAAE;QACpC0C,GAAG,CAACO,GAAG,CAACF,IAAI,EAAE,IAAI,CAAC/C,cAAc,CAAC+C,IAAI,CAAC;MACxC;MACA,MAAMuB,aAAY,GAAI5B,GAAG,CAACO,GAAG,CAAC,mBAAmB;MACjDqB,aAAa,CAACrB,GAAG,CAAC,aAAa,EAAE,iBAAiB;MAClD,MAAMsB,QAAO,GAAI7B,GAAG,CAACO,GAAG,CAAC,cAAc;MACvCsB,QAAQ,CAACzB,GAAG,CAAC,kBAAkB,EAAE,EAAE;MACnC,MAAM0B,GAAE,GAAID,QAAQ,CAACtB,GAAG,CAAC,aAAa;MACtCuB,GAAG,CAAC1B,GAAG,CAAC,UAAU,EAAE,2BAA2B;MAC/C0B,GAAG,CAAC1B,GAAG,CAAC,MAAM,EAAE,sBAAsB;MACtC0B,GAAG,CAAC1B,GAAG,CAAC,MAAM,EAAE,MAAM;MACtB0B,GAAG,CAAC1B,GAAG,CAAC,WAAW,EAAE,CAAC;MACtB,MAAM2B,GAAE,GAAIF,QAAQ,CAACtB,GAAG,CAAC,aAAa;MACtCwB,GAAG,CAAC3B,GAAG,CAAC,UAAU,EAAE,2BAA2B;MAC/C2B,GAAG,CAAC3B,GAAG,CAAC,MAAM,EAAE,0BAA0B;MAC1C2B,GAAG,CAAC3B,GAAG,CAAC,MAAM,EAAE,MAAM;MACtB2B,GAAG,CAAC3B,GAAG,CAAC,WAAW,EAAE,CAAC;MACtB,MAAM4B,GAAE,GAAIH,QAAQ,CAACtB,GAAG,CAAC,aAAa;MACtCyB,GAAG,CAAC5B,GAAG,CAAC,UAAU,EAAE,2BAA2B;MAC/C4B,GAAG,CAAC5B,GAAG,CAAC,MAAM,EAAE,2BAA2B;MAC3C4B,GAAG,CAAC5B,GAAG,CAAC,MAAM,EAAE,MAAM;MACtB4B,GAAG,CAAC5B,GAAG,CAAC,WAAW,EAAE,CAAC;MACtB,MAAM6B,EAAC,GAAIJ,QAAQ,CAACtB,GAAG,CAAC,aAAa;MACrC0B,EAAE,CAAC7B,GAAG,CAAC,UAAU,EAAE,2BAA2B;MAC9C6B,EAAE,CAAC7B,GAAG,CAAC,MAAM,EAAE,eAAe;MAC9B6B,EAAE,CAAC7B,GAAG,CAAC,MAAM,EAAE,OAAO;MACtB6B,EAAE,CAAC7B,GAAG,CAAC,WAAW,EAAE,CAAC;MACrB,MAAM8B,GAAE,GAAIL,QAAQ,CAACtB,GAAG,CAAC,aAAa;MACtC2B,GAAG,CAAC9B,GAAG,CAAC,UAAU,EAAE,2BAA2B;MAC/C8B,GAAG,CAAC9B,GAAG,CAAC,MAAM,EAAE,uBAAuB;MACvC8B,GAAG,CAAC9B,GAAG,CAAC,MAAM,EAAE,MAAM;MACtB8B,GAAG,CAAC9B,GAAG,CAAC,WAAW,EAAE,CAAC;MACtB,MAAM+B,EAAC,GAAIN,QAAQ,CAACtB,GAAG,CAAC,aAAa;MACrC4B,EAAE,CAAC/B,GAAG,CAAC,UAAU,EAAE,2BAA2B;MAC9C+B,EAAE,CAAC/B,GAAG,CAAC,MAAM,EAAE,WAAW;MAC1B+B,EAAE,CAAC/B,GAAG,CAAC,MAAM,EAAE,EAAE;MACjB+B,EAAE,CAAC/B,GAAG,CAAC,WAAW,EAAE,CAAC;MACrB,MAAMgC,EAAC,GAAIP,QAAQ,CAACtB,GAAG,CAAC,aAAa;MACrC6B,EAAE,CAAChC,GAAG,CAAC,UAAU,EAAE,2BAA2B;MAC9CgC,EAAE,CAAChC,GAAG,CAAC,MAAM,EAAE,aAAa;MAC5BgC,EAAE,CAAChC,GAAG,CAAC,MAAM,EAAE,IAAI;MACnBgC,EAAE,CAAChC,GAAG,CAAC,WAAW,EAAE,CAAC;MACrB,MAAMiC,EAAC,GAAIR,QAAQ,CAACtB,GAAG,CAAC,aAAa;MACrC8B,EAAE,CAACjC,GAAG,CAAC,UAAU,EAAE,2BAA2B;MAC9CiC,EAAE,CAACjC,GAAG,CAAC,MAAM,EAAE,iBAAiB;MAChCiC,EAAE,CAACjC,GAAG,CAAC,MAAM,EAAE,OAAO;MACtBiC,EAAE,CAACjC,GAAG,CAAC,WAAW,EAAE,CAAC;MACrB,MAAMkC,KAAI,GAAIT,QAAQ,CAACtB,GAAG,CAAC,aAAa;MACxC+B,KAAK,CAAClC,GAAG,CAAC,UAAU,EAAE,2BAA2B;MACjDkC,KAAK,CAAClC,GAAG,CAAC,MAAM,EAAE,kBAAkB;MACpCkC,KAAK,CAAClC,GAAG,CAAC,MAAM,EAAE,UAAU;MAC5BkC,KAAK,CAAClC,GAAG,CAAC,WAAW,EAAE,CAAC;MACxB,MAAMmC,EAAC,GAAIV,QAAQ,CAACtB,GAAG,CAAC,aAAa;MACrCgC,EAAE,CAACnC,GAAG,CAAC,UAAU,EAAE,2BAA2B;MAC9CmC,EAAE,CAACnC,GAAG,CAAC,MAAM,EAAE,iBAAiB;MAChCmC,EAAE,CAACnC,GAAG,CAAC,MAAM,EAAE,MAAM;MACrBmC,EAAE,CAACnC,GAAG,CAAC,WAAW,EAAE,CAAC;MACrB,KAAI,IAAIoC,KAAI,IAAK,IAAI,CAACxF,MAAM,EAAE;QAC7B,MAAMyF,GAAE,GAAIzC,GAAG,CAACO,GAAG,CAAC,QAAQ;QAC5B,IAAG,IAAI,CAACvD,MAAM,CAACwF,KAAK,CAAC,CAAC,MAAM,KAAK,sBAAsB,EAAE;UACxDC,GAAG,CAACrC,GAAG,CAAC,UAAU,EAAE,yBAAyB;UAC7CqC,GAAG,CAACrC,GAAG,CAAC,MAAM,EAAE,IAAI,CAACpD,MAAM,CAACwF,KAAK,CAAC,CAAC,WAAW,CAAC;UAC/CC,GAAG,CAACrC,GAAG,CAAC,MAAM,EAAE,IAAI,CAACpD,MAAM,CAACwF,KAAK,CAAC,CAAC,MAAM,CAAC;UAC1C,MAAME,GAAE,GAAID,GAAG,CAAClC,GAAG,CAAC,UAAU;UAC9BmC,GAAG,CAACtC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACpD,MAAM,CAACwF,KAAK,CAAC,CAAC,UAAU,CAAC;QAChD,OAAO,IAAG,IAAI,CAACxF,MAAM,CAACwF,KAAK,CAAC,CAAC,MAAM,KAAK,YAAY,EAAE;UACrDC,GAAG,CAACrC,GAAG,CAAC,UAAU,EAAE,gBAAgB;UACpCqC,GAAG,CAACrC,GAAG,CAAC,aAAa,EAAE,IAAI,CAACpD,MAAM,CAACwF,KAAK,CAAC,CAAC,aAAa,CAAC;UACxD,MAAMG,QAAO,GAAIF,GAAG,CAAClC,GAAG,CAAC,aAAa;UACtCoC,QAAQ,CAACvC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACpD,MAAM,CAACwF,KAAK,CAAC,CAAC,SAAS,CAAC;UACnDG,QAAQ,CAACvC,GAAG,CAAC,MAAM,EAAE,QAAQ;QAC9B,OAAO;UACNqC,GAAG,CAACrC,GAAG,CAAC,UAAU,EAAE,IAAI,CAACpD,MAAM,CAACwF,KAAK,CAAC,CAAC,MAAM,CAAC;UAC9C,MAAME,GAAE,GAAID,GAAG,CAAClC,GAAG,CAAC,UAAU;UAC9BmC,GAAG,CAACtC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACpD,MAAM,CAACwF,KAAK,CAAC,CAAC,UAAU,CAAC;QAChD;MACD;MACA,MAAMI,QAAO,GAAI5C,GAAG,CAACO,GAAG,CAAC,QAAQ;MACjCqC,QAAQ,CAACxC,GAAG,CAAC,UAAU,EAAE,iBAAiB;MAC1C,MAAMyC,IAAG,GAAID,QAAQ,CAACrC,GAAG,CAAC,MAAM;MAChCsC,IAAI,CAACzC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACjE,WAAW;MAClC0G,IAAI,CAACzC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAChE,WAAW;MACjC,IAAI2E,SAAQ,GAAIf,GAAG,CAACgB,GAAG,CAAC;QACvBC,MAAM,EAAE;MACT,CAAC,CAAC;MACF,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAACJ,SAAS,CAAC,EAAE;QAClC7D,IAAI,EAAE;MACP,CAAC;MACD,MAAMkE,IAAG,GAAIhC,QAAQ,CAACiC,aAAa,CAAC,GAAG;MACvCD,IAAI,CAACE,IAAG,GAAIC,GAAG,CAACC,eAAe,CAACN,IAAI;MACpCE,IAAI,CAACK,QAAO,GAAI,sBAAqB;MACrCL,IAAI,CAACM,KAAK,EAAC;IACZ,CAAC;IACDoB,iBAAiB,GAAG;MACnB,IAAI,CAAC/C,YAAY,EAAC;MAClB,IAAI,CAAC4B,eAAe,EAAC;IACtB,CAAC;IACD,MAAMoB,mBAAmB,GAAG;MAC3B,MAAMC,KAAI,GAAIC,OAAO,CAAC,YAAY,CAAC,EAAE;MACrC,IAAIC,MAAK,GAAI,iCAAiC,EAAE;MAChD9E,OAAO,CAACC,GAAG,CAAC,IAAI,CAACvD,IAAI,CAAC;MACtB,IAAI;QACA,MAAMqI,QAAO,GAAI,MAAMH,KAAK,CAAE,iDAAgDE,MAAO,MAAK,IAAI,CAACtI,GAAI,IAAG,IAAI,CAACC,GAAI,OAAM,IAAI,CAACC,IAAK,EAAC,CAAC;QACjI,MAAMT,IAAG,GAAI,MAAM8I,QAAQ,CAACC,IAAI,EAAE;QAClC;QACA,MAAMC,QAAO,GAAIhJ,IAAI,CAACgJ,QAAQ;QAC9B,IAAI,CAAC/I,iBAAiB,CAAC,UAAU,IAAI+I,QAAQ,CAAC5G,IAAI;QACxD,IAAI,CAACnC,iBAAiB,CAAC,OAAO,IAAI+I,QAAQ,CAACpG,MAAM;QAC3C,IAAI5C,IAAI,CAACiJ,QAAO,IAAKjJ,IAAI,CAACiJ,QAAQ,CAACC,WAAU,IAAKlJ,IAAI,CAACiJ,QAAQ,CAACC,WAAW,CAACC,MAAK,GAAI,CAAC,EAAE;UACpF,IAAI,CAAC7I,WAAU,GAAIN,IAAI,CAACiJ,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACE,GAAG;UACnD,IAAI,CAACnJ,iBAAiB,CAAC,aAAa,IAAI,IAAI,CAACK,WAAW,CAAC+I,SAAS;UAClE,IAAI,CAACpJ,iBAAiB,CAAC,UAAU,IAAI,IAAI,CAACK,WAAW,CAACgJ,WAAW;UACjEvF,OAAO,CAACC,GAAG,CAAE,gBAAe,IAAI,CAAC/D,iBAAiB,CAAC,aAAa,CAAC,KAAK,CAAC;UACvE8D,OAAO,CAACC,GAAG,CAAE,sBAAqB,IAAI,CAAC/D,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC;UACzE8D,OAAO,CAACC,GAAG,CAAChE,IAAI,CAACiJ,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACK,IAAI;UACtD;UACA,MAAMC,GAAE,GAAIxJ,IAAI,CAACiJ,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACK,IAAI,CAACE,MAAM,CAAC,CAACC,WAAW,EAAEC,UAAU,KAAK;YAClF,OAAOD,WAAU,GAAIC,UAAU,CAACC,WAAW;UAC3C,CAAC,EAAE,CAAC,CAAC;UACL;UACA,IAAI,CAAC3J,iBAAiB,CAAC,UAAU,IAAIuJ,GAAE,GAAIxJ,IAAI,CAACiJ,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACK,IAAI,CAACJ,MAAK,GAAI,OAAO;QACxF,OAAO;UACHpF,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;QACzE;MACJ,EAAE,OAAO6F,KAAK,EAAE;QACZ9F,OAAO,CAAC8F,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IACJ;EAEE;AACF","names":["xmlbuilder","data","environment_props","temperature_min","temperature_max","pressure_min","pressure_max","weatherData","lat","lon","date","dialog1","dialog","age_min","age_max","core_temp_min","core_temp_max","heart_rate_min","heart_rate_max","resp_rate_min","resp_rate_max","height_min","height_max","height_units","height_unit","weight_min","weight_max","weight_units","weight_unit","time_min","time_max","action_time","action_unit","sev_min","sev_max","med_options","tab","name","sides","open_closed","drawer","valid","expanded","scenario_file_name","action","region","type","colors","patient_props","patient_vitals","scenario_props","genders","patient_body","hemorrhage_regions","brain_injury_types","body_regions","blood_types","rh","time_units","methods","changeColors","selected_regions","actions","push","console","log","includes","nextTab","id","addAction","severity","removeAction","index","splice","validate","$refs","form","reset","pathClicked","pathElement","document","getElementById","some","x","Object","keys","filter","classList","contains","remove","add","saveStateXML","xml","create","encoding","standalone","att","key1","Age","ele","Height","Weight","key2","DiastolicArterialPressureBaseline","SystolicArterialPressureBaseline","HeartRate","RespRate","xmlString","end","pretty","blob","Blob","link","createElement","href","URL","createObjectURL","download","click","saveScenarioXML","InitialParams","data_req","map","sap","dap","co","cvp","hr","tv","rr","oxsat","ct","item2","act","sev","initrate","time_act","time","saveBiogearsFiles","pullEnvironmentData","fetch","require","apiKey","response","json","location","forecast","forecastday","length","day","avgtemp_c","avghumidity","hour","sum","reduce","accumulator","currentObj","pressure_mb","error"],"sourceRoot":"","sources":["C:\\Users\\sanik\\Downloads\\capstone\\MoHSES-Scenario-User-Interface\\src\\views\\BioGearsView.vue"],"sourcesContent":["<template>\r\n\t<v-toolbar color=\"#3c2d70\" style=\"color: white\">\r\n\t\t<v-toolbar-title>BioGears Scenario Creation Tool</v-toolbar-title>\r\n\t</v-toolbar>\r\n\t<v-tabs large v-model=\"tab\" color=\"#3c2d70\">\r\n\t\t<v-tab value=\"home\">\r\n\t\t\t<v-icon start> mdi-home </v-icon> About this page </v-tab>\r\n\t\t<v-tab value=\"option-1\">\r\n\t\t\t<v-icon start> mdi-account </v-icon> Patient Information </v-tab>\r\n\t\t<v-tab value=\"option-2\">\r\n\t\t\t<v-icon start> mdi-access-point </v-icon> Patient Vitals </v-tab>\r\n\t\t<v-tab value=\"option-3\">\r\n\t\t\t<v-icon start> mdi-access-point </v-icon> Environment Properties </v-tab>\r\n\t\t<v-tab value=\"option-4\">\r\n\t\t\t<v-icon start> mdi-list-status </v-icon> Configure Patient Scenario </v-tab>\r\n\t</v-tabs>\r\n\t<v-main class=\"bg-grey-lighten-3\">\r\n\t\t<v-container>\r\n\t\t\t<v-window v-model=\"tab\" class=\"mt-n12\">\r\n\t\t\t\t<v-form ref=\"form\" v-model=\"valid\" lazy-validation>\r\n\t\t\t\t\t<v-window-item value=\"home\">\r\n\t\t\t\t\t\t<v-card class=\"bg-grey-lighten-3\" flat>\r\n\t\t\t\t\t\t\t<v-card-title class=\"text-center\" style=\"font-size: 36px\">Welcome to the BioGears Scenario Creation Tool!</v-card-title>\r\n\t\t\t\t\t\t\t<v-container fluid>\r\n\t\t\t\t\t\t\t\t<v-row align=\"center\" justify=\"center\">\r\n\t\t\t\t\t\t\t\t\t<v-col cols=\"12\">\r\n\t\t\t\t\t\t\t\t\t\t<v-img src=\"@/assets/crest_vh_gold_purple_dt.png\" alt=\"Your image\" class=\"mx-auto\" width=\"80%\" height=\"80%\" /> </v-col>\r\n\t\t\t\t\t\t\t\t</v-row>\r\n\t\t\t\t\t\t\t</v-container>\r\n\t\t\t\t\t\t\t<v-card-text>\r\n\t\t\t\t\t\t\t\t<p style=\"font-size: 14px\">This tool is designed to simplify the process of generating BioGears Scenario XML files. First, input patient information and healthy vitals to define a BioGears patient. Then configure injuries to define a specific patient scenario and click Submit. This will locally download BioGears-compatible Patient and Scenario XML files, which can then be inputted into BioGears via command line. After running BioGears with this file, user will have a MoHSES-compatible state file with data on the simulated injured patient's vitals.</p>\r\n\t\t\t\t\t\t\t</v-card-text>\r\n\t\t\t\t\t\t\t<v-card flat>\r\n                <v-card-text>\r\n                  <v-expansion-panels>\r\n                    <v-expansion-panel class='font-weight-bold' title=\"BioGears Guide\"> <!--class=\"text-h1\"-->\r\n                      <v-expansion-panel-text class = \"text-h6\">\r\n                      <!-- <div class=\"text-h4\">BioGears Guide</div> -->\r\n                      <p class='font-weight-regular'>\r\n                        After generating the Custom Patient and Scenario files using the BioGears Scenario Creation Tool tab, users must run BioGears with the files in order to generate\r\n                        a MoHSES-compatible state file. The following are instructions on how to run BioGears:\r\n                      </p>\r\n                      <v-list>\r\n                        <v-list-item>\r\n                          <v-list-item-title style=\"font-size: 21px\" class='font-weight-bold'>\r\n                            1. Build BioGears\r\n                          </v-list-item-title>\r\n                          <v-list>\r\n                            <v-list-item>\r\n                              - Create a folder in your Desktop titled 'biogears'. In the command line, navigate to this folder. Clone the BioGears <a href=\"https://github.com/BioGearsEngine/core\">codebase</a> to your local computer by running:\r\n                              <pre>git clone https://github.com/BioGearsEngine/core.git </pre> in command line.\r\n                              \r\n                              Follow the build instructions from the <a href=\"https://github.com/BioGearsEngine/core/wiki/Build-Instructions\">Github Wiki</a> for your operating system (also described below).\r\n                            </v-list-item>\r\n                            \r\n                            <v-list-item>\r\n                              <v-list-item-title style=\"font-size: 21px\" class='font-weight-bold'>\r\n                                <t> For MacOS (M1/M2 chip): </t>\r\n                              </v-list-item-title>\r\n                            </v-list-item>\r\n\r\n                          </v-list>\r\n                            \r\n                          <br>\r\n                          <br>\r\n                          <b>For MacOS (M1/M2 chip): </b><br>\r\n                          Install Homebrew using by running: <pre>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\" </pre> in command line.\r\n                          Add Homebrew to path using: <pre>echo 'eval \"$(/opt/homebrew/bin/brew shellenv)\"' >> ~/.zprofile </pre>\r\n                          <pre>eval \"$(/opt/homebrew/bin/brew shellenv)\"  </pre>\r\n                          Install dependencies using:<pre>brew install wget\r\nbrew install git\r\nbrew install ninja\r\nbrew install g++\r\nbrew install gcc\r\nbrew install eigen\r\nbrew install xerces-c\r\nbrew install xsd\r\nbrew install cmake\r\n                            </pre>\r\n                            Assuming the BioGears repository was cloned in the biogears folder on Desktop, run the following commands to build BioGears:\r\n                            <pre>cd ~/Desktop/biogears\r\ncd core\r\nmkdir build; cd build\r\ncmake -G \"Ninja\" -DCMAKE_INSTALL_PREFIX=~/Desktop/BiogearsInstall -DBiogears_BUILD_HOWTOS=ON ..\r\nninja bg-cli\r\n                            </pre>\r\n                            <b>For Windows:</b> \r\n                          <br>\r\n                              To build BioGears on a Windows Machine, you will need to download the <a href=\"https://docs.chocolatey.org/en-us/choco/setup\"> Chocolatey Package Manager </a>.\r\n                              Install dependencies using: <pre>choco install git\r\nchoco install ninja\r\nchoco install g++\r\nchoco install gcc\r\nchoco install eigen\r\nchoco install xerces-c\r\nchoco install xsd\r\n                              </pre>\r\n                              Run the following commands to build BioGears:\r\n                              <pre>cd ~/Desktop/biogears\r\ncd core\r\nmkdir build; cd build\r\ncmake -G -DCMAKE_INSTALL_PREFIX=C:~/Downloads/BioGears/external/ ..\r\n                              </pre>\r\n                        </v-list-item>\r\n                        <v-list-item> <v-list-item-title style=\"font-size: 21px\" class='font-weight-bold'>2. Move downloaded files to proper directories</v-list-item-title> After clicking Submit in the BioGears Scenario Creation Tool tab, two files should be downloaded - CustomScenario.xml and CustomPatient.xml.\r\n                          Within the BioGears directory folder, move CustomScenario.xml to the <i>core/build/runtime/Scenarios/Patient</i> folder. Also within the BioGears directory folder,\r\n                          move CustomPatient.xml to the <i>core/build/runtime/patients</i> folder.\r\n                        </v-list-item>\r\n                        <v-list-item> <v-list-item-title style=\"font-size: 21px\" class='font-weight-bold'>3. Run BioGears executable in command line</v-list-item-title>Open command line and within the BioGears directory, navigate to <i>core/build/runtime</i>. \r\n                          Run the BioGears executable by running this command: <br> <pre>../outputs/Release/bin/bg-cli SCENARIO ./Scenarios/Patient/CustomScenario.xml </pre>\r\n                          \r\n                          This may take a couple minutes to run. After BioGears has finished running, within the <i>Scenarios/Patient folder</i>, there should be CustomScenario.log and CustomScenario.csv files.\r\n                          The csv file can be inputted into the BioGears Plotting Tool Tab to visualize the simulated physiological variables over time. \r\n                          <br>\r\n                          Most importantly, under the <i>core/build/runtime/states</i> folder, a new file called CustomBioGearsState.xml will be created, which is the MoHSES-compatible state file \r\n                          that can be used to generate the MoHSES Scenario file.\r\n                        </v-list-item>\r\n                      </v-list>\r\n                      </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                  </v-expansion-panels>\r\n                </v-card-text>\r\n              </v-card>\r\n\t\t\t\t\t\t\t<v-col cols=\"auto\">\r\n\t\t\t\t\t\t\t\t<v-btn @click=\"nextTab('option-1')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\r\n\t\t\t\t\t\t\t</v-col>\r\n\t\t\t\t\t\t</v-card>\r\n\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t<br> </v-window-item>\r\n\t\t\t\t\t\t<v-window-item value=\"option-1\">\r\n            <v-card flat>\r\n              <v-card-text>\r\n                <p style=\"font-size: 20px\">Please enter patient information:</p>\r\n                <br>\r\n                <v-text-field\r\n                v-model=\"patient_props['Name']\"\r\n                :rules=\"nameRules\"\r\n                label=\"Name\"\r\n                required>\r\n                </v-text-field>\r\n\r\n                <v-select\r\n                  v-model=\"patient_props['Sex']\"\r\n                  :items=\"genders\"\r\n                  :rules=\"[v => !!v || 'Sex is required']\"\r\n                  label=\"Sex\"\r\n                  required\r\n                ></v-select>\r\n\r\n                <v-slider v-model=\"patient_props['age']\" label=\"Age\" class=\"align-center\" :max=\"age_max\" :min=\"age_min\" :step=\"1\">\r\n                            <template v-slot:append>\r\n                               <v-text-field v-model=\"patient_props['age']\" hide-details single-line density=\"compact\" type=\"number\" suffix=\"years\" style=\"width: 180px\"></v-text-field>\r\n                            </template>\r\n                         </v-slider>\r\n                         <v-slider v-model=\"patient_props['height']\" label=\"Height\" class=\"align-center\" :max=\"height_max\" :min=\"height_min\" :step=\"0.1\">\r\n                            <template v-slot:append>\r\n                               <v-text-field v-model=\"patient_props['height']\" hide-details single-line density=\"compact\" type=\"number\" style=\"width: 90px\"></v-text-field>\r\n                               <v-select v-model=\"height_unit\" hide-details single-line density=\"compact\" :items=\"height_units\" style=\"width: 90px\"></v-select>\r\n                            </template>\r\n                         </v-slider>\r\n                         <v-slider v-model=\"patient_props['weight']\" label=\"Weight\" class=\"align-center\" :max=\"weight_max\" :min=\"weight_min\" :step=\"0.1\">\r\n                            <template v-slot:append>\r\n                               <v-text-field v-model=\"patient_props['weight']\" hide-details single-line density=\"compact\" type=\"number\" style=\"width: 90px\"></v-text-field>\r\n                               <v-select v-model=\"weight_unit\" hide-details single-line density=\"compact\" :items=\"weight_units\" style=\"width: 90px\"></v-select>\r\n                            </template>\r\n                         </v-slider>\r\n              </v-card-text>\r\n            </v-card>\r\n            <br>\r\n            <v-row justify=\"center\">\r\n              <v-col cols=\"auto\">\r\n                <v-btn @click=\"nextTab('home')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\r\n              </v-col>\r\n              <v-col cols=\"auto\">\r\n                <v-btn @click=\"nextTab('option-2')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\r\n              </v-col>\r\n            </v-row>\r\n            <br>\r\n          </v-window-item>\r\n\r\n        <v-window-item value=\"option-2\">\r\n          <v-card flat>\r\n            <v-card-text>\r\n              <p style=\"font-size: 20px\">Please enter <b>healthy</b>  patient vitals: </p>\r\n              <br>\r\n\r\n              <v-select\r\n                v-model=\"patient_vitals['BloodTypeABO']\"\r\n                :items=\"blood_types\"\r\n                label=\"Blood Type\"\r\n              ></v-select>\r\n\r\n              <v-select\r\n                v-model=\"patient_vitals['BloodTypeRh']\"\r\n                :items=\"rh\"\r\n                label=\"Rh\"\r\n              ></v-select>\r\n\r\n              <!-- <v-text-field\r\n                v-model=\"patient_vitals['mean_arterial_pressure']\"\r\n                label=\"Mean Arterial Pressure (mmHg)\"\r\n              ></v-text-field> -->\r\n              \r\n              <v-text-field\r\n                v-model=\"patient_vitals['DiastolicArterialPressureBaseline']\"\r\n                label=\"Diastolic Arterial Pressure (mmHg)\"\r\n                required\r\n                hint=\"Enter value between 60-80 mmHg\"\r\n              ></v-text-field>\r\n\r\n              <v-text-field\r\n                v-model=\"patient_vitals['SystolicArterialPressureBaseline']\"\r\n                label=\"Systolic Arterial Pressure (mmHg)\"\r\n                required\r\n                hint=\"Enter value between 90-120 mmHg\"\r\n              ></v-text-field>\r\n\r\n              <v-slider\r\n                v-model=\"patient_vitals['HeartRateBaseline']\"\r\n                label=\"Heart Rate\"\r\n                class=\"align-center\"\r\n                :max=\"heart_rate_max\"\r\n                :min=\"heart_rate_min\"\r\n                :step=\"1\"\r\n              ><template v-slot:append>\r\n                  <v-text-field\r\n                    v-model=\"patient_vitals['HeartRateBaseline']\"\r\n                    hide-details single-line density=\"compact\" type=\"number\" suffix=\"bpm\" style=\"width: 180px\"\r\n                  ></v-text-field>\r\n                </template>\r\n              </v-slider>\r\n              <v-slider\r\n                v-model=\"patient_vitals['RespirationRateBaseline']\"\r\n                label=\"Respiratory Rate\"\r\n                class=\"align-center\"\r\n                :max=\"resp_rate_max\"\r\n                :min=\"resp_rate_min\"\r\n                :step=\"1\"\r\n              >\r\n                <template v-slot:append>\r\n                  <v-text-field\r\n                    v-model=\"patient_vitals['RespirationRateBaseline']\"\r\n                    hide-details single-line density=\"compact\" type=\"number\" suffix=\"/min\" style=\"width: 180px\"\r\n                  ></v-text-field>\r\n                </template>\r\n              </v-slider>\r\n\r\n\r\n\r\n            </v-card-text> \r\n          </v-card>\r\n          <br>\r\n          <v-row justify=\"center\">\r\n            <v-col cols=\"auto\">\r\n              <v-btn @click=\"nextTab('option-1')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\r\n            </v-col>\r\n            <v-col cols=\"auto\">\r\n              <v-btn @click=\"nextTab('option-3')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\r\n            </v-col>\r\n          </v-row>\r\n          <br>\r\n        </v-window-item>\r\n\t\t\t\t\t\t\t\t<v-window-item value=\"option-3\">\r\n\t\t\t\t\t\t<v-card flat>\r\n\t\t\t\t\t\t\t<v-card-text>\r\n\t\t\t\t\t\t\t\t<p style=\"font-size: 20px\"><b>Optional:</b> Please enter environment properties: </p>\r\n\t\t\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t\t\t<v-text-field v-model=\"date\" type=\"date\" label=\"Date\"></v-text-field>\r\n\t\t\t\t\t\t\t\t<v-row>\r\n\t\t\t\t\t\t\t\t\t<v-col cols=\"6\">\r\n\t\t\t\t\t\t\t\t\t<v-text-field v-model=\"lat\" label=\"Latitude\"></v-text-field>\r\n\t\t\t\t\t\t\t\t\t</v-col>\r\n\t\t\t\t\t\t\t\t\t<v-col cols=\"6\">\r\n\t\t\t\t\t\t\t\t\t<v-text-field v-model=\"lon\" label=\"Longitude\"></v-text-field>\r\n\t\t\t\t\t\t\t\t\t</v-col>\r\n\t\t\t\t\t\t\t\t</v-row>\r\n\t\t\t\t\t\t\t\t<v-btn @click=\"pullEnvironmentData\" color=\"#3c2d70\" style=\"color: white\">Generate Environment Data</v-btn>\r\n\t\t\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t\t\t<v-slider v-if=\"weatherData\" v-model=\"environment_props['temperature']\" label=\"Temperature\" clearable class=\"align-center\" :max=\"temperature_max\" :min=\"temperature_min\" :step=\"0.1\">\r\n\t\t\t\t\t\t\t\t\t<template v-slot:append>\r\n\t\t\t\t\t\t\t\t\t\t<v-text-field v-model=\"environment_props['temperature']\" hide-details clearable single-line density=\"compact\" type=\"number\" suffix=\"Celsius\" style=\"width: 180px\"></v-text-field>\r\n\t\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t\t</v-slider>\r\n\t\t\t\t\t\t\t\t<v-slider v-if=\"weatherData\" v-model=\"environment_props['pressure']\" label=\"Pressure\" clearable class=\"align-center\" :max=\"pressure_max\" :min=\"pressure_min\" :step=\"0.1\">\r\n\t\t\t\t\t\t\t\t\t<template v-slot:append>\r\n\t\t\t\t\t\t\t\t\t\t<v-text-field v-model=\"environment_props['pressure']\" hide-details clearable single-line density=\"compact\" type=\"number\" suffix=\"mmHg\" style=\"width: 180px\"></v-text-field>\r\n\t\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t\t</v-slider>\r\n\t\t\t\t\t\t\t\t<v-slider v-if=\"weatherData\" v-model=\"environment_props['humidity']\" label=\"Relative Humidity\" clearable class=\"align-center\" :max=\"100\" :min=\"0\" :step=\"0.1\">\r\n\t\t\t\t\t\t\t\t\t<template v-slot:append>\r\n\t\t\t\t\t\t\t\t\t\t<v-text-field v-model=\"environment_props['humidity']\" hide-details clearable single-line density=\"compact\" type=\"number\" suffix=\"%\" style=\"width: 180px\"></v-text-field>\r\n\t\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t\t</v-slider>\r\n\t\t\t\t\t\t\t\t<v-row>\r\n\t\t\t\t\t\t\t\t\t<v-col cols=\"8\">\r\n\t\t\t\t\t\t\t\t\t<v-text-field v-if=\"weatherData\" v-model=\"environment_props['cityName']\" label=\"City\"></v-text-field>\r\n\t\t\t\t\t\t\t\t\t</v-col>\r\n\t\t\t\t\t\t\t\t\t<v-col cols=\"4\">\r\n\t\t\t\t\t\t\t\t\t<v-text-field v-if=\"weatherData\" v-model=\"environment_props['state']\" label=\"State\"></v-text-field>\r\n\t\t\t\t\t\t\t\t\t</v-col>\r\n\t\t\t\t\t\t\t\t</v-row>\r\n\t\t\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t\t</v-card-text>\r\n\t\t\t\t\t\t</v-card>\r\n\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t<v-row justify=\"center\">\r\n\t\t\t\t\t\t\t<v-col cols=\"auto\">\r\n\t\t\t\t\t\t\t\t<v-btn @click=\"nextTab('option-2')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\r\n\t\t\t\t\t\t\t</v-col>\r\n\t\t\t\t\t\t\t<v-col cols=\"auto\">\r\n\t\t\t\t\t\t\t\t<v-btn @click=\"nextTab('option-4')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\r\n\t\t\t\t\t\t\t</v-col>\r\n\t\t\t\t\t\t</v-row>\r\n\t\t\t\t\t\t<br> </v-window-item>\r\n\t\t\t\t\t\t<v-window-item value=\"option-4\">\r\n          <v-card flat>\r\n            <v-card-text>\r\n            <p style=\"font-size: 20px\">Please enter a title and brief description for this patient scenario: </p>\r\n            <br>\r\n            <v-text-field v-model=\"scenario_props['Name']\" label=\"Scenario Name\"> </v-text-field>\r\n            <v-text-field v-model=\"scenario_props['Description']\" label=\"Scenario Brief Description\"> </v-text-field>\r\n            <p style=\"font-size: 20px\">Please configure patient injuries and timeline:</p>\r\n            <br>\r\n            <br>\r\n            <v-row>\r\n              <v-col cols=\"12\" sm=\"8\" md=\"6\" class=\"my-content\">\r\n\r\n                <svg\r\n                  width=\"550px\"\r\n                  height=\"600px\"\r\n                  viewBox=\"15 0 20 100\"\r\n                  version=\"1.1\"\r\n                  id=\"svg46\"\r\n                  sodipodi:docname=\"human_sanika.svg\"\r\n                  inkscape:version=\"1.2.2 (732a01da63, 2022-12-09)\"\r\n                  xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\r\n                  xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  xmlns:svg=\"http://www.w3.org/2000/svg\">\r\n                  <defs\r\n                    id=\"defs50\" />\r\n                  <path\r\n\t\t\t\t:fill=\"colors['Chest']\"\r\n                    id=\"Chest\"\r\n                    d=\"m 2.4651865,21.528509 -1.72941989,3.09103 -1.89346001,0.94785 1.15295001,0.90662 0.90586,2.63773 2.09966989,0.86537 3.34636,-1.655 -0.83462,-6.50527 z m 8.9862405,0 1.72942,3.09103 1.89346,0.94785 -1.15295,0.90662 -0.90604,2.63773 -2.09968,0.86537 -3.3452405,-1.655 0.83425,-6.50527 z\"\r\n                    />\r\n                  <path\r\n                    :fill=\"colors['Abdomen']\"\r\n                    id=\"Abdomen\"\r\n                    d=\"m 3.5133365,30.595379 3.11202,-1.40603 -0.0937,2.27965 -2.80138,1.4364 z m -1.93508,1.6685 1.29355,0.72139 -0.14997,-1.70899 z m 1.05303,-1.637 -2.47930989,-1.03259 0.93360999,2.52148 z m -1.5316399,1.73729 1.6900499,1.03372 0.28871,2.06743 -1.64881,-1.07515 z m 2.9114199,1.10421 0.0623,1.62387 2.30327,-0.49961 0.12448,-2.21703 z m 0.15561,2.40432 -0.0309,1.99844 2.20973,0.59353 0.0311,-3.1227 z m -2.6546,-0.98516 1.48384,1.0339 0.20622,2.10905 -1.64975,-1.32355 z m 5.23795,14.47521 -0.60647,-5.91209 -0.015,-3.84879 -2.18479,-1.07533 -0.24746,7.03017 z m 0.41581,-5.7e-4 0.60628,-5.91209 0.0154,-3.84915 2.18404,-1.07515 0.2474605,7.03017 z m -4.00588,-10.21155 -1.81341,-1.36479 -0.15748,1.83347 -1.28567989,2.37432 1.98044989,2.73595 1.03109,0.16554 0.37119,-3.88721 z m 7.2429405,-8.55562 -3.1120205,-1.40604 0.0937,2.27965 2.8011905,1.43603 z m 1.93471,1.66849 -1.29355,0.7212 0.14997,-1.70898 z m -1.05303,-1.63718 2.47968,-1.03241 -0.9336,2.52093 z m 1.53164,1.73729 -1.69005,1.03372 -0.28871,2.0678 1.64975,-1.07533 z m -2.9114305,1.10421 -0.0622,1.62387 -2.30308,-0.49961 -0.12448,-2.21722 z m -0.1556,2.4045 0.0311,1.99844 -2.20953,0.59391 -0.0311,-3.1227 z m 2.6545905,-0.98535 -1.48383,1.03372 -0.20622,2.10905 1.64862,-1.32355 z m -1.64787,4.26366 1.81341,-1.36479 0.15748,1.83347 1.28642,2.37338 -1.98044,2.73652 -1.03109,0.16554 -0.37026,-3.88816 z\"/>\r\n                  <path\r\n                    :fill=\"colors['Pelvis']\"\r\n                    id=\"Pelvis\"\r\n                    d=\"m 0.73979661,43.812429 v 4.21363 l 2.94516989,5.8253 1.86028,5.78349 -0.19366,-4.0072 z m 3.24886989,13.42559 0.0647,0.15485 1.21294,2.90207 -0.78307,7.18803 -1.23618,-0.66102 1.0714,-6.69273 z m 1.52977,-7.75493 0.0221,-0.0277 -0.14866,-0.37945 -3.10172,-3.40449 -0.23283,-0.0825 2.05918,5.32009 z m -1.17263,2.01833 1.27705,3.29948 0.42631,-4.04862 -0.25196,-0.64303 z m 4.05219,-2.01795 -0.0221,-0.0281 0.14867,-0.37926 3.1017105,-3.40449 0.23246,-0.0825 -2.0584305,5.3199 z m 1.17263,2.01795 -1.27706,3.29948 -0.42631,-4.04843 0.25197,-0.64303 z m 3.6065705,-7.6888 v 4.21363 l -2.94574,5.82511 -1.8602705,5.78349 0.19365,-4.0072 z m -3.2494405,13.42596 -0.0649,0.15467 -1.21294,2.90207 0.78325,7.18803 1.2361905,-0.66122 -1.0714005,-6.69272 z\"\r\n                    />\r\n                  <path\r\n                    :fill=\"colors['Head']\"\r\n                    id=\"Head\"\r\n                    d=\"m 39.271427,10.801559 0.44208,-0.14964 0.16111,0.16427 1.48163,4.04751 2.32401,1.45118 2.39971,-1.52387 0.97577,-3.68969 0.52752,-0.55908 0.23367,0.0981 0.24198,-3.3446699 -2.03129,-2.31103 -2.84509,-0.51629 -2.20422,0.52915 -1.93631,2.63077 z m -28.40863,0.34495 0.0203,-2.2074699 -3.9668905,-2.7637 -3.74099,2.23559 -0.006,2.6352799 -0.60741,0.0403 0.27408,1.82447 0.97635,0.33932 0.44244,2.18029 1.82222,2.06556 2.03518,-0.0607 1.79223,-1.94408 0.3595705,-2.24066 0.97616,-0.33932 0.25159,-1.78416 z m -8.0771905,-0.34495 -0.0482,-2.5908499 4.20648,-2.46806 4.4276905,2.95361 -0.0405,1.9440799 0.24197,-3.3446699 -2.0312905,-2.31103 -2.84508,-0.51629 -2.20423,0.52915 -1.9363,2.63077 z\" />\r\n                  <path\r\n                    :fill=\"colors['Neck']\"\r\n                    id=\"Neck\"\r\n                    d=\"m 43.483667,16.548089 -2.35767,-1.55045 -1.47119,-3.95143 -0.60741,0.0403 0.27409,1.82447 0.97635,0.33932 0.7613,2.21572 0.33017,1.06849 0.0895,2.14894 1.16448,0.008 0.10563,-0.70833 0.54716,-0.0606 z m 1.01793,1.47595 0.23768,0.64982 1.38107,-0.004 0.01,-2.38784 0.25971,-0.79061 0.57215,-2.1698 0.76359,-0.41018 0.25158,-1.78416 -0.62859,0.0193 -1.08488,3.89981 -2.39725,1.46684 0.2768,1.48507 z m -40.0829605,-1.67052 1.64975,2.35202 0.74426,2.62159 -1.73486,-1.38354 -0.86649,-2.97104 z m 5.08047,0 -1.64975,2.35202 -0.74538,2.62234 1.73486,-1.38354 0.86649,-2.97104 z\"\r\n                    />\r\n                  <path\r\n                    :fill=\"colors['Extremities']\"\r\n                    id=\"Extremities\"\r\n                    d=\"m 45.133277,68.516999 1.20605,3.01461 -0.70737,0.26558 -0.89755,3.51771 0.55802,-4.01191 z m 5.08496,-3.15003 -0.63355,1.8609 -0.16813,2.03261 -0.61313,1.93117 0.90584,-0.0851 0.28534,2.15982 z m -4.3014,6.58834 -1.27664,4.99697 0.28984,3.02284 0.67869,10.06546 1.66325,0.63506 3.504,-11.96959 -1.24986,-7.17525 z m -0.54053,20.8287 -0.85194,1.3581 -0.37189,0.79238 0.15589,1.21774 0.76983,0.74446 1.51186,0.12543 1.12989,-0.29192 0.24225,-0.95894 -0.80765,-1.30405 0.22563,-0.85987 -0.29679,-0.84153 0.0194,-1.81524 -1.53568,-0.54817 z m 1.19598,0.4675 -0.15943,1.25776 0.6023,0.97431 m 0.54436,0.29544 -1.06474,0.40084 -1.55326,-0.65137 m 3.56525,-39.90247 -3.97962,-1.70224 -0.56389,0.27131 -0.0528,1.79746 -0.075,4.64669 1.97837,6.04282 -0.47612,1.41403 1.42813,3.29446 1.7661,-0.30111 0.50079,-2.11605 0.1695,-1.75674 2.42102,-8.15763 0.009,-3.68308 z m 4.26465,-23.93238 -0.32785,-1.05121 -1.27383,-2.05489 1.38708,-2.96476 2.28579,0.91634 1.83971,1.74245 0.53937,1.78549 -0.26073,4.30868 z m 2.64394,15.3417 1.51839,0.0828 0.78033,-0.65476 1.16673,2.18281 0.79187,3.34623 -0.49843,0.21064 -0.55144,-2.21453 -0.50541,0.24292 0.30356,2.5012 -0.62882,0.23021 -0.36124,-2.50014 -0.56203,0.16666 0.16765,2.77019 -0.77603,0.30634 -0.19719,-2.87245 -0.45732,-0.0278 -0.22215,2.64829 -0.66539,0.24928 0.0254,-4.56692 -0.3374,-0.20146 -1.38845,1.65469 -0.32098,-0.35041 0.76973,-2.03928 z m 0.97685,-0.1799 1.43335,-0.74932 0.29002,-7.01054 c 0,0 -0.65,-2.77789 -0.64401,-3.06126 l -0.61212,-1.21783 -3.98124,-2.57566 1.0222,1.93525 -0.38967,4.82212 1.8218,7.69308 z m -13.45979,-5.10285 0.14418,2.97292 1.15984,-0.0241 0.048,-2.96488 2.80867,-0.81981 2.34029,-0.7541 1.34121,3.73319 -4.77886,1.36455 -2.33301,1.2158 -2.37536,-1.2333 -5.45663,-1.37716 1.51961,-3.95743 z m -7.0756,2.37946 5.48374,1.86457 2.27386,1.3378 2.74195,-1.74412 4.51804,-1.28077 0.90009,2.29721 0.675,3.4346 -0.81272,5.02838 -2.82636,0.16819 -4.11256,-1.67581 -1.00814,0.39118 -0.95849,-0.39888 -4.44053,1.94411 -2.77023,-0.51478 -0.95181,-6.15325 0.36754,-2.7864 z m 6.4333,24.38495 -1.20605,3.01461 0.70738,0.26558 0.89754,3.51771 -0.55801,-4.01191 z m -5.08496,-3.15003 0.63355,1.8609 0.16813,2.03261 0.61314,1.93117 -0.90585,-0.0851 -0.28534,2.15982 z m 4.3014,6.58834 1.27664,4.99697 -0.28984,3.02284 -0.67869,10.06546 -1.66325,0.63506 -3.50399,-11.96959 1.24985,-7.17525 z m 0.54053,20.8287 0.85194,1.3581 0.37189,0.79238 -0.15588,1.21774 -0.76984,0.74446 -1.51185,0.12543 -1.1299,-0.29192 -0.24225,-0.95894 0.80765,-1.30405 -0.22562,-0.85987 0.29679,-0.84153 -0.0194,-1.81524 1.53568,-0.54817 z m -1.19598,0.4675 0.15943,1.25776 -0.6023,0.97431 m -0.54436,0.29544 1.06474,0.40084 1.55326,-0.65137 m -4.19331,-39.53466 4.55099,-2.03879 0.63802,0.23079 0.0353,1.80672 0.075,4.64669 -1.97837,6.04282 0.47612,1.41403 -1.42812,3.29446 -1.76611,-0.30111 -0.50079,-2.11605 -0.1695,-1.75674 -2.42102,-8.15763 -0.34279,-3.64687 z m -3.98895,-24.48137 0.4297,-1.4164 1.30458,-1.68577 -1.39393,-2.96155 -2.28367,0.92162 -1.83567,1.7467 -0.53524,1.78673 0.27068,4.30806 z m -2.46869,15.35539 -1.5182,0.0863 -0.78184,-0.65295 -1.16168,2.1855 -0.78414,3.34805 0.49892,0.20949 0.54632,-2.2158 0.50597,0.24175 -0.29779,2.5019 0.62936,0.22875 0.35546,-2.50096 0.56242,0.16536 -0.16126,2.77057 0.77674,0.30455 0.19056,-2.87291 0.45724,-0.0289 0.22827,2.64778 0.66597,0.24774 -0.0359,-4.56685 0.33693,-0.20224 1.39227,1.65147 0.32017,-0.35115 -0.77444,-2.03749 z m -0.97726,-0.17765 -1.43509,-0.746 -0.30622,-7.00985 c 0,0 0.64359,-2.77938 0.63694,-3.06274 l 0.6093,-1.21924 3.62552,-2.56583 -0.68276,1.9919 0.41561,4.74788 -1.80402,7.69727 z m -12.59945,1.31596 1.5198,0.0506 0.76631,-0.67111 1.21262,2.15766 0.86245,3.32873 -0.49386,0.22113 -0.59815,-2.20238 -0.50016,0.25356 0.35639,2.49422 -0.62382,0.24345 -0.41402,-2.49194 -0.55839,0.17851 0.2262,2.76603 -0.76938,0.32268 -0.25788,-2.86764 -0.4578,-0.0181 -0.16611,2.6524 -0.65997,0.26329 -0.0712,-4.56643 -0.34158,-0.19428 -1.35316,1.68368 -0.32832,-0.34355 0.72644,-2.0551 z m 1.18497,-16.19302 -0.005,3.09419 0.57959,1.91184 0.54538,-2.41185 z m -23.9347704,16.19302 -1.5198,0.0506 -0.76631,-0.67112 -1.21262,2.15767 -0.86245,3.32873 0.49386,0.22113 0.59815,-2.20238 0.50016,0.25356 -0.35639,2.49422 0.62382,0.24345 0.41402,-2.49194 0.55839,0.17851 -0.2262,2.76603 0.76938,0.32268 0.25788,-2.86764 0.4578,-0.0181 0.16611,2.65239 0.65997,0.2633 0.0712,-4.56643 0.34158,-0.19428 1.35316,1.68367 0.32832,-0.34354 -0.72644,-2.0551 z m -1.18497,-16.19302 0.005,3.09419 -0.57959,1.91184 -0.54539,-2.41185 z m 7.0789299,37.41425 -0.12448,1.12295 0.87118,1.08171 0.29058,1.70599 0.58116,0.24933 0.49774,-2.57866 0.33182,-0.91486 -0.29058,-0.58247 z m 3.85854,0.0832 -0.62241,1.74685 -1.32767,2.57867 0.33182,2.37095 0.95423,-2.66209 0.78832,-1.4964 z m -4.97867989,-2.37058 0.95422989,5.11609 -0.62239989,-0.33313 -0.49793,1.6638 z m 4.27340989,7.94395 -0.29058,0.91486 -0.62241,3.86828 -0.0829,5.15733 0.87174,5.03304 -0.0418,-6.44714 0.91298,-2.57848 0.1243,-2.82837 z m -1.99151,2.32914 0.20735,7.73637 1.65968,6.23904 -1.80497,-0.85299 -3.00797989,-10.83584 1.03728,-6.82095 z m 2.98717,15.09818 -0.12448,3.45228 -0.29058,1.20637 h -0.87118 l -0.24877,-0.83181 -0.29059,-0.0416 0.0623,0.83181 -1.09934,-0.33333 -0.29058,-0.16629 -1.2448,-0.27033 -0.0412,-0.97747 1.2031899,-2.03781 0.82975,-1.04009 2.03294,-0.83181 z m -6.16386989,-37.46914 0.15504,4.75053 2.40262989,6.60968 -0.73638,1.90021 -2.3640099,-8.34435 z m 0.58117,-11.60768 0.15503,4.00684 -1.31754001,7.93154 -0.61978,-6.40308 z m 0.38769,5.1223 2.75150989,6.07239 0.61997,4.87425 -1.16232,6.85771 -2.51904989,-6.98163 -0.15504,-7.18801 z m 12.16631039,20.87063 0.1243,1.12295 -0.87118,1.08171 -0.29058,1.70599 -0.58116,0.24933 -0.49774,-2.57866 -0.33182,-0.91486 0.29058,-0.58247 z m -3.8585305,0.0832 0.6224,1.74685 1.3273005,2.57867 -0.33182,2.37095 -0.9542305,-2.66209 -0.78738,-1.49734 z m 4.9781105,-2.37039 -0.95423,5.11609 0.62241,-0.33295 0.49773,1.66381 z m -4.2728405,7.94394 0.29058,0.91486 0.6224005,3.8681 0.0829,5.15733 -0.8713605,5.03304 0.0412,-6.44714 -0.91242,-2.57848 -0.12561,-2.82837 z m 1.9915005,2.32915 -0.20753,7.73637 -1.6594905,6.23904 1.8047805,-0.853 3.00816,-10.83583 -1.03727,-6.82095 z m -2.9869805,15.09817 0.1243,3.45228 0.28983,1.20638 h 0.87136 l 0.24897,-0.83181 0.2905805,-0.0416 -0.0624,0.83181 1.09914,-0.33332 0.29058,-0.16629 1.24444,-0.27033 0.0416,-0.97748 -1.20319,-2.03743 -0.82974,-1.0399 -2.0329405,-0.83181 z m 6.1631205,-37.46932 -0.15504,4.75091 -2.40263,6.60949 0.7362,1.90021 2.36401,-8.34435 z m -0.58154,-11.60825 -0.15485,4.00722 1.31793,7.93154 0.61977,-6.40308 z m -0.38731,5.12268 -2.75152,6.07258 -0.62015,4.87425 1.16232,6.85771 2.51886,-6.98144 0.15504,-7.18764 z m -17.8749004,-10.94443 -1.30083,10.28927 1.10778,0.01 1.89387,-7.99609 -0.19174,-4.53719 z m -1.21978,-1.94971 0.58728,2.58635 -1.11875,9.15614 -0.55849,-0.21663 -0.2304,-6.77018 z m 0.71916,-0.2047 0.33838,1.70499 1.81931,-2.54418 0.66289,-1.26895 z m 2.8527,-2.6096 c 0.0259,-0.0144 0.0536,-0.0254 0.0824,-0.0324 l 1.48332001,-4.95503 -1.00455001,-2.08428 -1.65509,1.74532 -2.23034,6.67667 -0.0415,0.93739 c 1.06528,-0.84215 2.18961,-1.60679 3.36433,-2.28803 z m -1.6945,-5.75654 -1.64891,6.43421 0.36468,-4.92266 z m 21.7225804,10.52055 1.30083,10.28927 -1.10778,0.01 -1.89387,-7.99609 0.19174,-4.53719 z m 1.21978,-1.94971 -0.58729,2.58635 1.11876,9.15614 0.55849,-0.21663 0.2304,-6.77018 z m -0.55354,-0.2047 -0.33838,1.70499 -1.81932,-2.54418 -0.6629,-1.26895 z m -2.85271,-2.6096 c -0.0259,-0.0144 -0.0536,-0.0254 -0.0824,-0.0324 l -1.48333,-4.95503 1.00456,-2.08428 1.65511,1.74532 2.23034,6.67667 0.0415,0.93739 c -1.06528,-0.84215 -2.18962,-1.60679 -3.36434,-2.28803 z m 1.6945,-5.75654 1.64893,6.43421 -0.36469,-4.92266 z m -13.8386705,-9.20021 -3.55745989,1.97916 -0.72653,-0.35074 z m 0.107,0.43288 0.37119,1.73073 -2.18459,0.53561 -1.40114989,-0.49436 z m -3.98148989,1.97595 -0.75814,-0.41 -2.40806001,1.66799 -1.17364,1.50707 -0.62662,1.56259 0.0464,3.70195 1.3284,-1.72153 -0.0407,-2.59376 0.48843,-0.5005 c 0,0 3.09777001,-3.19057 3.14370001,-3.214 z m 0.2409,0.10873 c 0.002,0.0525 -3.32987001,3.54733 -3.32987001,3.54733 l -0.10067,3.10396 1.15426,-1.97782 2.22547001,-0.94804 1.56574989,-2.88481 z m 10.05660039,-2.51756 3.55748,1.97916 0.72653,-0.35074 z m -0.107,0.43288 -0.3711905,1.73073 2.1846005,0.53561 1.40116,-0.49436 z m 3.98151,1.97595 0.75814,-0.41 2.40806,1.66799 1.17364,1.50707 0.62662,1.5626 -0.0464,3.70194 -1.3284,-1.72153 0.0407,-2.59376 -0.48842,-0.50049 c 0,0 -3.09778,-3.19058 -3.14371,-3.21401 z m -0.2409,0.10873 c -10e-4,0.0525 3.32987,3.54733 3.32987,3.54733 l 0.10067,3.10396 -1.15426,-1.97782 -2.22547,-0.94804 -1.56576,-2.88481 z\"\r\n                    />\r\n                  <path\r\n                    :fill=\"colors['Back']\"\r\n                    id=\"Back\"\r\n                    d=\"m 40.739147,19.072339 0.063,-2.62462 -0.71441,1.15181 -4.37994,1.49796 4.97857,8.36746 1.83043,5.08188 -0.21949,-13.55362 z m -7.42423,1.95717 -1.57473,1.56517 -0.81404,2.06905 -0.38603,2.52859 1.83679,-1.23927 2.76223,-1.15538 1.84691,3.4342 1.13679,5.49715 0.0767,5.8593 4.07066,1.10938 -0.10355,-7.94098 -1.94107,-4.90022 -5.04395,-8.19334 z m 13.23814,-1.85796 -0.063,-2.62463 0.71441,1.15181 4.37994,1.49796 -4.97857,8.36746 -1.83043,5.08189 0.21949,-13.55362 z m 7.42423,1.95716 1.57473,1.56518 0.81404,2.06904 0.0384,2.52859 -1.48921,-1.23926 -2.76223,-1.15539 -1.84691,3.4342 -1.13679,5.49715 -0.0767,5.8593 -4.07066,1.10938 0.10355,-7.94098 1.94107,-4.90021 5.04395,-8.19335 z m -11.12961,-1.764514 0.53876,25.33066 0.48967,-0.0297 0.65658,-25.3387 -0.28147,-0.84188 -1.25059,-4.9e-4 z\" />\r\n                </svg>\r\n              </v-col>\r\n\r\n              <v-col>\r\n                <div v-for=\"(exp, index) in action\" :key=\"index\">\r\n                  <v-select v-model=\"exp.region\" label=\"Select Body Region\" :items=\"body_regions\"  :onChange=\"changeColors()\"></v-select>\r\n                  <v-autocomplete v-model=\"exp.type\" label=\"Select Injury Type\" :items=\"patient_body[exp.region]\"></v-autocomplete>\r\n                  <v-row>\r\n                    <v-col>\r\n                      <v-select v-if=\"exp.type==='Tension Pneumothorax'\" v-model=\"exp.side\" label=\"Select side\" :items=\"sides\" style=\"width: 200px\" class=\"align-left\"></v-select>\r\n                    </v-col>\r\n                    <v-col>\r\n                      <v-select v-if=\"exp.type==='Tension Pneumothorax'\" v-model=\"exp.openclose\" label=\"Open or Closed\" :items=\"open_closed\" class=\"align-right\" style=\"width: 200px\"></v-select>\r\n                    </v-col>\r\n                  </v-row>\r\n                  <v-select v-if=\"exp.type==='Hemorrhage'\" v-model=exp.compartment label=\"Select compartment\" :items=\"hemorrhage_regions[exp.region]\"></v-select>\r\n                  <v-text-field v-if=\"exp.type==='Hemorrhage'\" v-model=\"exp.hemrate\" label=\"Initial Rate\" suffix=\"mL/min\"></v-text-field>\r\n                  <v-select v-if=\"exp.type==='Brain Injury'\" v-model=exp.braininjurytype label=\"Select type\" :items=\"brain_injury_types\"></v-select>\r\n                  <v-text-field v-if=\"exp.type==='Burn Wound'\" v-model=exp.burnsurfacearea label=\"Enter Fraction of Total Body Surface Area Affected\" hint=\"Enter a decimal between 0 and 1.\"></v-text-field>\r\n                  <v-slider v-if=\"(exp.type!='Hemorrhage') && (exp.type!='Burn Wound') && (exp.type!='Cardiac Arrest')\" v-model=\"exp.severity\" label=\"Severity\" class=\"align-center\" :max=\"sev_max\" :min=\"sev_min\" :step=\"0.1\">\r\n                    <template v-slot:append>\r\n                      <v-text-field v-model=\"exp.severity\" hide-details single-line density=\"compact\" style=\"width: 90px\"></v-text-field>\r\n                    </template>\r\n                  </v-slider>\r\n                </div>\r\n                <v-btn @click=\"removeAction(-1)\">Remove Injury</v-btn>\r\n                <v-btn @click=\"addAction\">Add Another Injury</v-btn>\r\n                <v-form\r\n                  ref=\"form\"\r\n                  v-model=\"valid\"\r\n                  lazy-validation\r\n                  >\r\n                    <v-combobox v-for=\"(item, index) in name\"\r\n                      :key=\"index\"\r\n                      :label=\"Object.keys(item)[0]\"\r\n                      :items='patient_body[Object.keys(item)[0]]'\r\n                      v-model=\"item[Object.keys(item)[0]]\" \r\n                      multiple\r\n                      chips      \r\n                  ></v-combobox>\r\n                </v-form>\r\n              </v-col>\r\n            </v-row>\r\n            <br>\r\n            <v-slider v-model=\"action_time\" label=\"Medical Responder Time to Scene\" class=\"align-center\" :max=\"time_max\" :min=\"time_min\" :step=\"0.5\">\r\n                            <template v-slot:append>\r\n                              <v-text-field v-model=\"action_time\" hide-details single-line density=\"compact\" :items=\"time_units\" style=\"width: 90px\"></v-text-field>\r\n                              <v-select v-model=\"action_unit\" hide-details single-line density=\"compact\" :items=\"time_units\" style=\"width: 90px\"></v-select>\r\n                            </template>\r\n                         </v-slider>\r\n        \r\n\r\n                <!-- <v-row>\r\n                <v-col cols=\"auto\"> -->\r\n                  <v-dialog\r\n      v-model=\"dialog1\"\r\n      persistent\r\n      width=\"auto\"\r\n    >\r\n      <template v-slot:activator=\"{ props }\">\r\n        <v-btn\r\n          color=\"success\"\r\n          v-bind=\"props\"\r\n        >\r\n          Submit\r\n        </v-btn>\r\n      </template>\r\n      <v-card>\r\n        <v-card-title class=\"text-h5\">\r\n          Submission Confirmation\r\n        </v-card-title>\r\n        <v-card-text>Are you sure you would like to submit your form?</v-card-text>\r\n        <v-card-actions>\r\n          <v-spacer></v-spacer>\r\n          <v-btn\r\n            color=\"green-darken-1\"\r\n            variant=\"text\"\r\n            @click=\"dialog1 = false\"\r\n          >\r\n            Dismiss\r\n          </v-btn>\r\n          <v-btn :disabled=\"!valid\" color=\"success\" class=\"mr-4\" @click=\"saveBiogearsFiles(); dialog1=false\"> Submit </v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n    <v-spacer></v-spacer>\r\n    <v-dialog\r\n      v-model=\"dialog\"\r\n      persistent\r\n      width=\"auto\"\r\n    >\r\n      <template v-slot:activator=\"{ props }\">\r\n        <v-btn\r\n          color=\"error\"\r\n          v-bind=\"props\"\r\n        >\r\n          Reset Form\r\n        </v-btn>\r\n      </template>\r\n      <v-card>\r\n        <v-card-title class=\"text-h5\">\r\n          Reset Confirmation\r\n        </v-card-title>\r\n        <v-card-text>Are you sure you would like to reset your form?</v-card-text>\r\n        <v-card-actions>\r\n          <v-spacer></v-spacer>\r\n          <v-btn\r\n            color=\"green-darken-1\"\r\n            variant=\"text\"\r\n            @click=\"dialog = false\"\r\n          >\r\n            Dismiss\r\n          </v-btn>\r\n          <v-btn color=\"error\" class=\"mr-4\" @click=\"reset(); dialog=false\"> Reset Form </v-btn>\r\n          </v-card-actions>\r\n          </v-card>\r\n          </v-dialog>\r\n              </v-card-text>\r\n              <!-- </v-col> \r\n              </v-row> -->\r\n            </v-card>  \r\n            <br>\r\n            <v-row class=\"justify-center\">\r\n                <v-col cols=\"auto\">\r\n                    <v-btn @click=\"nextTab('option-3')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\r\n                </v-col>\r\n                </v-row>\r\n                <br>   \r\n        </v-window-item>\r\n\t\t\t\t</v-form>\r\n\t\t\t</v-window>\r\n\t\t</v-container>\r\n\t</v-main>\r\n</template>\r\n<script>\r\nimport xmlbuilder from 'xmlbuilder'\r\nexport default {\r\n\tdata: () => ({\r\n\t\tenvironment_props: {\r\n\t\t\t\"temperature\": null,\r\n\t\t\t\"pressure\": null,\r\n\t\t\t\"humidity\": null,\r\n\t\t\t\"state\": null,\r\n\t\t\t\"cityName\": null,\r\n\t\t},\r\n\t\ttemperature_min: 0,\r\n\t\ttemperature_max: 100,\r\n\t\tpressure_min: 0,\r\n\t\tpressure_max: 1000,\r\n\t\tweatherData: null,\r\n\t\tlat: null,\r\n\t\tlon: null,\r\n\t\tdate: null,\r\n\t\tdialog1: null,\r\n\t\tdialog: null,\r\n\t\tage_min: 18,\r\n      age_max: 65,\r\n      core_temp_min: 0,\r\n      core_temp_max: 70,\r\n      heart_rate_min: 50,\r\n      heart_rate_max: 109,\r\n      resp_rate_min: 12,\r\n      resp_rate_max: 20,\r\n      height_min: 55,\r\n      height_max: 190,\r\n      height_units: ['cm', 'in'],\r\n      height_unit: 'cm',\r\n      weight_min: 20,\r\n      weight_max: 250,\r\n      weight_units: ['kg', 'lb'],\r\n      weight_unit: 'kg',\r\n      time_min: 0,\r\n      time_max: 60,\r\n      action_time: 0,\r\n      action_unit: 'min',\r\n      sev_min: 0,\r\n      sev_max: 1,\r\n      med_options: ['A', 'B', 'C'],\r\n      tab: 'home',\r\n      name: [],\r\n      sides: ['Left', 'Right'],\r\n      open_closed: ['Open', 'Closed'],\r\n      drawer: false,\r\n      valid: true,\r\n      expanded: [0],\r\n      scenario_file_name: [],\r\n      action: [\r\n        { region: [],\r\n          type: [],\r\n        },\r\n      ],\r\n\t\tcolors: {\r\n\t\t'Head':'blue',\r\n        'Neck': 'black', \r\n        'Chest': 'black', \r\n        'Back':'black',\r\n        'Abdomen':'black', \r\n        'Pelvis':'black',\r\n        'Extremities':'black',\r\n\t\t},\r\n      patient_props: {\r\n        \"Name\": [],\r\n        \"Sex\": [],\r\n        \"age\": 44,\r\n        \"weight\": 65,\r\n        \"height\": 170\r\n        \r\n      },\r\n      patient_vitals: {\r\n        \"BloodTypeABO\": 'AB',\r\n        \"BloodTypeRh\": 'Positive',\r\n        \"DiastolicArterialPressureBaseline\": [],\r\n        \"HeartRateBaseline\": 72,\r\n        \"RespirationRateBaseline\": 14,\r\n        \"SystolicArterialPressureBaseline\":[]\r\n      },\r\n      scenario_props: {\r\n        'Name': [],\r\n        'Description': [],\r\n      },\r\n      genders: [\r\n        'Male',\r\n        'Female'\r\n      ],\r\n      patient_body: {\r\n        'Head':['Hemorrhage', 'Brain Injury', 'Acute Stress', 'Burn Wound'],\r\n        'Neck':['Airway Obstruction', 'Apnea', 'Burn Wound'], \r\n        'Chest':['Asthma Attack', 'Acute Respiratory Distress', 'Bronchoconstriction', 'Cardiac Arrest', 'Tension Pneumothorax', 'Burn Wound', 'Hemorrhage'], \r\n        'Back':['Burn Wound'],\r\n        'Abdomen':['Burn Wound'], \r\n        'Pelvis':['Burn Wound'],\r\n        'Extremities':['Burn Wound', 'Hemorrhage'],\r\n      },\r\n      hemorrhage_regions: {\r\n        'Head': ['Brain'],\r\n        'Chest': ['Aorta', 'Myocardium', 'Vena Cava', 'Lung'],\r\n        'Abdomen': ['Spleen', 'Liver', 'LeftKidney', 'RightKidney', 'Splanchnic', 'SmallIntestine', 'LargeIntestine'],\r\n        'Extremities': ['LeftArm', 'RightArm', 'LeftLeg', 'RightLeg']\r\n    },\r\n    brain_injury_types: [\r\n      'Diffuse',\r\n      'LeftFocal',\r\n      'RightFocal'\r\n    ],\r\n      body_regions: [\r\n        'Head',\r\n        'Neck', \r\n        'Chest', \r\n        'Back',\r\n        'Abdomen', \r\n        'Pelvis',\r\n        'Extremities']\r\n      ,\r\n      blood_types: [\r\n        'A',\r\n        'B',\r\n        'AB',\r\n        'O'\r\n      ],\r\n      rh: [\r\n        'Positive',\r\n        'Negative'\r\n      ],\r\n      time_units: [\r\n        's',\r\n        'min',\r\n        'hr'\r\n      ]\r\n\t}),\r\n\tmethods: {\r\n\t\tchangeColors() {\r\n\t\t\tconst selected_regions = []\r\n\t\t\tfor (var actions in this.action) {\r\n\t\t\t\tselected_regions.push(this.action[actions]['region'])\r\n\t\t\t}\r\n\t\t\tconsole.log(selected_regions)\r\n\t\t\t\tfor (let region of this.body_regions) {\r\n\t\t\t\t\tif (selected_regions.includes(region)) {\r\n\t\t\t\t\t\tthis.colors[region] = 'red';\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.colors[region] = 'black';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t},\r\n\t\tnextTab(id) {\r\n\t\t\t\tthis.tab = id;\r\n\t\t\t},\r\n\t\t\taddAction() {\r\n\t\t\t\tthis.action.push({\r\n\t\t\t\t\tregion: '',\r\n\t\t\t\t\ttype: '',\r\n\t\t\t\t\tseverity: ''\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tremoveAction(index) {\r\n\t\t\t\tthis.action.splice(index, 1);\r\n\t\t\t},\r\n\t\t\tvalidate() {\r\n\t\t\t\tthis.$refs.form.validate()\r\n\t\t\t},\r\n\t\t\treset() {\r\n\t\t\t\tthis.$refs.form.reset()\r\n\t\t\t},\r\n\t\t\tpathClicked(id) {\r\n\t\t\t\tlet pathElement = document.getElementById(id);\r\n\t\t\t\tif(this.name.some(x => Object.keys(x).includes(id))) {\r\n\t\t\t\t\tthis.name = this.name.filter(x => !Object.keys(x).includes(id));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.name.push({\r\n\t\t\t\t\t\t[id]: ''\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tif(pathElement.classList.contains(\"active\")) {\r\n\t\t\t\t\tpathElement.classList.remove(\"active\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpathElement.classList.add(\"active\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tsaveStateXML() {\r\n\t\t\t\tconst xml = xmlbuilder.create('Patient', {\r\n\t\t\t\t\tencoding: 'UTF-8',\r\n\t\t\t\t\tstandalone: \"yes\"\r\n\t\t\t\t})\r\n\t\t\t\txml.att({\r\n\t\t\t\t\t'xmlns': \"uri:/mil/tatrc/physiology/datamodel\",\r\n\t\t\t\t\t'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\r\n\t\t\t\t\t'contentVersion': \"BioGears_7.5\"\r\n\t\t\t\t})\r\n\t\t\t\tfor(var key1 in this.patient_props) {\r\n\t\t\t\t\tif(key1 == 'age') {\r\n\t\t\t\t\t\tconst Age = xml.ele('Age')\r\n\t\t\t\t\t\tAge.att('value', this.patient_props[key1])\r\n\t\t\t\t\t\tAge.att('units', 'yr')\r\n\t\t\t\t\t} else if (key1 == 'height') {\r\n\t\t\t\t\t\tconst Height = xml.ele('Height')\r\n\t\t\t\t\t\tHeight.att('readOnly', 'false')\r\n\t\t\t\t\t\tHeight.att('value', this.patient_props[key1])\r\n\t\t\t\t\t\tHeight.att('unit', this.height_unit)\r\n\t\t\t\t\t} else if (key1 == 'weight') {\r\n\t\t\t\t\t\tconst Weight = xml.ele('Weight')\r\n\t\t\t\t\t\tWeight.att('readOnly', 'false')\r\n\t\t\t\t\t\tWeight.att('value', this.patient_props[key1])\r\n\t\t\t\t\t\tWeight.att('unit', this.weight_unit)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\txml.ele(key1, this.patient_props[key1])\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor(var key2 in this.patient_vitals) {\r\n\t\t\t\t\tif(key2 == 'BloodTypeRh') {\r\n\t\t\t\t\t\tif(this.patient_vitals[key2] == 'Positive') {\r\n\t\t\t\t\t\t\txml.ele(key2, 'true')\r\n\t\t\t\t\t\t} else if(this.patient_vitals[key2] == 'Negative') {\r\n\t\t\t\t\t\t\txml.ele(key2, 'false')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if(key2 == 'DiastolicArterialPressureBaseline') {\r\n\t\t\t\t\t\tconst DiastolicArterialPressureBaseline = xml.ele('DiastolicArterialPressureBaseline')\r\n\t\t\t\t\t\tDiastolicArterialPressureBaseline.att('value', this.patient_vitals[key2])\r\n\t\t\t\t\t\tDiastolicArterialPressureBaseline.att('units', 'mmHg')\r\n\t\t\t\t\t} else if(key2 == 'SystolicArterialPressureBaseline') {\r\n\t\t\t\t\t\tconst SystolicArterialPressureBaseline = xml.ele('SystolicArterialPressureBaseline')\r\n\t\t\t\t\t\tSystolicArterialPressureBaseline.att('value', this.patient_vitals[key2])\r\n\t\t\t\t\t\tSystolicArterialPressureBaseline.att('units', 'mmHg')\r\n\t\t\t\t\t} else if(key2 == 'HeartRateBaseline') {\r\n\t\t\t\t\t\tconst HeartRate = xml.ele('HeartRateBaseline')\r\n\t\t\t\t\t\tHeartRate.att('value', this.patient_vitals[key2])\r\n\t\t\t\t\t\tHeartRate.att('units', '1/min')\r\n\t\t\t\t\t} else if(key2 == 'RespirationRateBaseline') {\r\n\t\t\t\t\t\tconst RespRate = xml.ele('RespirationRateBaseline')\r\n\t\t\t\t\t\tRespRate.att('value', this.patient_vitals[key2])\r\n\t\t\t\t\t\tRespRate.att('units', '1/min')\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\txml.ele(key2, this.patient_vitals[key2])\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar xmlString = xml.end({\r\n\t\t\t\t\tpretty: true\r\n\t\t\t\t});\r\n\t\t\t\tconst blob = new Blob([xmlString], {\r\n\t\t\t\t\ttype: 'text/xml'\r\n\t\t\t\t})\r\n\t\t\t\tconst link = document.createElement('a')\r\n\t\t\t\tlink.href = URL.createObjectURL(blob)\r\n\t\t\t\tlink.download = 'patientdata.xml'\r\n\t\t\t\tlink.click()\r\n\t\t\t},\r\n\t\t\tsaveScenarioXML() {\r\n\t\t\t\tconst xml = xmlbuilder.create('Scenario', {\r\n\t\t\t\t\tencoding: 'UTF-8',\r\n\t\t\t\t\tstandalone: \"yes\"\r\n\t\t\t\t})\r\n\t\t\t\txml.att({\r\n\t\t\t\t\t'xmlns': \"uri:/mil/tatrc/physiology/datamodel\",\r\n\t\t\t\t\t'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\r\n\t\t\t\t\t'contentVersion': \"BioGears_7.5\"\r\n\t\t\t\t})\r\n\t\t\t\tfor(var key1 in this.scenario_props) {\r\n\t\t\t\t\txml.ele(key1, this.scenario_props[key1])\r\n\t\t\t\t}\r\n\t\t\t\tconst InitialParams = xml.ele('InitialParameters')\r\n\t\t\t\tInitialParams.ele('PatientFile', 'patientdata.xml')\r\n\t\t\t\tconst data_req = xml.ele('DataRequests')\r\n\t\t\t\tdata_req.att('SamplesPerSecond', 50)\r\n\t\t\t\tconst map = data_req.ele('DataRequest')\r\n\t\t\t\tmap.att('xsi:type', 'PhysiologyDataRequestData')\r\n\t\t\t\tmap.att('Name', 'MeanArterialPressure')\r\n\t\t\t\tmap.att('Unit', 'mmHg')\r\n\t\t\t\tmap.att('Precision', 1)\r\n\t\t\t\tconst sap = data_req.ele('DataRequest')\r\n\t\t\t\tsap.att('xsi:type', 'PhysiologyDataRequestData')\r\n\t\t\t\tsap.att('Name', 'SystolicArterialPressure')\r\n\t\t\t\tsap.att('Unit', 'mmHg')\r\n\t\t\t\tsap.att('Precision', 0)\r\n\t\t\t\tconst dap = data_req.ele('DataRequest')\r\n\t\t\t\tdap.att('xsi:type', 'PhysiologyDataRequestData')\r\n\t\t\t\tdap.att('Name', 'DiastolicArterialPressure')\r\n\t\t\t\tdap.att('Unit', 'mmHg')\r\n\t\t\t\tdap.att('Precision', 1)\r\n\t\t\t\tconst co = data_req.ele('DataRequest')\r\n\t\t\t\tco.att('xsi:type', 'PhysiologyDataRequestData')\r\n\t\t\t\tco.att('Name', 'CardiacOutput')\r\n\t\t\t\tco.att('Unit', 'L/min')\r\n\t\t\t\tco.att('Precision', 2)\r\n\t\t\t\tconst cvp = data_req.ele('DataRequest')\r\n\t\t\t\tcvp.att('xsi:type', 'PhysiologyDataRequestData')\r\n\t\t\t\tcvp.att('Name', 'CentralVenousPressure')\r\n\t\t\t\tcvp.att('Unit', 'mmHg')\r\n\t\t\t\tcvp.att('Precision', 2)\r\n\t\t\t\tconst hr = data_req.ele('DataRequest')\r\n\t\t\t\thr.att('xsi:type', 'PhysiologyDataRequestData')\r\n\t\t\t\thr.att('Name', 'HeartRate')\r\n\t\t\t\thr.att('Unit', '')\r\n\t\t\t\thr.att('Precision', 2)\r\n\t\t\t\tconst tv = data_req.ele('DataRequest')\r\n\t\t\t\ttv.att('xsi:type', 'PhysiologyDataRequestData')\r\n\t\t\t\ttv.att('Name', 'TidalVolume')\r\n\t\t\t\ttv.att('Unit', 'mL')\r\n\t\t\t\ttv.att('Precision', 3)\r\n\t\t\t\tconst rr = data_req.ele('DataRequest')\r\n\t\t\t\trr.att('xsi:type', 'PhysiologyDataRequestData')\r\n\t\t\t\trr.att('Name', 'RespirationRate')\r\n\t\t\t\trr.att('Unit', '1/min')\r\n\t\t\t\trr.att('Precision', 2)\r\n\t\t\t\tconst oxsat = data_req.ele('DataRequest')\r\n\t\t\t\toxsat.att('xsi:type', 'PhysiologyDataRequestData')\r\n\t\t\t\toxsat.att('Name', 'OxygenSaturation')\r\n\t\t\t\toxsat.att('Unit', 'unitless')\r\n\t\t\t\toxsat.att('Precision', 3)\r\n\t\t\t\tconst ct = data_req.ele('DataRequest')\r\n\t\t\t\tct.att('xsi:type', 'PhysiologyDataRequestData')\r\n\t\t\t\tct.att('Name', 'CoreTemperature')\r\n\t\t\t\tct.att('Unit', 'degC')\r\n\t\t\t\tct.att('Precision', 1)\r\n\t\t\t\tfor(var item2 in this.action) {\r\n\t\t\t\t\tconst act = xml.ele('Action')\r\n\t\t\t\t\tif(this.action[item2]['type'] == 'Tension Pneumothorax') {\r\n\t\t\t\t\t\tact.att('xsi:type', 'TensionPneumothoraxData')\r\n\t\t\t\t\t\tact.att('Type', this.action[item2]['openclose'])\r\n\t\t\t\t\t\tact.att('Side', this.action[item2]['side'])\r\n\t\t\t\t\t\tconst sev = act.ele('Severity')\r\n\t\t\t\t\t\tsev.att('value', this.action[item2]['severity'])\r\n\t\t\t\t\t} else if(this.action[item2]['type'] == 'Hemorrhage') {\r\n\t\t\t\t\t\tact.att('xsi:type', 'HemorrhageData')\r\n\t\t\t\t\t\tact.att('Compartment', this.action[item2]['compartment'])\r\n\t\t\t\t\t\tconst initrate = act.ele('InitialRate')\r\n\t\t\t\t\t\tinitrate.att('value', this.action[item2]['hemrate'])\r\n\t\t\t\t\t\tinitrate.att('unit', 'mL/min')\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tact.att('xsi:type', this.action[item2]['type'])\r\n\t\t\t\t\t\tconst sev = act.ele('Severity')\r\n\t\t\t\t\t\tsev.att('value', this.action[item2]['severity'])\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconst time_act = xml.ele('Action')\r\n\t\t\t\ttime_act.att('xsi:type', 'AdvanceTimeData')\r\n\t\t\t\tconst time = time_act.ele('Time')\r\n\t\t\t\ttime.att('value', this.action_time)\r\n\t\t\t\ttime.att('unit', this.action_unit)\r\n\t\t\t\tvar xmlString = xml.end({\r\n\t\t\t\t\tpretty: true\r\n\t\t\t\t});\r\n\t\t\t\tconst blob = new Blob([xmlString], {\r\n\t\t\t\t\ttype: 'text/xml'\r\n\t\t\t\t})\r\n\t\t\t\tconst link = document.createElement('a')\r\n\t\t\t\tlink.href = URL.createObjectURL(blob)\r\n\t\t\t\tlink.download = 'biogearsscenario.xml'\r\n\t\t\t\tlink.click()\r\n\t\t\t},\r\n\t\t\tsaveBiogearsFiles() {\r\n\t\t\t\tthis.saveStateXML()\r\n\t\t\t\tthis.saveScenarioXML()\r\n\t\t\t},\r\n\t\t\tasync pullEnvironmentData() {\r\n    const fetch = require('node-fetch'); // Only needed in Node.js environment\r\n    var apiKey = '7a72fefa61ba4a84959231957230205'; // Replace with your Weather API key\r\n    console.log(this.date);\r\n    try {\r\n        const response = await fetch(`http://api.weatherapi.com/v1/history.json?key=${apiKey}&q=${this.lat},${this.lon}&dt=${this.date}`);\r\n        const data = await response.json();\r\n        // Extract location information\r\n        const location = data.location;\r\n        this.environment_props['cityName'] = location.name;\r\n\t\tthis.environment_props['state'] = location.region;\r\n        if (data.forecast && data.forecast.forecastday && data.forecast.forecastday.length > 0) {\r\n            this.weatherData = data.forecast.forecastday[0].day;\r\n            this.environment_props['temperature'] = this.weatherData.avgtemp_c;\r\n            this.environment_props['humidity'] = this.weatherData.avghumidity;\r\n            console.log(`Temperature: ${this.environment_props['temperature']} °C`);\r\n            console.log(`Relative Humidity: ${this.environment_props['humidity']} %`);\r\n            console.log(data.forecast.forecastday[0].hour)\r\n\t\t\t// Calculate the sum of all pressure fields using the reduce() method\r\n\t\t\tconst sum = data.forecast.forecastday[0].hour.reduce((accumulator, currentObj) => {\r\n\t\t\treturn accumulator + currentObj.pressure_mb;\r\n\t\t\t}, 0);\r\n\t\t\t// Calculate the average by dividing the sum by the length of the dataArray\r\n\t\t\tthis.environment_props['pressure'] = sum / data.forecast.forecastday[0].hour.length / 1.33322;\r\n        } else {\r\n            console.log('No weather data found for the given location and date.');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching weather data:', error);\r\n    }\r\n},\r\n\r\n\t\t},\r\n}\r\n</script>\r\n<style>\r\n.my-content {\r\n\tmargin-top: -50px;\r\n\t/* Adjust the top margin */\r\n\t/* padding-left: 16px; Adjust the left padding */\r\n}\r\n\r\n@media (hover: hover) {\r\n\tsvg:hover {\r\n\t\tcursor: pointer;\r\n\t}\r\n\tsvg path:hover {\r\n\t\topacity: 0.8;\r\n\t}\r\n}\r\n\r\n#HeadNeck.active {\r\n\tfill: rgb(255, 0, 0);\r\n}\r\n\r\n#Chest.active {\r\n\tfill: rgb(163, 0, 0);\r\n}\r\n\r\n#Extremities.active {\r\n\tfill: rgb(89, 0, 0);\r\n}\r\n\r\n#Back.active {\r\n\tfill: rgb(255, 138, 138);\r\n}\r\n\r\n#AbdomenPelvis.active {\r\n\tfill: rgb(255, 135, 37);\r\n}\r\n\r\n.active {\r\n\tfill: #0004ff;\r\n}\r\n\r\n.noClick {\r\n\tpointer-events: none;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}