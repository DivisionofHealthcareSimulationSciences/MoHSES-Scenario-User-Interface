{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_toolbar_title = _resolveComponent(\"v-toolbar-title\");\n  const _component_v_toolbar = _resolveComponent(\"v-toolbar\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_tab = _resolveComponent(\"v-tab\");\n  const _component_v_tabs = _resolveComponent(\"v-tabs\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_select = _resolveComponent(\"v-select\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_combobox = _resolveComponent(\"v-combobox\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_window_item = _resolveComponent(\"v-window-item\");\n  const _component_v_main = _resolveComponent(\"v-main\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_checkbox_btn = _resolveComponent(\"v-checkbox-btn\");\n  const _component_v_file_input = _resolveComponent(\"v-file-input\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_window = _resolveComponent(\"v-window\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_v_toolbar, {\n    color: \"primary\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_toolbar_title, null, {\n      default: _withCtx(() => [_createTextVNode(\"Scenario Creation\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }), _createVNode(_component_v_row, null, {\n    default: _withCtx(() => [_createVNode(_component_v_col, {\n      cols: \"3\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_tabs, {\n        modelValue: _ctx.tab,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.tab = $event),\n        direction: \"vertical\",\n        color: \"primary\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_tab, {\n          value: \"option-1\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_icon, {\n            start: \"\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" mdi-form-textbox \")]),\n            _: 1 /* STABLE */\n          }), _createTextVNode(\" Scenario Properties \")]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_tab, {\n          value: \"option-2\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_icon, {\n            start: \"\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" mdi-account \")]),\n            _: 1 /* STABLE */\n          }), _createTextVNode(\" Patient Properties \")]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_tab, {\n          value: \"option-3\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_icon, {\n            start: \"\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" mdi-access-point \")]),\n            _: 1 /* STABLE */\n          }), _createTextVNode(\" Environment Properties \")]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_tab, {\n          value: \"option-4\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_icon, {\n            start: \"\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" mdi-list-status \")]),\n            _: 1 /* STABLE */\n          }), _createTextVNode(\" Educational Encounter Properties \")]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_tab, {\n          value: \"option-5\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_icon, {\n            start: \"\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" mdi-tools \")]),\n            _: 1 /* STABLE */\n          }), _createTextVNode(\" Capabilities \")]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_tab, {\n          value: \"option-6\"\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_col, {\n      cols: \"7\",\n      class: \"my-content\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_window, {\n        modelValue: _ctx.tab,\n        \"onUpdate:modelValue\": _cache[33] || (_cache[33] = $event => _ctx.tab = $event)\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_main, null, {\n          default: _withCtx(() => [_createVNode(_component_v_window_item, {\n            value: \"option-1\",\n            transition: false\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, null, {\n              default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_form, {\n                  ref: \"form\",\n                  modelValue: _ctx.valid,\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.valid = $event),\n                  \"lazy-validation\": \"\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_select, {\n                    modelValue: _ctx.patient_props['type'],\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.patient_props['type'] = $event),\n                    items: _ctx.types,\n                    rules: [v => !!v || 'Type is required'],\n                    label: \"Instructor Type\",\n                    required: \"\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"rules\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n                  modelValue: _ctx.scenario_props['name'],\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.scenario_props['name'] = $event),\n                  label: \"Scenario Name\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_combobox, {\n                  modelValue: _ctx.scenario_props['authors'],\n                  \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.scenario_props['authors'] = $event),\n                  label: \"Authors\",\n                  required: \"\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_window_item, {\n          value: \"option-2\",\n          transition: false\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_card, {\n            flat: \"\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n              default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                modelValue: _ctx.patient_props['name'],\n                \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.patient_props['name'] = $event),\n                rules: _ctx.nameRules,\n                label: \"Name\",\n                required: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n                modelValue: _ctx.patient_props['title'],\n                \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.patient_props['title'] = $event),\n                rules: _ctx.nameRules,\n                label: \"Title or Rank\",\n                required: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n                modelValue: _ctx.patient_props['age'],\n                \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.patient_props['age'] = $event),\n                rules: _ctx.nameRules,\n                label: \"Age\",\n                required: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_select, {\n                modelValue: _ctx.patient_props['gender'],\n                \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => _ctx.patient_props['gender'] = $event),\n                items: _ctx.genders,\n                rules: [v => !!v || 'Gender is required'],\n                label: \"Gender\",\n                required: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"rules\"]), _createVNode(_component_v_text_field, {\n                modelValue: _ctx.patient_props['height'],\n                \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => _ctx.patient_props['height'] = $event),\n                rules: _ctx.nameRules,\n                label: \"Height [cm]\",\n                required: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n                modelValue: _ctx.patient_props['weight'],\n                \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => _ctx.patient_props['weight'] = $event),\n                rules: _ctx.nameRules,\n                label: \"Weight [kg]\",\n                required: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_window_item, {\n          value: \"option-3\",\n          transition: false\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_card, {\n            flat: \"\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n              default: _withCtx(() => [_createVNode(_component_v_textarea, {\n                modelValue: _ctx.environment_props['surrounding'],\n                \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => _ctx.environment_props['surrounding'] = $event),\n                label: \"Surrounding\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n                modelValue: _ctx.environment_props['altitude'],\n                \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => _ctx.environment_props['altitude'] = $event),\n                rules: _ctx.nameRules,\n                label: \"Altitude or Elevation\",\n                required: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n                modelValue: _ctx.environment_props['temperature'],\n                \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => _ctx.environment_props['temperature'] = $event),\n                rules: _ctx.nameRules,\n                label: \"Temperature [C]\",\n                required: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n                modelValue: _ctx.environment_props['pressure'],\n                \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => _ctx.environment_props['pressure'] = $event),\n                rules: _ctx.nameRules,\n                label: \"Pressure [mmHg]\",\n                required: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_text_field, {\n                modelValue: _ctx.environment_props['co2'],\n                \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => _ctx.environment_props['co2'] = $event),\n                rules: _ctx.nameRules,\n                label: \"Ambient CO2 [fraction]\",\n                required: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_combobox, {\n                modelValue: _ctx.environment_props['sounds'],\n                \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => _ctx.environment_props['sounds'] = $event),\n                label: \"Ambient Sounds\",\n                multiple: \"\",\n                chips: \"\",\n                hint: \"Click \\\"enter\\\" to add multiple items\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_combobox, {\n                modelValue: _ctx.environment_props['smells'],\n                \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => _ctx.environment_props['smells'] = $event),\n                label: \"Smells\",\n                multiple: \"\",\n                chips: \"\",\n                hint: \"Click \\\"enter\\\" to add multiple items\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])]),\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_window_item, {\n          value: \"option-4\",\n          transition: false\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_card, {\n            flat: \"\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n              default: _withCtx(() => [_createVNode(_component_v_textarea, {\n                modelValue: _ctx.ed_props['instruction'],\n                \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => _ctx.ed_props['instruction'] = $event),\n                label: \"Instructions\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_textarea, {\n                modelValue: _ctx.ed_props['narrative'],\n                \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => _ctx.ed_props['narrative'] = $event),\n                label: \"Narrative\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n                modelValue: _ctx.ed_props['learnerCount'],\n                \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => _ctx.ed_props['learnerCount'] = $event),\n                label: \"Number of Learners\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n                modelValue: _ctx.ed_props['role'],\n                \"onUpdate:modelValue\": _cache[21] || (_cache[21] = $event => _ctx.ed_props['role'] = $event),\n                label: \"Roles\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_combobox, {\n                modelValue: _ctx.ed_props['setup_checklist'],\n                \"onUpdate:modelValue\": _cache[22] || (_cache[22] = $event => _ctx.ed_props['setup_checklist'] = $event),\n                label: \"Setup Checklist\",\n                multiple: \"\",\n                chips: \"\",\n                hint: \"Click \\\"enter\\\" to add multiple items\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_combobox, {\n                modelValue: _ctx.ed_props['equipment'],\n                \"onUpdate:modelValue\": _cache[23] || (_cache[23] = $event => _ctx.ed_props['equipment'] = $event),\n                label: \"Equipment\",\n                multiple: \"\",\n                chips: \"\",\n                hint: \"Click \\\"enter\\\" to add multiple items\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_combobox, {\n                modelValue: _ctx.ed_props['supplies'],\n                \"onUpdate:modelValue\": _cache[24] || (_cache[24] = $event => _ctx.ed_props['supplies'] = $event),\n                label: \"Supplies\",\n                multiple: \"\",\n                chips: \"\",\n                hint: \"Click \\\"enter\\\" to add multiple items\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n                modelValue: _ctx.ed_props['duration'],\n                \"onUpdate:modelValue\": _cache[25] || (_cache[25] = $event => _ctx.ed_props['duration'] = $event),\n                label: \"Estimated Duration\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n                modelValue: _ctx.ed_props['scenario_type'],\n                \"onUpdate:modelValue\": _cache[26] || (_cache[26] = $event => _ctx.ed_props['scenario_type'] = $event),\n                label: \"Scenario Type\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n                modelValue: _ctx.ed_props['assessment_type'],\n                \"onUpdate:modelValue\": _cache[27] || (_cache[27] = $event => _ctx.ed_props['assessment_type'] = $event),\n                label: \"Assessment Type\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n                modelValue: _ctx.ed_props['learner_group'],\n                \"onUpdate:modelValue\": _cache[28] || (_cache[28] = $event => _ctx.ed_props['learner_group'] = $event),\n                label: \"Learner Group\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_combobox, {\n                modelValue: _ctx.ed_props['objectives'],\n                \"onUpdate:modelValue\": _cache[29] || (_cache[29] = $event => _ctx.ed_props['objectives'] = $event),\n                label: \"Learning Objectives\",\n                multiple: \"\",\n                chips: \"\",\n                hint: \"Click \\\"enter\\\" to add multiple items\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_combobox, {\n                modelValue: _ctx.ed_props['task'],\n                \"onUpdate:modelValue\": _cache[30] || (_cache[30] = $event => _ctx.ed_props['task'] = $event),\n                label: \"Task Descriptions\",\n                multiple: \"\",\n                chips: \"\",\n                hint: \"Click \\\"enter\\\" to add multiple items\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_combobox, {\n                modelValue: _ctx.ed_props['conditions'],\n                \"onUpdate:modelValue\": _cache[31] || (_cache[31] = $event => _ctx.ed_props['conditions'] = $event),\n                label: \"Performance Conditions\",\n                multiple: \"\",\n                chips: \"\",\n                hint: \"Click \\\"enter\\\" to add multiple items\"\n              }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_combobox, {\n                modelValue: _ctx.ed_props['exit_criteria'],\n                \"onUpdate:modelValue\": _cache[32] || (_cache[32] = $event => _ctx.ed_props['exit_criteria'] = $event),\n                label: \"Exit Criteria\",\n                multiple: \"\",\n                chips: \"\",\n                hint: \"Click \\\"enter\\\" to add multiple items\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])]),\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_window_item, {\n          value: \"option-5\",\n          transition: false\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.capability, (exp, index) => {\n            return _openBlock(), _createElementBlock(\"div\", {\n              key: index\n            }, [_createVNode(_component_v_checkbox_btn, {\n              modelValue: exp.required,\n              \"onUpdate:modelValue\": $event => exp.required = $event,\n              label: \"Required\"\n            }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_v_text_field, {\n              modelValue: exp.name,\n              \"onUpdate:modelValue\": $event => exp.name = $event,\n              label: \"Capability Name\"\n            }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_v_text_field, {\n              modelValue: exp.data,\n              \"onUpdate:modelValue\": $event => exp.data = $event,\n              label: \"Configuration Data\"\n            }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_v_text_field, {\n              modelValue: exp.propertyName,\n              \"onUpdate:modelValue\": $event => exp.propertyName = $event,\n              label: \"Property Name\"\n            }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_v_select, {\n              modelValue: exp.dataType,\n              \"onUpdate:modelValue\": $event => exp.dataType = $event,\n              label: \"Data Type\",\n              items: ['string', 'number', 'boolean', 'option']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_v_file_input, {\n              modelValue: exp.value,\n              \"onUpdate:modelValue\": $event => exp.value = $event,\n              label: \"Value\"\n            }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_v_btn, {\n              onClick: $event => $options.removeCapability(index)\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Remove Capability\")]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _hoisted_1, _hoisted_2]);\n          }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_v_btn, {\n            onClick: $options.addCapability\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"Add Capability\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","_createVNode","_component_v_toolbar","color","_component_v_toolbar_title","_component_v_row","_component_v_col","cols","_component_v_tabs","_ctx","direction","_component_v_tab","value","_component_v_icon","start","class","_component_v_window","_component_v_main","_component_v_window_item","transition","_component_v_card","_component_v_card_text","_component_v_form","ref","_component_v_select","items","rules","v","label","required","_component_v_text_field","_component_v_combobox","multiple","chips","hint","flat","_component_v_textarea","_createElementBlock","_Fragment","exp","index","key","_component_v_checkbox_btn","name","data","propertyName","dataType","_component_v_file_input","_component_v_btn","onClick","$options","_hoisted_1","_hoisted_2"],"sourceRoot":"","sources":["/Users/stlp/Desktop/Spring 2023/BIOEN 405/User Interface/MoHSES-Scenario-User-Interface/src/views/HomeView.vue"],"sourcesContent":["<template>\n    <v-toolbar\n      color=\"primary\"\n    >\n      <v-toolbar-title>Scenario Creation</v-toolbar-title>\n    </v-toolbar>\n    <v-row>\n    <v-col cols=\"3\">\n      <v-tabs\n        v-model=\"tab\"\n        direction=\"vertical\"\n        color=\"primary\"\n      >\n      \n        <v-tab value=\"option-1\">\n          <v-icon start>\n            mdi-form-textbox\n          </v-icon>\n          Scenario Properties\n        </v-tab>\n        <v-tab value=\"option-2\">\n          <v-icon start>\n            mdi-account\n          </v-icon>\n          Patient Properties\n        </v-tab>\n        <v-tab value=\"option-3\">\n          <v-icon start>\n            mdi-access-point\n          </v-icon>\n          Environment Properties\n        </v-tab>\n        <v-tab value=\"option-4\">\n          <v-icon start>\n            mdi-list-status\n          </v-icon>\n          Educational Encounter Properties\n        </v-tab>\n        <v-tab value=\"option-5\">\n          <v-icon start>\n            mdi-tools\n          </v-icon>\n          Capabilities\n        </v-tab>\n        <v-tab value=\"option-6\">\n          \n        </v-tab>\n        \n      </v-tabs>\n    </v-col>\n    <v-col cols=\"7\" class=\"my-content\">\n      <v-window v-model=\"tab\">\n          <v-main>\n        <v-window-item value=\"option-1\" :transition=\"false\">\n          <v-card>\n            <v-card-text>\n              <v-form\n              ref=\"form\"\n              v-model=\"valid\"\n              lazy-validation\n            >\n              <v-select\n              v-model=\"patient_props['type']\"\n              :items=\"types\"\n              :rules=\"[v => !!v || 'Type is required']\"\n              label=\"Instructor Type\"\n              required\n            ></v-select>\n              </v-form>\n            <v-text-field\n              v-model=\"scenario_props['name']\"\n              label=\"Scenario Name\"\n              required\n            ></v-text-field>\n\n            <v-combobox\n              v-model=\"scenario_props['authors']\"\n              label=\"Authors\"\n              required\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n\n            </v-card-text>\n          </v-card>\n        </v-window-item>\n        </v-main>\n\n        <v-window-item value=\"option-2\" :transition=\"false\">\n          <v-card flat>\n              <v-card-text>\n                <v-text-field\n              v-model=\"patient_props['name']\"\n              :rules=\"nameRules\"\n              label=\"Name\"\n              required\n            ></v-text-field>\n\n            <v-text-field\n              v-model=\"patient_props['title']\"\n              :rules=\"nameRules\"\n              label=\"Title or Rank\"\n              required\n            ></v-text-field>\n\n            <v-text-field\n              v-model=\"patient_props['age']\"\n              :rules=\"nameRules\"\n              label=\"Age\"\n              required\n            ></v-text-field>\n\n            <v-select\n              v-model=\"patient_props['gender']\"\n              :items=\"genders\"\n              :rules=\"[v => !!v || 'Gender is required']\"\n              label=\"Gender\"\n              required\n            ></v-select>\n\n            <v-text-field\n              v-model=\"patient_props['height']\"\n              :rules=\"nameRules\"\n              label=\"Height [cm]\"\n              required\n              ></v-text-field>\n\n            <v-text-field\n              v-model=\"patient_props['weight']\"\n              :rules=\"nameRules\"\n              label=\"Weight [kg]\"\n              required\n            ></v-text-field>\n            </v-card-text> \n          </v-card>\n        </v-window-item>\n        <v-window-item value=\"option-3\" :transition=\"false\">\n          <v-card flat>\n            <v-card-text>\n              <v-textarea\n              v-model=\"environment_props['surrounding']\"\n              label=\"Surrounding\"\n            ></v-textarea>\n\n            <v-text-field\n              v-model=\"environment_props['altitude']\"\n              :rules=\"nameRules\"\n              label=\"Altitude or Elevation\"\n              required\n            ></v-text-field>\n\n            <v-text-field\n              v-model=\"environment_props['temperature']\"\n              :rules=\"nameRules\"\n              label=\"Temperature [C]\"\n              required\n            ></v-text-field>\n\n            <v-text-field\n              v-model=\"environment_props['pressure']\"\n              :rules=\"nameRules\"\n              label=\"Pressure [mmHg]\"\n              required\n            ></v-text-field>\n \n            <v-text-field\n              v-model=\"environment_props['co2']\"\n              :rules=\"nameRules\"\n              label=\"Ambient CO2 [fraction]\"\n              required\n            ></v-text-field>\n\n            <v-combobox\n              v-model=\"environment_props['sounds']\"\n              label=\"Ambient Sounds\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n\n            <v-combobox\n              v-model=\"environment_props['smells']\"\n              label=\"Smells\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n            </v-card-text>\n          </v-card>\n        </v-window-item>\n\n        <v-window-item value=\"option-4\" :transition=\"false\">\n          <v-card flat>\n            <v-card-text>\n              <v-textarea\n              v-model=\"ed_props['instruction']\"\n              label=\"Instructions\"\n            ></v-textarea>\n\n            <v-textarea\n              v-model=\"ed_props['narrative']\"\n              label=\"Narrative\"\n            ></v-textarea>\n\n            <v-text-field\n              v-model=\"ed_props['learnerCount']\"\n              label=\"Number of Learners\"\n            ></v-text-field>\n\n            <v-text-field\n              v-model=\"ed_props['role']\"\n              label=\"Roles\"\n            ></v-text-field>\n\n            <v-combobox\n              v-model=\"ed_props['setup_checklist']\"\n              label=\"Setup Checklist\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n\n            <v-combobox\n              v-model=\"ed_props['equipment']\"\n              label=\"Equipment\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n\n            <v-combobox\n              v-model=\"ed_props['supplies']\"\n              label=\"Supplies\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n\n            <v-text-field\n              v-model=\"ed_props['duration']\"\n              label=\"Estimated Duration\"\n            ></v-text-field>\n\n            <v-text-field\n              v-model=\"ed_props['scenario_type']\"\n              label=\"Scenario Type\"\n            ></v-text-field>\n\n            <v-text-field\n              v-model=\"ed_props['assessment_type']\"\n              label=\"Assessment Type\"\n            ></v-text-field>\n\n            <v-text-field\n              v-model=\"ed_props['learner_group']\"\n              label=\"Learner Group\"\n            ></v-text-field>\n\n            <v-combobox\n              v-model=\"ed_props['objectives']\"\n              label=\"Learning Objectives\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n\n            <v-combobox\n              v-model=\"ed_props['task']\"\n              label=\"Task Descriptions\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n\n            <v-combobox\n              v-model=\"ed_props['conditions']\"\n              label=\"Performance Conditions\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n\n            <v-combobox\n              v-model=\"ed_props['exit_criteria']\"\n              label=\"Exit Criteria\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n\n            </v-card-text>\n          </v-card>\n        </v-window-item>\n\n        <v-window-item value=\"option-5\" :transition=\"false\">\n          <div v-for=\"(exp, index) in capability\" :key=\"index\">\n              <v-checkbox-btn v-model=\"exp.required\" label=\"Required\"></v-checkbox-btn>\n              <v-text-field v-model=\"exp.name\" label=\"Capability Name\"></v-text-field>\n              <v-text-field v-model=\"exp.data\" label=\"Configuration Data\"></v-text-field>\n              <v-text-field v-model=\"exp.propertyName\" label=\"Property Name\"></v-text-field>\n              <v-select v-model=\"exp.dataType\" label=\"Data Type\" :items=\"['string', 'number', 'boolean', 'option']\"></v-select>\n              <v-file-input v-model=\"exp.value\" label=\"Value\"></v-file-input>\n              <v-btn @click=\"removeCapability(index)\">Remove Capability</v-btn>\n              <br>\n              <br>\n            </div>\n            <v-btn @click=\"addCapability\">Add Capability</v-btn>\n        </v-window-item>\n      </v-window>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport xmlbuilder from 'xmlbuilder'\n  export default {\n    data: () => ({\n      tab: 'option-1',\n      drawer: false,\n      valid: true,\n      expanded: [0],\n      capability: [\n        { required: [],\n          name: [],\n          data: [],\n          propertyName: [],\n          dataType: [],\n          value: [] },\n      ],\n      scenario_props: {\n        \"name\":[],\n        \"authors\":[]\n      },\n      patient_props: {\n        \"type\": [],\n        \"name\": [],\n        \"title\": [],\n        \"age\": [],\n        \"gender\": [],\n        \"height\": [],\n        \"weight\": [],\n      },\n      environment_props: {\n        \"surrounding\": [],\n        \"altitude\":[],\n        \"temperature\":[],\n        \"pressure\":[],\n        \"co2\":[],\n        \"sounds\":[],\n        \"smells\":[]\n      },\n      ed_props: {\n        'instruction':[],\n        'narrative':[],\n        'learnerCount':[],\n        'role':[],\n        'setup_checklist':[],\n        'equipment':[],\n        'supplies':[],\n        'duration':[],\n        'scenario_type':[],\n        'assessment_type':[],\n        'learner_group':[],\n        'objectives':[],\n        'task':[],\n        'conditions':[],\n        'exit_criteria':[]\n      },\n      nameRules: [\n        v => !!v || 'Name is required',\n      ],\n      genders: [\n        'Male',\n        'Female'\n      ],\n      types: [\n        'Medical Doctor',\n        'Paramedic',\n        'Nurse'\n      ],\n    }),\n    methods: {\n      addCapability() {\n        this.capability.push({\n          required: '',\n          name: '',\n          data: '',\n          propertyName: '',\n          dataType: '',\n          value: ''\n          });\n      },\n      removeCapability(index) {\n        this.capability.splice(index, 1);\n      },\n      validate () {\n        this.$refs.form.validate()\n      },\n      reset () {\n        this.$refs.form.reset()\n      },\n      saveXML () {\n        const xml = xmlbuilder.create('AMMConfiguration', {encoding: 'UTF-8'})\n          xml.att({'xmlns:xsd':'http://www.w3.org/2001/XMLSchema',\n                'xmlns:xsi':'http://www.w3.org/2001/XMLSchema-instance'\n          })\n          const metadata = xml.ele('metadata')\n            for (var key1 in this.patient_props) {\n              if (Array.isArray(this.patient_props[key1])) {\n                for (var item1 in this.patient_props[key1]) {\n                  metadata.ele(key1, this.patient_props[key1][item1])\n                }\n              } else {\n                metadata.ele(key1, this.patient_props[key1])\n              }\n            }\n  \n            for (var key2 in this.environment_props) {\n              if (Array.isArray(this.environment_props[key2])) {\n                for (var item2 in this.environment_props[key2]) {\n                  metadata.ele(key2, this.environment_props[key2][item2])\n                }\n              } else {\n                metadata.ele(key2, this.environment_props[key2])\n              }\n            }\n            for (var key3 in this.ed_props) {\n              if (Array.isArray(this.ed_props[key3])) {\n                for (var item3 in this.ed_props[key3]) {\n                  metadata.ele(key3, this.ed_props[key3][item3])\n                }\n              } else {\n                metadata.ele(key3, this.ed_props[key3])\n              }\n            }\n            for (var item4 in this.capability) {\n              for (var key4 in this.capability[item4]) {\n                  metadata.ele(key4, this.capability[item4][key4])\n                }\n            }\n        var xmlString = xml.end({ pretty: true });\n        const blob = new Blob([xmlString], {type:'text/xml'})\n        const link = document.createElement('a')\n        link.href = URL.createObjectURL(blob)\n        link.download = 'data.xml'\n        link.click()\n      }\n    }\n  }\n  </script>\n\n<style>\n.my-content {\n  margin-top: -50px; /* Adjust the top margin */\n  /* padding-left: 16px; Adjust the left padding */\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}