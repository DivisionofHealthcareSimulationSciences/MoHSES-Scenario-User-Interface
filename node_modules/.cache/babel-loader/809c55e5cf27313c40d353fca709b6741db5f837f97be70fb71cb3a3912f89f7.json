{"ast":null,"code":"export default {\n  data: () => ({\n    chosenFile: null,\n    data: null\n  }),\n  methods: {\n    importFile(e) {\n      var vm = this;\n      let files = e.target.files;\n      let file = files[0];\n      let name = files[0].name;\n      //console.log(name);\n      if (window.FileReader) {\n        let reader = new FileReader();\n        // when the file is read it triggers the onload event above.\n        reader.readAsText(file, 'UTF-8');\n        // Handle errors load\n        reader.onload = function (event) {\n          let csv = reader.result;\n          vm.contacts = vm.csvJSON(csv);\n          //console.log(vm.contacts)\n        };\n\n        reader.onerror = function (evt) {\n          if (evt.target.error.name == \"NotReadableError\") {\n            alert(\"Canno't read file !\");\n          }\n        };\n      } else {\n        alert('FileReader are not supported in this browser.');\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAqBA,eAAe;EACTA,IAAI,EAAE,OAAO;IACXC,UAAU,EAAE,IAAI;IAChBD,IAAI,EAAE;EACR,CAAC,CAAC;EACFE,OAAO,EAAE;IACPC,UAAU,CAACC,CAAC,EAAE;MACV,IAAIC,EAAC,GAAI,IAAG;MACZ,IAAIC,KAAI,GAAIF,CAAC,CAACG,MAAM,CAACD,KAAK;MAC1B,IAAIE,IAAG,GAAIF,KAAK,CAAC,CAAC,CAAC;MACnB,IAAIG,IAAG,GAAIH,KAAK,CAAC,CAAC,CAAC,CAACG,IAAI;MACxB;MACA,IAAIC,MAAM,CAACC,UAAU,EAAE;QACnB,IAAIC,MAAK,GAAI,IAAID,UAAU,EAAE;QAC7B;QACAC,MAAM,CAACC,UAAU,CAACL,IAAI,EAAE,OAAO,CAAC;QAChC;QACAI,MAAM,CAACE,MAAK,GAAI,UAASC,KAAK,EAAE;UAC5B,IAAIC,GAAE,GAAIJ,MAAM,CAACK,MAAM;UACvBZ,EAAE,CAACa,QAAO,GAAIb,EAAE,CAACc,OAAO,CAACH,GAAG;UAC5B;QACJ,CAAC;;QAEDJ,MAAM,CAACQ,OAAM,GAAI,UAASC,GAAG,EAAE;UAC3B,IAAGA,GAAG,CAACd,MAAM,CAACe,KAAK,CAACb,IAAG,IAAK,kBAAkB,EAAE;YAC5Cc,KAAK,CAAC,qBAAqB,CAAC;UAChC;QACJ,CAAC;MACL,OAAO;QACHA,KAAK,CAAC,+CAA+C,CAAC;MAC1D;IACJ;EACA;AACN","names":["data","chosenFile","methods","importFile","e","vm","files","target","file","name","window","FileReader","reader","readAsText","onload","event","csv","result","contacts","csvJSON","onerror","evt","error","alert"],"sourceRoot":"","sources":["/Users/stlp/Desktop/Spring 2023/BIOEN 405/User Interface/MoHSES-Scenario-User-Interface/src/views/PlottingView.vue"],"sourcesContent":["<template>\n    <v-toolbar style=\"color: white\" color=\"#4b0082\">\n      <v-toolbar-title>BioGears Plotting Tool</v-toolbar-title>\n    </v-toolbar>\n    <v-main class=\"bg-grey-lighten-3\">\n      <v-container>\n        <v-card class=\"mt-n12\">\n          <v-card-text>\n            <p style=\"font-size: 20px\">Please upload your .CSV:</p>\n            <br>\n            <v-file-input v-model=\"chosenFile\"></v-file-input>\n            <v-spacer></v-spacer>\n            <v-btn @click=\"importFile\">Import File</v-btn>\n            <p>{{ this.data }}</p>\n        </v-card-text>\n        </v-card>\n      </v-container>\n    </v-main>\n  </template>\n  \n<script>\nexport default {\n      data: () => ({\n        chosenFile: null,\n        data: null\n      }),\n      methods: {\n        importFile(e) {\n            var vm = this\n            let files = e.target.files;\n            let file = files[0];\n            let name = files[0].name;\n            //console.log(name);\n            if (window.FileReader) {\n                let reader = new FileReader();\n                // when the file is read it triggers the onload event above.\n                reader.readAsText(file, 'UTF-8');\n                // Handle errors load\n                reader.onload = function(event) {\n                    let csv = reader.result;\n                    vm.contacts = vm.csvJSON(csv)\n                    //console.log(vm.contacts)\n                };\n                \n                reader.onerror = function(evt) {\n                    if(evt.target.error.name == \"NotReadableError\") {\n                        alert(\"Canno't read file !\");\n                    }\n                };\n            } else {\n                alert('FileReader are not supported in this browser.');\n            }\n        }\n        }\n  }\n</script>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}