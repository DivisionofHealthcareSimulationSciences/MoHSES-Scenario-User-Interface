{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport xmlbuilder from 'xmlbuilder';\nexport default {\n  data: () => ({\n    fileName: '',\n    state_file: null,\n    state_file2: null,\n    dialog1: false,\n    dialog: false,\n    altitude_min: 0,\n    altitude_max: 10000,\n    temperature_min: 0,\n    temperature_max: 100,\n    pressure_min: 0,\n    pressure_max: 1000,\n    co2_min: 0,\n    co2_max: 10,\n    age_min: 0,\n    age_max: 120,\n    height_min: 55,\n    height_max: 190,\n    height_units: ['cm', 'in'],\n    height_unit: 'cm',\n    weight_min: 20,\n    weight_max: 250,\n    weight_units: ['kg', 'lb'],\n    weight_unit: 'kg',\n    time_min: 0,\n    time_max: 60,\n    tab: 'home',\n    name: [],\n    drawer: false,\n    valid: true,\n    expanded: [0],\n    capability: [{\n      required: [],\n      name: [],\n      propertyName: [],\n      dataType: [],\n      value: []\n    }],\n    scenario_props: {\n      \"name\": [],\n      \"authors\": [],\n      \"emails\": []\n    },\n    patient_props: {\n      \"type\": [],\n      \"name\": [],\n      \"title\": [],\n      \"age\": 50,\n      \"gender\": [],\n      \"height\": 150,\n      \"weight\": 75\n    },\n    environment_props: {\n      \"surrounding\": [],\n      \"altitude\": 0,\n      \"temperature\": 20,\n      \"pressure\": 760,\n      \"co2\": 4,\n      \"sounds\": [],\n      \"smells\": []\n    },\n    ed_props: {\n      'instruction': [],\n      'narrative': [],\n      'learnerCount': [0],\n      'role': [],\n      'setup_checklist': [],\n      'equipment': [],\n      'supplies': [],\n      'duration': [0],\n      'scenario_type': [],\n      'assessment_type': [],\n      'learner_group': [],\n      'objectives': [],\n      'task': [],\n      'conditions': [],\n      'exit_criteria': []\n    },\n    genders: ['Male', 'Female'],\n    types: ['Medical Doctor', 'Paramedic', 'Nurse']\n  }),\n  methods: {\n    handleFileUpload(e) {\n      this.state_file2 = e.target.files[0];\n      this.fileName = this.state_file2.name;\n    },\n    parseXML() {\n      if (!this.state_file2) {\n        alert('Please upload an XML file first');\n        return;\n      }\n      const reader = new FileReader();\n      reader.onload = e => {\n        const xmlString = e.target.result;\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(xmlString, 'application/xml');\n        // Assuming the XML structure is as follows:\n        // <root>\n        //   <Patient>\n        //     <Age>...</Age>\n        //     <Weight>...</Weight>\n        //   </Patient>\n        // </root>\n        const patient = xmlDoc.querySelector('Patient');\n        const name = patient.querySelector('Name').textContent;\n        const sex = patient.querySelector('Sex').textContent;\n        const age = patient.querySelector('Age').getAttribute('value');\n        const height = patient.querySelector('Height').getAttribute('value');\n        const weight = patient.querySelector('Weight').getAttribute('value');\n        const ambientTemperatureElement = xmlDoc.querySelector('AmbientTemperature');\n        const ambientTemperatureValue = ambientTemperatureElement.getAttribute('value');\n        const atmosphericPressureElement = xmlDoc.querySelector('AtmosphericPressure');\n        const atmosphericPressureValue = atmosphericPressureElement.getAttribute('value');\n        const carbonDioxideElement = xmlDoc.querySelector('AmbientGas[Name=\"CarbonDioxide\"]');\n        // Access the FractionAmount element and its value attribute\n        const fractionAmountElement = carbonDioxideElement.querySelector('FractionAmount');\n        const fractionAmountValue = fractionAmountElement.getAttribute('value');\n        this.patient_props['name'] = name;\n        this.patient_props['age'] = age;\n        this.patient_props['gender'] = sex;\n        this.patient_props['height'] = height;\n        this.patient_props['weight'] = weight;\n        this.environment_props['co2'] = fractionAmountValue * 100; // Convert to %\n        this.environment_props['temperature'] = ambientTemperatureValue;\n        this.environment_props['pressure'] = atmosphericPressureValue;\n        this.scenario_props['name'] = this.fileName;\n      };\n      reader.readAsText(this.state_file2);\n    },\n    addCapability() {\n      this.capability.push({\n        required: '',\n        name: '',\n        propertyName: '',\n        dataType: '',\n        value: ''\n      });\n    },\n    nextTab(id) {\n      this.tab = id;\n    },\n    removeCapability(index) {\n      this.capability.splice(index, 1);\n    },\n    //  validate() {\n    //    this.$refs.form.validate()\n    //  },\n    reset() {\n      this.$refs.form.reset();\n    },\n    pathClicked(id) {\n      let pathElement = document.getElementById(id);\n      if (this.name.some(x => Object.keys(x).includes(id))) {\n        this.name = this.name.filter(x => !Object.keys(x).includes(id));\n      } else {\n        this.name.push({\n          [id]: ''\n        });\n      }\n      if (pathElement.classList.contains(\"active\")) {\n        pathElement.classList.remove(\"active\");\n      } else {\n        pathElement.classList.add(\"active\");\n      }\n    },\n    saveXML() {\n      const xml = xmlbuilder.create('AMMConfiguration', {\n        encoding: 'UTF-8'\n      });\n      xml.att({\n        'xmlns:xsd': 'http://www.w3.org/2001/XMLSchema',\n        'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance'\n      });\n      const Scenario = xml.ele('Scenario');\n      Scenario.att({\n        'name': this.scenario_props['name']\n      });\n      const metadata = Scenario.ele('metadata');\n      for (var key1 in this.patient_props) {\n        if (Array.isArray(this.patient_props[key1])) {\n          for (var item1 in this.patient_props[key1]) {\n            metadata.ele(key1, this.patient_props[key1][item1]);\n          }\n        } else {\n          const element = metadata.ele(key1, this.patient_props[key1]);\n          if (key1 == 'age') {\n            element.att('units', 'years');\n          }\n          if (key1 == 'height') {\n            element.att('units', 'centimeters');\n          }\n          if (key1 == 'weight') {\n            element.att('units', 'kilograms');\n          }\n        }\n      }\n      for (var key2 in this.environment_props) {\n        if (Array.isArray(this.environment_props[key2])) {\n          for (var item2 in this.environment_props[key2]) {\n            metadata.ele(key2, this.environment_props[key2][item2]);\n          }\n        } else {\n          const element = metadata.ele(key2, this.environment_props[key2]);\n          if (key2 == 'altitude') {\n            element.att('units', 'meters');\n          }\n          if (key2 == 'temperature') {\n            element.att('units', 'celsius');\n          }\n          if (key2 == 'pressure') {\n            element.att('units', 'mmHg');\n          }\n        }\n      }\n      for (var key3 in this.ed_props) {\n        if (Array.isArray(this.ed_props[key3])) {\n          for (var item3 in this.ed_props[key3]) {\n            metadata.ele(key3, this.ed_props[key3][item3]);\n          }\n        } else {\n          const element = metadata.ele(key3, this.ed_props[key3]);\n          if (key3 == 'duration') {\n            element.att('units', 'minutes');\n          }\n        }\n      }\n      const authors = Scenario.ele('authors');\n      for (var author in this.scenario_props['authors']) {\n        authors.text(this.scenario_props['authors'][author]);\n      }\n      const emails = Scenario.ele('emails');\n      for (var email in this.scenario_props['emails']) {\n        emails.text(this.scenario_props['emails'][email]);\n      }\n      const caps = Scenario.ele('capabilities');\n      for (var item4 in this.capability) {\n        const cap = caps.ele('capability');\n        const config_data = cap.ele('configuration_data');\n        const config_data_data = config_data.ele('data');\n        for (var key4 in this.capability[item4]) {\n          if (key4 == 'name') {\n            cap.att(key4, this.capability[item4][key4]);\n          } else if (key4 == 'required') {\n            cap.att(key4, this.capability[item4][key4]);\n          } else if (key4 == 'value' & this.capability[item4][key4] == \"[object File]\") {\n            config_data_data.att(key4, this.capability[item4][key4][0].name);\n          } else {\n            config_data_data.att(key4, this.capability[item4][key4]);\n          }\n        }\n      }\n      var xmlString = xml.end({\n        pretty: true\n      });\n      const blob = new Blob([xmlString], {\n        type: 'text/xml'\n      });\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = this.scenario_props['name'] + '.xml';\n      link.click();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["xmlbuilder","data","fileName","state_file","state_file2","dialog1","dialog","altitude_min","altitude_max","temperature_min","temperature_max","pressure_min","pressure_max","co2_min","co2_max","age_min","age_max","height_min","height_max","height_units","height_unit","weight_min","weight_max","weight_units","weight_unit","time_min","time_max","tab","name","drawer","valid","expanded","capability","required","propertyName","dataType","value","scenario_props","patient_props","environment_props","ed_props","genders","types","methods","handleFileUpload","e","target","files","parseXML","alert","reader","FileReader","onload","xmlString","result","parser","DOMParser","xmlDoc","parseFromString","patient","querySelector","textContent","sex","age","getAttribute","height","weight","ambientTemperatureElement","ambientTemperatureValue","atmosphericPressureElement","atmosphericPressureValue","carbonDioxideElement","fractionAmountElement","fractionAmountValue","readAsText","addCapability","push","nextTab","id","removeCapability","index","splice","reset","$refs","form","pathClicked","pathElement","document","getElementById","some","x","Object","keys","includes","filter","classList","contains","remove","add","saveXML","xml","create","encoding","att","Scenario","ele","metadata","key1","Array","isArray","item1","element","key2","item2","key3","item3","authors","author","text","emails","email","caps","item4","cap","config_data","config_data_data","key4","end","pretty","blob","Blob","type","link","createElement","href","URL","createObjectURL","download","click"],"sourceRoot":"","sources":["/Users/stlp/Desktop/Spring 2023/BIOEN 405/User Interface/MoHSES-Scenario-User-Interface/src/views/MoHSESView.vue"],"sourcesContent":["<template>\n  <v-toolbar style=\"color: white\" color=\"#3c2d70\">\n    <v-toolbar-title>MoHSES Scenario Creation Tool</v-toolbar-title>\n  </v-toolbar>\n  <v-tabs large v-model=\"tab\" color=\"#4b0082\">\n    <v-tab value=\"home\">\n      <v-icon start> mdi-home </v-icon> About this page\n    </v-tab>\n    <v-tab value=\"option-1\">\n      <v-icon start> mdi-form-textbox </v-icon> Scenario Properties\n    </v-tab>\n    <v-tab value=\"option-2\">\n      <v-icon start> mdi-account </v-icon> Patient Properties\n    </v-tab>\n    <v-tab value=\"option-3\">\n      <v-icon start> mdi-access-point </v-icon> Environment Properties\n    </v-tab>\n    <v-tab value=\"option-4\">\n      <v-icon start> mdi-list-status </v-icon> Educational Encounter Properties\n    </v-tab>\n    <v-tab value=\"option-5\">\n      <v-icon start> mdi-tools </v-icon> Capabilities\n    </v-tab>\n  </v-tabs>\n  <v-main class=\"bg-grey-lighten-3\">\n    <v-container>\n      <v-window v-model=\"tab\" class=\"mt-n12\">\n        <v-form ref=\"form\" v-model=\"valid\">\n          <v-window-item value=\"home\">\n            <v-card class=\"bg-grey-lighten-3\" flat>\n              <v-card-title class=\"text-center\" style=\"font-size: 36px\"\n                >Welcome to the MoHSES Scenario Creation Tool!</v-card-title\n              >\n              <v-card-text>\n                <p style=\"font-size: 14px\">\n                  This tool is designed to simplify the process of generating a\n                  MoHSES scenario file, which can be used with the MoHSES\n                  manikin at the CREST lab. To get started, you will need to use\n                  the BioGears Scenario Creation Tool to generate a patient\n                  state file and BioGears scenario file, and run BioGears using\n                  these files to generate a state file. Once you have your state\n                  file, you can use our tool to create your MoHSES scenario\n                  file. Simply upload your state file, select the desired\n                  parameters, and let the tool do the rest! With our\n                  user-friendly interface, you can quickly generate a MoHSES\n                  scenario file to use with the MoHSES manikin.\n                </p>\n              </v-card-text>\n            </v-card>\n            <v-col class=\"text-center\" cols=\"auto\">\n              <v-btn\n                @click=\"nextTab('option-1')\"\n                density=\"compact\"\n                icon=\"mdi-arrow-right\"\n              ></v-btn>\n            </v-col>\n          </v-window-item>\n          <v-window-item value=\"option-1\">\n            <v-card flat>\n              <v-card-text>\n                <p style=\"font-size: 20px\">Please enter scenario properties:</p>\n                <br />\n                <v-row>\n                  <v-col cols=\"10\">\n                    <v-file-input\n                      label=\"Upload BioGears State File\"\n                      v-model=\"state_file\"\n                      prepend-icon=\"mdi-upload\"\n                      @change=\"handleFileUpload\"\n                    ></v-file-input>\n                  </v-col>\n                  <v-col>\n                    <v-btn\n                      style=\"color: white\"\n                      color=\"#3c2d70\"\n                      @click=\"parseXML\"\n                      >Parse File</v-btn\n                    >\n                  </v-col>\n                </v-row>\n                <v-combobox\n                  v-model=\"scenario_props['authors']\"\n                  label=\"Authors\"\n                  clearable\n                  multiple\n                  chips\n                  hint='Click \"enter\" to add multiple authors'\n                ></v-combobox>\n                <v-combobox\n                  v-model=\"scenario_props['emails']\"\n                  label=\"Emails\"\n                  clearable\n                  multiple\n                  chips\n                  hint='Click \"enter\" to add multiple emails'\n                ></v-combobox>\n                <v-select\n                  v-model=\"patient_props['type']\"\n                  :items=\"types\"\n                  label=\"Instructor Type\"\n                  clearable\n                ></v-select>\n                <v-text-field\n                  v-model=\"scenario_props['name']\"\n                  label=\"Scenario Name\"\n                  clearable\n                ></v-text-field>\n              </v-card-text>\n            </v-card>\n            <br />\n            <v-row justify=\"center\">\n              <v-col cols=\"auto\">\n                <v-btn\n                  @click=\"nextTab('home')\"\n                  density=\"compact\"\n                  icon=\"mdi-arrow-left\"\n                ></v-btn>\n              </v-col>\n              <v-col cols=\"auto\">\n                <v-btn\n                  @click=\"nextTab('option-2')\"\n                  density=\"compact\"\n                  icon=\"mdi-arrow-right\"\n                ></v-btn>\n              </v-col>\n            </v-row>\n            <br />\n          </v-window-item>\n          <v-window-item value=\"option-2\">\n            <v-card flat>\n              <v-card-text>\n                <p style=\"font-size: 20px\">Please enter patient properties:</p>\n                <br />\n                <v-text-field\n                  v-model=\"patient_props['name']\"\n                  label=\"Name\"\n                  clearable\n                ></v-text-field>\n                <v-text-field\n                  v-model=\"patient_props['title']\"\n                  label=\"Title or Rank\"\n                  clearable\n                ></v-text-field>\n                <v-select\n                  v-model=\"patient_props['gender']\"\n                  :items=\"genders\"\n                  label=\"Sex\"\n                  clearable\n                ></v-select>\n                <v-slider\n                  v-model=\"patient_props['age']\"\n                  label=\"Age\"\n                  class=\"align-center\"\n                  :max=\"age_max\"\n                  :min=\"age_min\"\n                  :step=\"1\"\n                >\n                  <template v-slot:append>\n                    <v-text-field\n                      v-model=\"patient_props['age']\"\n                      hide-details\n                      single-line\n                      density=\"compact\"\n                      type=\"number\"\n                      suffix=\"years\"\n                      style=\"width: 180px\"\n                    ></v-text-field>\n                  </template>\n                </v-slider>\n                <v-slider\n                  v-model=\"patient_props['height']\"\n                  label=\"Height\"\n                  class=\"align-center\"\n                  :max=\"height_max\"\n                  :min=\"height_min\"\n                  :step=\"0.1\"\n                >\n                  <template v-slot:append>\n                    <v-text-field\n                      v-model=\"patient_props['height']\"\n                      hide-details\n                      single-line\n                      density=\"compact\"\n                      type=\"number\"\n                      style=\"width: 90px\"\n                    ></v-text-field>\n                    <v-select\n                      v-model=\"height_unit\"\n                      hide-details\n                      single-line\n                      density=\"compact\"\n                      :items=\"height_units\"\n                      style=\"width: 90px\"\n                    ></v-select>\n                  </template>\n                </v-slider>\n                <v-slider\n                  v-model=\"patient_props['weight']\"\n                  label=\"Weight\"\n                  class=\"align-center\"\n                  :max=\"weight_max\"\n                  :min=\"weight_min\"\n                  :step=\"0.1\"\n                >\n                  <template v-slot:append>\n                    <v-text-field\n                      v-model=\"patient_props['weight']\"\n                      hide-details\n                      single-line\n                      density=\"compact\"\n                      type=\"number\"\n                      style=\"width: 90px\"\n                    ></v-text-field>\n                    <v-select\n                      v-model=\"weight_unit\"\n                      hide-details\n                      single-line\n                      density=\"compact\"\n                      :items=\"weight_units\"\n                      style=\"width: 90px\"\n                    ></v-select>\n                  </template>\n                </v-slider>\n              </v-card-text>\n            </v-card>\n            <br />\n            <v-row justify=\"center\">\n              <v-col cols=\"auto\">\n                <v-btn\n                  @click=\"nextTab('option-1')\"\n                  density=\"compact\"\n                  icon=\"mdi-arrow-left\"\n                ></v-btn>\n              </v-col>\n              <v-col cols=\"auto\">\n                <v-btn\n                  @click=\"nextTab('option-3')\"\n                  density=\"compact\"\n                  icon=\"mdi-arrow-right\"\n                ></v-btn>\n              </v-col>\n            </v-row>\n            <br />\n          </v-window-item>\n          <v-window-item value=\"option-3\">\n            <v-card flat>\n              <v-card-text>\n                <p style=\"font-size: 20px\">\n                  Please enter environment properties:\n                </p>\n                <br />\n                <v-textarea\n                  v-model=\"environment_props['surrounding']\"\n                  label=\"Surrounding\"\n                  clearable\n                ></v-textarea>\n                <v-combobox\n                  v-model=\"environment_props['sounds']\"\n                  label=\"Ambient Sounds\"\n                  multiple\n                  clearable\n                  chips\n                  hint='Click \"enter\" to add multiple sounds'\n                ></v-combobox>\n                <v-combobox\n                  v-model=\"environment_props['smells']\"\n                  label=\"Smells\"\n                  multiple\n                  clearable\n                  chips\n                  hint='Click \"enter\" to add multiple smells'\n                ></v-combobox>\n                <v-slider\n                  v-model=\"environment_props['altitude']\"\n                  label=\"Altitude\"\n                  clearable\n                  class=\"align-center\"\n                  :max=\"altitude_max\"\n                  :min=\"altitude_min\"\n                  :step=\"0.1\"\n                >\n                  <template v-slot:append>\n                    <v-text-field\n                      v-model=\"environment_props['altitude']\"\n                      hide-details\n                      clearable\n                      single-line\n                      density=\"compact\"\n                      type=\"number\"\n                      suffix=\"m\"\n                      style=\"width: 180px\"\n                    ></v-text-field>\n                  </template>\n                </v-slider>\n                <v-slider\n                  v-model=\"environment_props['temperature']\"\n                  label=\"Temperature\"\n                  clearable\n                  class=\"align-center\"\n                  :max=\"temperature_max\"\n                  :min=\"temperature_min\"\n                  :step=\"0.1\"\n                >\n                  <template v-slot:append>\n                    <v-text-field\n                      v-model=\"environment_props['temperature']\"\n                      hide-details\n                      clearable\n                      single-line\n                      density=\"compact\"\n                      type=\"number\"\n                      suffix=\"Celsius\"\n                      style=\"width: 180px\"\n                    ></v-text-field>\n                  </template>\n                </v-slider>\n                <v-slider\n                  v-model=\"environment_props['pressure']\"\n                  label=\"Pressure\"\n                  clearable\n                  class=\"align-center\"\n                  :max=\"pressure_max\"\n                  :min=\"pressure_min\"\n                  :step=\"0.1\"\n                >\n                  <template v-slot:append>\n                    <v-text-field\n                      v-model=\"environment_props['pressure']\"\n                      hide-details\n                      clearable\n                      single-line\n                      density=\"compact\"\n                      type=\"number\"\n                      suffix=\"mmHg\"\n                      style=\"width: 180px\"\n                    ></v-text-field>\n                  </template>\n                </v-slider>\n                <v-slider\n                  v-model=\"environment_props['co2']\"\n                  label=\"Ambient CO2\"\n                  clearable\n                  class=\"align-center\"\n                  :max=\"co2_max\"\n                  :min=\"co2_min\"\n                  :step=\"1\"\n                >\n                  <template v-slot:append>\n                    <v-text-field\n                      v-model=\"environment_props['co2']\"\n                      hide-details\n                      clearable\n                      single-line\n                      density=\"compact\"\n                      type=\"number\"\n                      suffix=\"%\"\n                      style=\"width: 180px\"\n                    ></v-text-field>\n                  </template>\n                </v-slider>\n              </v-card-text>\n            </v-card>\n            <br />\n            <v-row justify=\"center\">\n              <v-col cols=\"auto\">\n                <v-btn\n                  @click=\"nextTab('option-2')\"\n                  density=\"compact\"\n                  icon=\"mdi-arrow-left\"\n                ></v-btn>\n              </v-col>\n              <v-col cols=\"auto\">\n                <v-btn\n                  @click=\"nextTab('option-4')\"\n                  density=\"compact\"\n                  icon=\"mdi-arrow-right\"\n                ></v-btn>\n              </v-col>\n            </v-row>\n            <br />\n          </v-window-item>\n          <v-window-item value=\"option-4\">\n            <v-card flat>\n              <v-card-text>\n                <p style=\"font-size: 20px\">\n                  Please enter educational encounter properties:\n                </p>\n                <br />\n                <v-textarea\n                  v-model=\"ed_props['instruction']\"\n                  label=\"Instructions\"\n                  clearable\n                ></v-textarea>\n                <v-textarea\n                  v-model=\"ed_props['narrative']\"\n                  label=\"Narrative\"\n                  clearable\n                ></v-textarea>\n                <v-text-field\n                  v-model=\"ed_props['role']\"\n                  label=\"Roles\"\n                  clearable\n                ></v-text-field>\n                <v-combobox\n                  v-model=\"ed_props['setup_checklist']\"\n                  label=\"Setup Checklist\"\n                  multiple\n                  clearable\n                  chips\n                  hint='Click \"enter\" to add multiple checklists'\n                ></v-combobox>\n                <v-combobox\n                  v-model=\"ed_props['equipment']\"\n                  label=\"Equipment\"\n                  multiple\n                  clearable\n                  chips\n                  hint='Click \"enter\" to add multiple equipment'\n                ></v-combobox>\n                <v-combobox\n                  v-model=\"ed_props['supplies']\"\n                  label=\"Supplies\"\n                  multiple\n                  clearable\n                  chips\n                  hint='Click \"enter\" to add multiple supplies'\n                ></v-combobox>\n                <v-text-field\n                  v-model=\"ed_props['scenario_type']\"\n                  label=\"Scenario Type\"\n                  clearable\n                ></v-text-field>\n                <v-text-field\n                  v-model=\"ed_props['assessment_type']\"\n                  label=\"Assessment Type\"\n                  clearable\n                ></v-text-field>\n                <v-text-field\n                  v-model=\"ed_props['learner_group']\"\n                  label=\"Learner Group\"\n                  clearable\n                ></v-text-field>\n                <v-combobox\n                  v-model=\"ed_props['objectives']\"\n                  label=\"Learning Objectives\"\n                  multiple\n                  clearable\n                  chips\n                  hint='Click \"enter\" to add multiple objectives'\n                ></v-combobox>\n                <v-combobox\n                  v-model=\"ed_props['task']\"\n                  label=\"Task Descriptions\"\n                  multiple\n                  clearable\n                  chips\n                  hint='Click \"enter\" to add multiple tasks'\n                ></v-combobox>\n                <v-combobox\n                  v-model=\"ed_props['conditions']\"\n                  label=\"Performance Conditions\"\n                  multiple\n                  clearable\n                  chips\n                  hint='Click \"enter\" to add multiple conditions'\n                ></v-combobox>\n                <v-combobox\n                  v-model=\"ed_props['exit_criteria']\"\n                  label=\"Exit Criteria\"\n                  multiple\n                  clearable\n                  chips\n                  hint='Click \"enter\" to add multiple exit criteria'\n                ></v-combobox>\n                <v-slider\n                  v-model=\"ed_props['duration']\"\n                  label=\"Estimated Duration\"\n                  clearable\n                  class=\"align-center\"\n                  :max=\"time_max\"\n                  :min=\"time_min\"\n                  :step=\"1\"\n                >\n                  <template v-slot:append>\n                    <v-text-field\n                      v-model=\"ed_props['duration']\"\n                      hide-details\n                      clearable\n                      single-line\n                      density=\"compact\"\n                      type=\"number\"\n                      suffix=\"min\"\n                      style=\"width: 180px\"\n                    ></v-text-field>\n                  </template>\n                </v-slider>\n                <v-slider\n                  v-model=\"ed_props['learnerCount']\"\n                  label=\"Number of Learners\"\n                  clearable\n                  class=\"align-center\"\n                  :max=\"50\"\n                  :min=\"0\"\n                  :step=\"1\"\n                >\n                  <template v-slot:append>\n                    <v-text-field\n                      v-model=\"ed_props['learnerCount']\"\n                      hide-details\n                      clearable\n                      single-line\n                      density=\"compact\"\n                      type=\"number\"\n                      suffix=\"learners\"\n                      style=\"width: 180px\"\n                    ></v-text-field>\n                  </template>\n                </v-slider>\n              </v-card-text>\n            </v-card>\n            <br />\n            <v-row justify=\"center\">\n              <v-col cols=\"auto\">\n                <v-btn\n                  @click=\"nextTab('option-3')\"\n                  density=\"compact\"\n                  icon=\"mdi-arrow-left\"\n                ></v-btn>\n              </v-col>\n              <v-col cols=\"auto\">\n                <v-btn\n                  @click=\"nextTab('option-5')\"\n                  density=\"compact\"\n                  icon=\"mdi-arrow-right\"\n                ></v-btn>\n              </v-col>\n            </v-row>\n            <br />\n          </v-window-item>\n          <v-window-item value=\"option-5\">\n            <v-card flat>\n              <v-card-text>\n                <p style=\"font-size: 20px\">\n                  Please enter scenario capabilities:\n                </p>\n                <br />\n                <div v-for=\"(exp, index) in capability\" :key=\"index\">\n                  <v-checkbox-btn\n                    v-model=\"exp.required\"\n                    label=\"Required\"\n                  ></v-checkbox-btn>\n                  <v-text-field\n                    clearable\n                    v-model=\"exp.name\"\n                    label=\"Capability Name\"\n                  ></v-text-field>\n                  <v-text-field\n                    clearable\n                    v-model=\"exp.propertyName\"\n                    label=\"Property Name\"\n                  ></v-text-field>\n                  <v-select\n                    clearable\n                    v-model=\"exp.dataType\"\n                    label=\"Data Type\"\n                    :items=\"['string', 'number', 'boolean', 'option']\"\n                  ></v-select>\n                  <v-file-input\n                    v-if=\"exp.dataType==='string'\"\n                    clearable\n                    v-model=\"exp.value\"\n                    label=\"Value\"\n                  ></v-file-input>\n                  <v-select\n                    v-if=\"exp.dataType==='boolean'\"\n                    :items=\"['true', 'false']\"\n                    clearable\n                    v-model=\"exp.value\"\n                    label=\"Value\"\n                  ></v-select>\n                  <v-text-field\n                    v-if=\"exp.dataType==='number'\"\n                    clearable\n                    v-model=\"exp.value\"\n                    label=\"Value\"\n                  ></v-text-field>\n                  <v-text-field\n                    v-if=\"exp.dataType==='option'\"\n                    clearable\n                    v-model=\"exp.value\"\n                    label=\"Value\"\n                  ></v-text-field>\n                  <v-btn\n                    color=\"#ab51c4\"\n                    style=\"color: white\"\n                    @click=\"removeCapability(index)\"\n                    >Remove Capability</v-btn\n                  >\n                  <br />\n                  <br />\n                </div>\n                <v-btn\n                  color=\"#3c2d70\"\n                  style=\"color: white\"\n                  @click=\"addCapability\"\n                  >Add Capability</v-btn\n                >\n                <br />\n                <br />\n                <v-row>\n                  <v-col cols=\"auto\" class=\"mr-2\">\n                    <v-dialog v-model=\"dialog1\" persistent width=\"auto\">\n                      <template v-slot:activator=\"{ props }\">\n                        <v-btn color=\"success\" v-bind=\"props\"> Submit </v-btn>\n                      </template>\n                      <v-card>\n                        <v-card-title class=\"text-h5\">\n                          Submission Confirmation\n                        </v-card-title>\n                        <v-card-text\n                          >Are you sure you would like to submit your\n                          form?</v-card-text\n                        >\n                        <v-card-actions>\n                          <v-btn\n                            color=\"green-darken-1\"\n                            variant=\"text\"\n                            @click=\"dialog1 = false\"\n                          >\n                            Dismiss\n                          </v-btn>\n                          <v-btn\n                            color=\"success\"\n                            class=\"mr-4\"\n                            @click=\"saveXML(); dialog1=false\"\n                          >\n                            Submit\n                          </v-btn>\n                        </v-card-actions>\n                      </v-card>\n                    </v-dialog>\n                  </v-col>\n                  <v-col cols=\"auto\">\n                    <v-dialog v-model=\"dialog\" persistent width=\"auto\">\n                      <template v-slot:activator=\"{ props }\">\n                        <v-btn color=\"error\" v-bind=\"props\"> Reset Form </v-btn>\n                      </template>\n                      <v-card>\n                        <v-card-title class=\"text-h5\">\n                          Reset Confirmation\n                        </v-card-title>\n                        <v-card-text\n                          >Are you sure you would like to reset your\n                          form?</v-card-text\n                        >\n                        <v-card-actions>\n                          <v-spacer></v-spacer>\n                          <v-btn\n                            color=\"green-darken-1\"\n                            variant=\"text\"\n                            @click=\"dialog = false\"\n                          >\n                            Dismiss\n                          </v-btn>\n                          <v-btn\n                            color=\"error\"\n                            class=\"mr-4\"\n                            @click=\"reset(); dialog=false\"\n                          >\n                            Reset Form\n                          </v-btn>\n                        </v-card-actions>\n                      </v-card>\n                    </v-dialog>\n                  </v-col>\n                </v-row>\n                <br />\n              </v-card-text>\n            </v-card>\n            <br />\n            <br />\n            <v-row justify=\"center\">\n              <v-col cols=\"auto\">\n                <v-btn\n                  @click=\"nextTab('option-4')\"\n                  density=\"compact\"\n                  icon=\"mdi-arrow-left\"\n                ></v-btn>\n              </v-col>\n            </v-row>\n            <br />\n            <br />\n          </v-window-item>\n        </v-form>\n      </v-window>\n    </v-container>\n  </v-main>\n</template>\n<script>\nimport xmlbuilder from 'xmlbuilder'\nexport default {\n\tdata: () => ({\n\t\tfileName: '',\n\t\tstate_file: null,\n\t\tstate_file2: null,\n\t\tdialog1: false,\n\t\tdialog: false,\n\t\taltitude_min: 0,\n\t\taltitude_max: 10000,\n\t\ttemperature_min: 0,\n\t\ttemperature_max: 100,\n\t\tpressure_min: 0,\n\t\tpressure_max: 1000,\n\t\tco2_min: 0,\n\t\tco2_max: 10,\n\t\tage_min: 0,\n\t\tage_max: 120,\n    height_min: 55,\n    height_max: 190,\n    height_units: ['cm', 'in'],\n    height_unit: 'cm',\n    weight_min: 20,\n    weight_max: 250,\n    weight_units: ['kg', 'lb'],\n    weight_unit: 'kg',\n    time_min: 0,\n    time_max: 60,\n\t\ttab: 'home',\n\t\tname: [],\n\t\tdrawer: false,\n\t\tvalid: true,\n\t\texpanded: [0],\n\t\tcapability: [{\n\t\t\trequired: [],\n\t\t\tname: [],\n\t\t\tpropertyName: [],\n\t\t\tdataType: [],\n\t\t\tvalue: []\n\t\t}, ],\n\t\tscenario_props: {\n\t\t\t\"name\": [],\n\t\t\t\"authors\": [],\n      \"emails\": []\n\t\t},\n\t\tpatient_props: {\n\t\t\t\"type\": [],\n\t\t\t\"name\": [],\n\t\t\t\"title\": [],\n\t\t\t\"age\": 50,\n\t\t\t\"gender\": [],\n\t\t\t\"height\": 150,\n\t\t\t\"weight\": 75,\n\t\t},\n\t\tenvironment_props: {\n\t\t\t\"surrounding\": [],\n\t\t\t\"altitude\": 0,\n\t\t\t\"temperature\": 20,\n\t\t\t\"pressure\": 760,\n\t\t\t\"co2\": 4,\n\t\t\t\"sounds\": [],\n\t\t\t\"smells\": []\n\t\t},\n\t\ted_props: {\n\t\t\t'instruction': [],\n\t\t\t'narrative': [],\n\t\t\t'learnerCount': [0],\n\t\t\t'role': [],\n\t\t\t'setup_checklist': [],\n\t\t\t'equipment': [],\n\t\t\t'supplies': [],\n\t\t\t'duration': [0],\n\t\t\t'scenario_type': [],\n\t\t\t'assessment_type': [],\n\t\t\t'learner_group': [],\n\t\t\t'objectives': [],\n\t\t\t'task': [],\n\t\t\t'conditions': [],\n\t\t\t'exit_criteria': []\n\t\t},\n\t\tgenders: ['Male', 'Female'],\n\t\ttypes: ['Medical Doctor', 'Paramedic', 'Nurse'],\n\t}),\n\tmethods: {\n\t\thandleFileUpload(e) {\n\t\t\t\tthis.state_file2 = e.target.files[0];\n\t\t\t\tthis.fileName = this.state_file2.name;\n\t\t\t},\n\t\t\tparseXML() {\n\t\t\t\tif(!this.state_file2) {\n\t\t\t\t\talert('Please upload an XML file first');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst reader = new FileReader();\n\t\t\t\treader.onload = (e) => {\n\t\t\t\t\tconst xmlString = e.target.result;\n\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\tconst xmlDoc = parser.parseFromString(xmlString, 'application/xml');\n\t\t\t\t\t// Assuming the XML structure is as follows:\n\t\t\t\t\t// <root>\n\t\t\t\t\t//   <Patient>\n\t\t\t\t\t//     <Age>...</Age>\n\t\t\t\t\t//     <Weight>...</Weight>\n\t\t\t\t\t//   </Patient>\n\t\t\t\t\t// </root>\n\t\t\t\t\tconst patient = xmlDoc.querySelector('Patient');\n\t\t\t\t\tconst name = patient.querySelector('Name').textContent;\n\t\t\t\t\tconst sex = patient.querySelector('Sex').textContent;\n\t\t\t\t\tconst age = patient.querySelector('Age').getAttribute('value');\n\t\t\t\t\tconst height = patient.querySelector('Height').getAttribute('value');\n\t\t\t\t\tconst weight = patient.querySelector('Weight').getAttribute('value');\n\t\t\t\t\tconst ambientTemperatureElement = xmlDoc.querySelector('AmbientTemperature');\n\t\t\t\t\tconst ambientTemperatureValue = ambientTemperatureElement.getAttribute('value');\n\t\t\t\t\tconst atmosphericPressureElement = xmlDoc.querySelector('AtmosphericPressure');\n\t\t\t\t\tconst atmosphericPressureValue = atmosphericPressureElement.getAttribute('value');\n\t\t\t\t\tconst carbonDioxideElement = xmlDoc.querySelector('AmbientGas[Name=\"CarbonDioxide\"]');\n\t\t\t\t\t// Access the FractionAmount element and its value attribute\n\t\t\t\t\tconst fractionAmountElement = carbonDioxideElement.querySelector('FractionAmount');\n\t\t\t\t\tconst fractionAmountValue = fractionAmountElement.getAttribute('value');\n\t\t\t\t\tthis.patient_props['name'] = name;\n\t\t\t\t\tthis.patient_props['age'] = age;\n\t\t\t\t\tthis.patient_props['gender'] = sex;\n\t\t\t\t\tthis.patient_props['height'] = height;\n\t\t\t\t\tthis.patient_props['weight'] = weight;\n\t\t\t\t\tthis.environment_props['co2'] = fractionAmountValue * 100; // Convert to %\n\t\t\t\t\tthis.environment_props['temperature'] = ambientTemperatureValue;\n\t\t\t\t\tthis.environment_props['pressure'] = atmosphericPressureValue;\n\t\t\t\t\tthis.scenario_props['name'] = this.fileName;\n\t\t\t\t};\n\t\t\t\treader.readAsText(this.state_file2);\n\t\t\t},\n\t\t\taddCapability() {\n\t\t\t\tthis.capability.push({\n\t\t\t\t\trequired: '',\n\t\t\t\t\tname: '',\n\t\t\t\t\tpropertyName: '',\n\t\t\t\t\tdataType: '',\n\t\t\t\t\tvalue: ''\n\t\t\t\t});\n\t\t\t},\n\t\t\tnextTab(id) {\n\t\t\t\tthis.tab = id;\n\t\t\t},\n\t\t\tremoveCapability(index) {\n\t\t\t\tthis.capability.splice(index, 1);\n\t\t\t},\n\t\t\t//  validate() {\n\t\t\t//    this.$refs.form.validate()\n\t\t\t//  },\n\t\t\treset() {\n\t\t\t\tthis.$refs.form.reset()\n\t\t\t},\n\t\t\tpathClicked(id) {\n\t\t\t\tlet pathElement = document.getElementById(id);\n\t\t\t\tif(this.name.some(x => Object.keys(x).includes(id))) {\n\t\t\t\t\tthis.name = this.name.filter(x => !Object.keys(x).includes(id));\n\t\t\t\t} else {\n\t\t\t\t\tthis.name.push({\n\t\t\t\t\t\t[id]: ''\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif(pathElement.classList.contains(\"active\")) {\n\t\t\t\t\tpathElement.classList.remove(\"active\");\n\t\t\t\t} else {\n\t\t\t\t\tpathElement.classList.add(\"active\");\n\t\t\t\t}\n\t\t\t},\n\t\t\tsaveXML() {\n\t\t\t\tconst xml = xmlbuilder.create('AMMConfiguration', {\n\t\t\t\t\tencoding: 'UTF-8'\n\t\t\t\t})\n\t\t\t\txml.att({\n\t\t\t\t\t'xmlns:xsd': 'http://www.w3.org/2001/XMLSchema',\n\t\t\t\t\t'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance'\n\t\t\t\t})\n\t\t\t\tconst Scenario = xml.ele('Scenario')\n\t\t\t\tScenario.att({\n\t\t\t\t\t'name': this.scenario_props['name']\n\t\t\t\t})\n\t\t\t\tconst metadata = Scenario.ele('metadata')\n\t\t\t\tfor(var key1 in this.patient_props) {\n\t\t\t\t\tif(Array.isArray(this.patient_props[key1])) {\n\t\t\t\t\t\tfor(var item1 in this.patient_props[key1]) {\n\t\t\t\t\t\t\tmetadata.ele(key1, this.patient_props[key1][item1])\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst element = metadata.ele(key1, this.patient_props[key1])\n\t\t\t\t\t\tif(key1 == 'age') {\n\t\t\t\t\t\t\telement.att('units', 'years')\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(key1 == 'height') {\n\t\t\t\t\t\t\telement.att('units', 'centimeters')\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(key1 == 'weight') {\n\t\t\t\t\t\t\telement.att('units', 'kilograms')\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(var key2 in this.environment_props) {\n\t\t\t\t\tif(Array.isArray(this.environment_props[key2])) {\n\t\t\t\t\t\tfor(var item2 in this.environment_props[key2]) {\n\t\t\t\t\t\t\tmetadata.ele(key2, this.environment_props[key2][item2])\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst element = metadata.ele(key2, this.environment_props[key2])\n\t\t\t\t\t\tif(key2 == 'altitude') {\n\t\t\t\t\t\t\telement.att('units', 'meters')\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(key2 == 'temperature') {\n\t\t\t\t\t\t\telement.att('units', 'celsius')\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(key2 == 'pressure') {\n\t\t\t\t\t\t\telement.att('units', 'mmHg')\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(var key3 in this.ed_props) {\n\t\t\t\t\tif(Array.isArray(this.ed_props[key3])) {\n\t\t\t\t\t\tfor(var item3 in this.ed_props[key3]) {\n\t\t\t\t\t\t\tmetadata.ele(key3, this.ed_props[key3][item3])\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst element = metadata.ele(key3, this.ed_props[key3])\n\t\t\t\t\t\tif(key3 == 'duration') {\n\t\t\t\t\t\t\telement.att('units', 'minutes')\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n        const authors = Scenario.ele('authors');\n        for (var author in this.scenario_props['authors']) {\n          authors.text(this.scenario_props['authors'][author]);\n        }\n        const emails = Scenario.ele('emails');\n        for (var email in this.scenario_props['emails']) {\n          emails.text(this.scenario_props['emails'][email]);\n        }\n\t\t\t\tconst caps = Scenario.ele('capabilities')\n\t\t\t\tfor(var item4 in this.capability) {\n\t\t\t\t\tconst cap = caps.ele('capability');\n\t\t\t\t\tconst config_data = cap.ele('configuration_data');\n          const config_data_data = config_data.ele('data');\n\t\t\t\t\tfor(var key4 in this.capability[item4]) {\n\t\t\t\t\t\tif(key4 == 'name') {\n\t\t\t\t\t\t\tcap.att(key4, this.capability[item4][key4])\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(key4 == 'required') {\n\t\t\t\t\t\t\tcap.att(key4, this.capability[item4][key4])\n            }\n            else if (key4 == 'value' & this.capability[item4][key4] == \"[object File]\") {\n              config_data_data.att(key4, this.capability[item4][key4][0].name)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconfig_data_data.att(key4, this.capability[item4][key4])\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar xmlString = xml.end({\n\t\t\t\t\tpretty: true\n\t\t\t\t});\n\t\t\t\tconst blob = new Blob([xmlString], {\n\t\t\t\t\ttype: 'text/xml'\n\t\t\t\t})\n\t\t\t\tconst link = document.createElement('a')\n\t\t\t\tlink.href = URL.createObjectURL(blob)\n\t\t\t\tlink.download = this.scenario_props['name'] + '.xml'\n\t\t\t\tlink.click()\n\t\t\t}\n\t},\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}