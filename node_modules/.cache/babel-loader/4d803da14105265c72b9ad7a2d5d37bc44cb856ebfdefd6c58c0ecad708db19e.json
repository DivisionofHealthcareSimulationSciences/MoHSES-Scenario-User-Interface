{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { geoStream } from \"d3-geo\";\nimport noop from \"../noop.js\";\nimport clockwise from \"./clockwise.js\";\nimport contains from \"./contains.js\";\nexport default function (object, projection) {\n  var stream = projection.stream,\n    project;\n  if (!stream) throw new Error(\"invalid projection\");\n  switch (object && object.type) {\n    case \"Feature\":\n      project = projectFeature;\n      break;\n    case \"FeatureCollection\":\n      project = projectFeatureCollection;\n      break;\n    default:\n      project = projectGeometry;\n      break;\n  }\n  return project(object, stream);\n}\nfunction projectFeatureCollection(o, stream) {\n  return {\n    type: \"FeatureCollection\",\n    features: o.features.map(function (f) {\n      return projectFeature(f, stream);\n    })\n  };\n}\nfunction projectFeature(o, stream) {\n  return {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties,\n    geometry: projectGeometry(o.geometry, stream)\n  };\n}\nfunction projectGeometryCollection(o, stream) {\n  return {\n    type: \"GeometryCollection\",\n    geometries: o.geometries.map(function (o) {\n      return projectGeometry(o, stream);\n    })\n  };\n}\nfunction projectGeometry(o, stream) {\n  if (!o) return null;\n  if (o.type === \"GeometryCollection\") return projectGeometryCollection(o, stream);\n  var sink;\n  switch (o.type) {\n    case \"Point\":\n      sink = sinkPoint;\n      break;\n    case \"MultiPoint\":\n      sink = sinkPoint;\n      break;\n    case \"LineString\":\n      sink = sinkLine;\n      break;\n    case \"MultiLineString\":\n      sink = sinkLine;\n      break;\n    case \"Polygon\":\n      sink = sinkPolygon;\n      break;\n    case \"MultiPolygon\":\n      sink = sinkPolygon;\n      break;\n    case \"Sphere\":\n      sink = sinkPolygon;\n      break;\n    default:\n      return null;\n  }\n  geoStream(o, stream(sink));\n  return sink.result();\n}\nvar points = [],\n  lines = [];\nvar sinkPoint = {\n  point: function (x, y) {\n    points.push([x, y]);\n  },\n  result: function () {\n    var result = !points.length ? null : points.length < 2 ? {\n      type: \"Point\",\n      coordinates: points[0]\n    } : {\n      type: \"MultiPoint\",\n      coordinates: points\n    };\n    points = [];\n    return result;\n  }\n};\nvar sinkLine = {\n  lineStart: noop,\n  point: function (x, y) {\n    points.push([x, y]);\n  },\n  lineEnd: function () {\n    if (points.length) lines.push(points), points = [];\n  },\n  result: function () {\n    var result = !lines.length ? null : lines.length < 2 ? {\n      type: \"LineString\",\n      coordinates: lines[0]\n    } : {\n      type: \"MultiLineString\",\n      coordinates: lines\n    };\n    lines = [];\n    return result;\n  }\n};\nvar sinkPolygon = {\n  polygonStart: noop,\n  lineStart: noop,\n  point: function (x, y) {\n    points.push([x, y]);\n  },\n  lineEnd: function () {\n    var n = points.length;\n    if (n) {\n      do points.push(points[0].slice()); while (++n < 4);\n      lines.push(points), points = [];\n    }\n  },\n  polygonEnd: noop,\n  result: function () {\n    if (!lines.length) return null;\n    var polygons = [],\n      holes = [];\n\n    // https://github.com/d3/d3/issues/1558\n    lines.forEach(function (ring) {\n      if (clockwise(ring)) polygons.push([ring]);else holes.push(ring);\n    });\n    holes.forEach(function (hole) {\n      var point = hole[0];\n      polygons.some(function (polygon) {\n        if (contains(polygon[0], point)) {\n          polygon.push(hole);\n          return true;\n        }\n      }) || polygons.push([hole]);\n    });\n    lines = [];\n    return !polygons.length ? null : polygons.length > 1 ? {\n      type: \"MultiPolygon\",\n      coordinates: polygons\n    } : {\n      type: \"Polygon\",\n      coordinates: polygons[0]\n    };\n  }\n};","map":{"version":3,"names":["geoStream","noop","clockwise","contains","object","projection","stream","project","Error","type","projectFeature","projectFeatureCollection","projectGeometry","o","features","map","f","id","properties","geometry","projectGeometryCollection","geometries","sink","sinkPoint","sinkLine","sinkPolygon","result","points","lines","point","x","y","push","length","coordinates","lineStart","lineEnd","polygonStart","n","slice","polygonEnd","polygons","holes","forEach","ring","hole","some","polygon"],"sources":["C:/Users/sanik/Downloads/capstone/MoHSES-Scenario-User-Interface/node_modules/d3-geo-projection/src/project/index.js"],"sourcesContent":["import {geoStream} from \"d3-geo\";\r\nimport noop from \"../noop.js\";\r\nimport clockwise from \"./clockwise.js\";\r\nimport contains from \"./contains.js\";\r\n\r\nexport default function(object, projection) {\r\n  var stream = projection.stream, project;\r\n  if (!stream) throw new Error(\"invalid projection\");\r\n  switch (object && object.type) {\r\n    case \"Feature\": project = projectFeature; break;\r\n    case \"FeatureCollection\": project = projectFeatureCollection; break;\r\n    default: project = projectGeometry; break;\r\n  }\r\n  return project(object, stream);\r\n}\r\n\r\nfunction projectFeatureCollection(o, stream) {\r\n  return {\r\n    type: \"FeatureCollection\",\r\n    features: o.features.map(function(f) {\r\n      return projectFeature(f, stream);\r\n    })\r\n  };\r\n}\r\n\r\nfunction projectFeature(o, stream) {\r\n  return {\r\n    type: \"Feature\",\r\n    id: o.id,\r\n    properties: o.properties,\r\n    geometry: projectGeometry(o.geometry, stream)\r\n  };\r\n}\r\n\r\nfunction projectGeometryCollection(o, stream) {\r\n  return {\r\n    type: \"GeometryCollection\",\r\n    geometries: o.geometries.map(function(o) {\r\n      return projectGeometry(o, stream);\r\n    })\r\n  };\r\n}\r\n\r\nfunction projectGeometry(o, stream) {\r\n  if (!o) return null;\r\n  if (o.type === \"GeometryCollection\") return projectGeometryCollection(o, stream);\r\n  var sink;\r\n  switch (o.type) {\r\n    case \"Point\": sink = sinkPoint; break;\r\n    case \"MultiPoint\": sink = sinkPoint; break;\r\n    case \"LineString\": sink = sinkLine; break;\r\n    case \"MultiLineString\": sink = sinkLine; break;\r\n    case \"Polygon\": sink = sinkPolygon; break;\r\n    case \"MultiPolygon\": sink = sinkPolygon; break;\r\n    case \"Sphere\": sink = sinkPolygon; break;\r\n    default: return null;\r\n  }\r\n  geoStream(o, stream(sink));\r\n  return sink.result();\r\n}\r\n\r\nvar points = [],\r\n    lines = [];\r\n\r\nvar sinkPoint = {\r\n  point: function(x, y) {\r\n    points.push([x, y]);\r\n  },\r\n  result: function() {\r\n    var result = !points.length ? null\r\n        : points.length < 2 ? {type: \"Point\", coordinates: points[0]}\r\n        : {type: \"MultiPoint\", coordinates: points};\r\n    points = [];\r\n    return result;\r\n  }\r\n};\r\n\r\nvar sinkLine = {\r\n  lineStart: noop,\r\n  point: function(x, y) {\r\n    points.push([x, y]);\r\n  },\r\n  lineEnd: function() {\r\n    if (points.length) lines.push(points), points = [];\r\n  },\r\n  result: function() {\r\n    var result = !lines.length ? null\r\n        : lines.length < 2 ? {type: \"LineString\", coordinates: lines[0]}\r\n        : {type: \"MultiLineString\", coordinates: lines};\r\n    lines = [];\r\n    return result;\r\n  }\r\n};\r\n\r\nvar sinkPolygon = {\r\n  polygonStart: noop,\r\n  lineStart: noop,\r\n  point: function(x, y) {\r\n    points.push([x, y]);\r\n  },\r\n  lineEnd: function() {\r\n    var n = points.length;\r\n    if (n) {\r\n      do points.push(points[0].slice()); while (++n < 4);\r\n      lines.push(points), points = [];\r\n    }\r\n  },\r\n  polygonEnd: noop,\r\n  result: function() {\r\n    if (!lines.length) return null;\r\n    var polygons = [],\r\n        holes = [];\r\n\r\n    // https://github.com/d3/d3/issues/1558\r\n    lines.forEach(function(ring) {\r\n      if (clockwise(ring)) polygons.push([ring]);\r\n      else holes.push(ring);\r\n    });\r\n\r\n    holes.forEach(function(hole) {\r\n      var point = hole[0];\r\n      polygons.some(function(polygon) {\r\n        if (contains(polygon[0], point)) {\r\n          polygon.push(hole);\r\n          return true;\r\n        }\r\n      }) || polygons.push([hole]);\r\n    });\r\n\r\n    lines = [];\r\n\r\n    return !polygons.length ? null\r\n        : polygons.length > 1 ? {type: \"MultiPolygon\", coordinates: polygons}\r\n        : {type: \"Polygon\", coordinates: polygons[0]};\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}