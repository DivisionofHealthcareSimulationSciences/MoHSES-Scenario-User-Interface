{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, mergeProps as _mergeProps } from \"vue\";\nimport _imports_0 from '@/assets/crest_vh_gold_purple_dt.png';\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"14px\"\n  }\n}, \"This tool is designed to simplify the process of generating BioGears Scenario XML files. First, input patient information and healthy vitals to define a BioGears patient. Then configure injuries to define a specific patient scenario and click Submit. This will locally download BioGears-compatible Patient and Scenario XML files, which can then be inputted into BioGears via command line. After running BioGears with this file, user will have a MoHSES-compatible state file with data on the simulated injured patient's vitals.\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"font-weight-regular\",\n  style: {\n    \"font-size\": \"18px\"\n  }\n}, \" After generating the Custom Patient and Scenario files using the BioGears Scenario Creation Tool tab, users must run BioGears with the files in order to generate a MoHSES-compatible state file. The following are instructions on how to run BioGears: \", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"https://github.com/BioGearsEngine/core\"\n}, \"codebase\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"pre\", null, \"git clone https://github.com/BioGearsEngine/core.git \", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"https://github.com/BioGearsEngine/core/wiki/Build-Instructions\"\n}, \"Github Wiki\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"pre\", null, \"/bin/bash -c \\\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\\\" \", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"pre\", null, \"echo 'eval \\\"$(/opt/homebrew/bin/brew shellenv)\\\"' >> ~/.zprofile \", -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"pre\", null, \"eval \\\"$(/opt/homebrew/bin/brew shellenv)\\\"  \", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"pre\", null, \"brew install wget\\nbrew install git\\nbrew install ninja\\nbrew install g++\\nbrew install gcc\\nbrew install eigen\\nbrew install xerces-c\\nbrew install xsd\\nbrew install cmake\\n                            \", -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"pre\", null, \"cd ~/Desktop/biogears\\ncd core\\nmkdir build\\ncd build\\ncmake -G \\\"Ninja\\\" -DCMAKE_INSTALL_PREFIX=~/Desktop/BiogearsInstall -DBiogears_BUILD_HOWTOS=ON ..\\nninja bg-cli\\n                            \", -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"https://docs.chocolatey.org/en-us/choco/setup\"\n}, \" Chocolatey Package Manager \", -1 /* HOISTED */);\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"pre\", null, \"choco install git\\nchoco install ninja\\nchoco install g++\\nchoco install gcc\\nchoco install eigen\\nchoco install xerces-c\\nchoco install xsd\\n                              \", -1 /* HOISTED */);\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"pre\", null, \"cd ~/Desktop/biogears\\ncd core\\nmkdir build\\ncd build\\ncmake -G -DCMAKE_INSTALL_PREFIX=C:~/Downloads/BioGears/external/ .. \", -1 /* HOISTED */);\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"i\", null, \"core/build/runtime/Scenarios/Patient\", -1 /* HOISTED */);\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"i\", null, \"core/build/runtime/patients\", -1 /* HOISTED */);\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"i\", null, \"core/build/runtime\", -1 /* HOISTED */);\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"pre\", null, \"../outputs/Release/bin/bg-cli SCENARIO ./Scenarios/Patient/CustomScenario.xml \", -1 /* HOISTED */);\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"i\", null, \"Scenarios/Patient folder\", -1 /* HOISTED */);\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"i\", null, \"core/build/runtime/states\", -1 /* HOISTED */);\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"20px\"\n  }\n}, \"Please enter patient information:\", -1 /* HOISTED */);\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_29 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"20px\"\n  }\n}, [/*#__PURE__*/_createTextVNode(\"Please enter \"), /*#__PURE__*/_createElementVNode(\"b\", null, \"healthy\"), /*#__PURE__*/_createTextVNode(\" patient vitals: \")], -1 /* HOISTED */);\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_31 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_32 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_33 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"20px\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"b\", null, \"Optional:\"), /*#__PURE__*/_createTextVNode(\" Please enter environment properties: \")], -1 /* HOISTED */);\nconst _hoisted_34 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_36 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_37 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_38 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_39 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_40 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_41 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"20px\"\n  }\n}, \"Please enter a title and brief description for this patient scenario: \", -1 /* HOISTED */);\nconst _hoisted_42 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_43 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"20px\"\n  }\n}, \"Please configure patient injuries and timeline by either clicking on body part to add, or selecting 'Add Injury':\", -1 /* HOISTED */);\nconst _hoisted_44 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_45 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_46 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_47 = {\n  width: \"550px\",\n  height: \"600px\",\n  viewBox: \"15 0 20 100\",\n  version: \"1.1\",\n  id: \"svg46\",\n  \"sodipodi:docname\": \"human_sanika.svg\",\n  \"inkscape:version\": \"1.2.2 (732a01da63, 2022-12-09)\",\n  \"xmlns:inkscape\": \"http://www.inkscape.org/namespaces/inkscape\",\n  \"xmlns:sodipodi\": \"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  \"xmlns:svg\": \"http://www.w3.org/2000/svg\"\n};\nconst _hoisted_48 = /*#__PURE__*/_createElementVNode(\"defs\", {\n  id: \"defs50\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_49 = [\"fill\"];\nconst _hoisted_50 = [\"fill\"];\nconst _hoisted_51 = [\"fill\"];\nconst _hoisted_52 = [\"fill\"];\nconst _hoisted_53 = [\"fill\"];\nconst _hoisted_54 = [\"fill\"];\nconst _hoisted_55 = [\"fill\"];\nconst _hoisted_56 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_57 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_58 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_59 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_60 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_61 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_62 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_toolbar_title = _resolveComponent(\"v-toolbar-title\");\n  const _component_v_toolbar = _resolveComponent(\"v-toolbar\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_tab = _resolveComponent(\"v-tab\");\n  const _component_v_tabs = _resolveComponent(\"v-tabs\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_list_item_title = _resolveComponent(\"v-list-item-title\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_expansion_panel_text = _resolveComponent(\"v-expansion-panel-text\");\n  const _component_v_expansion_panel = _resolveComponent(\"v-expansion-panel\");\n  const _component_v_expansion_panels = _resolveComponent(\"v-expansion-panels\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_window_item = _resolveComponent(\"v-window-item\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_select = _resolveComponent(\"v-select\");\n  const _component_v_slider = _resolveComponent(\"v-slider\");\n  const _component_v_autocomplete = _resolveComponent(\"v-autocomplete\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_dialog = _resolveComponent(\"v-dialog\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_window = _resolveComponent(\"v-window\");\n  const _component_v_main = _resolveComponent(\"v-main\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_v_toolbar, {\n    color: \"#3c2d70\",\n    style: {\n      \"color\": \"white\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_toolbar_title, null, {\n      default: _withCtx(() => [_createTextVNode(\"BioGears Scenario Creation Tool\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }), _createVNode(_component_v_tabs, {\n    large: \"\",\n    modelValue: _ctx.tab,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.tab = $event),\n    color: \"#3c2d70\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_tab, {\n      value: \"home\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_icon, {\n        start: \"\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" mdi-home \")]),\n        _: 1 /* STABLE */\n      }), _createTextVNode(\" About this page \")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_tab, {\n      value: \"option-1\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_icon, {\n        start: \"\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" mdi-account \")]),\n        _: 1 /* STABLE */\n      }), _createTextVNode(\" Patient Information \")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_tab, {\n      value: \"option-2\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_icon, {\n        start: \"\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" mdi-access-point \")]),\n        _: 1 /* STABLE */\n      }), _createTextVNode(\" Patient Vitals \")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_tab, {\n      value: \"option-3\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_icon, {\n        start: \"\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" mdi-access-point \")]),\n        _: 1 /* STABLE */\n      }), _createTextVNode(\" Environment Properties \")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_tab, {\n      value: \"option-4\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_icon, {\n        start: \"\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" mdi-list-status \")]),\n        _: 1 /* STABLE */\n      }), _createTextVNode(\" Configure Patient Scenario \")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_main, {\n    class: \"bg-grey-lighten-3\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_container, null, {\n      default: _withCtx(() => [_createVNode(_component_v_window, {\n        modelValue: _ctx.tab,\n        \"onUpdate:modelValue\": _cache[57] || (_cache[57] = $event => _ctx.tab = $event),\n        class: \"mt-n12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_form, {\n          ref: \"form\",\n          modelValue: _ctx.valid,\n          \"onUpdate:modelValue\": _cache[56] || (_cache[56] = $event => _ctx.valid = $event),\n          \"lazy-validation\": \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_window_item, {\n            value: \"home\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              class: \"bg-grey-lighten-3\",\n              flat: \"\"\n            }, {\n              default: _withCtx(() => [_createCommentVNode(\"bg-yellow-lighten-4\"), _createVNode(_component_v_card_title, {\n                class: \"text-center\",\n                style: {\n                  \"font-size\": \"36px\"\n                }\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"Welcome to the BioGears Scenario Creation Tool!\")]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_container, {\n                fluid: \"\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_row, {\n                  align: \"center\",\n                  justify: \"center\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_col, {\n                    cols: \"12\"\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_v_img, {\n                      src: _imports_0,\n                      alt: \"Your image\",\n                      class: \"mx-auto\",\n                      width: \"80%\",\n                      height: \"80%\"\n                    })]),\n                    _: 1 /* STABLE */\n                  })]),\n\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_card_text, null, {\n                default: _withCtx(() => [_hoisted_1]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_card, {\n                flat: \"\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_expansion_panels, null, {\n                    default: _withCtx(() => [_createVNode(_component_v_expansion_panel, {\n                      class: \"font-weight-bold\",\n                      style: {\n                        \"font-size\": \"25px\"\n                      },\n                      title: \"BioGears Guide\"\n                    }, {\n                      default: _withCtx(() => [_createVNode(_component_v_expansion_panel_text, {\n                        class: \"text-h6\"\n                      }, {\n                        default: _withCtx(() => [_createCommentVNode(\" <div class=\\\"text-h4\\\">BioGears Guide</div> \"), _hoisted_2, _createVNode(_component_v_list, null, {\n                          default: _withCtx(() => [_createVNode(_component_v_list_item, null, {\n                            default: _withCtx(() => [_createVNode(_component_v_list_item_title, {\n                              style: {\n                                \"font-size\": \"18px\"\n                              },\n                              class: \"font-weight-bold\"\n                            }, {\n                              default: _withCtx(() => [_createTextVNode(\" 1. Build BioGears \")]),\n                              _: 1 /* STABLE */\n                            }), _createVNode(_component_v_list, null, {\n                              default: _withCtx(() => [_createVNode(_component_v_list_item, null, {\n                                default: _withCtx(() => [_createTextVNode(\" Create a folder in your Desktop titled 'biogears'. In the command line, navigate to this folder. Clone the BioGears \"), _hoisted_3, _createTextVNode(\" to your local computer by running: \"), _hoisted_4, _createTextVNode(\" in command line. Follow the build instructions from the \"), _hoisted_5, _createTextVNode(\" for your operating system (also described below). \")]),\n                                _: 1 /* STABLE */\n                              }), _createVNode(_component_v_expansion_panels, null, {\n                                default: _withCtx(() => [_createVNode(_component_v_expansion_panel, {\n                                  class: \"font-weight-bold\",\n                                  title: \"For MacOS (M1/M2 chip)\"\n                                }, {\n                                  default: _withCtx(() => [_createVNode(_component_v_expansion_panel_text, {\n                                    class: \"font-weight-regular\",\n                                    style: {\n                                      \"font-size\": \"18px\"\n                                    }\n                                  }, {\n                                    default: _withCtx(() => [_createTextVNode(\" Install Homebrew using by running: \"), _hoisted_6, _createTextVNode(\" in command line. Add Homebrew to path using: \"), _hoisted_7, _hoisted_8, _createTextVNode(\" Install dependencies using:\"), _hoisted_9, _createTextVNode(\" Assuming the BioGears repository was cloned in the biogears folder on Desktop, run the following commands to build BioGears: \"), _hoisted_10]),\n                                    _: 1 /* STABLE */\n                                  })]),\n\n                                  _: 1 /* STABLE */\n                                }), _createVNode(_component_v_expansion_panel, {\n                                  class: \"font-weight-bold\",\n                                  title: \"For Windows\"\n                                }, {\n                                  default: _withCtx(() => [_createVNode(_component_v_expansion_panel_text, {\n                                    class: \"font-weight-regular\",\n                                    style: {\n                                      \"font-size\": \"18px\"\n                                    }\n                                  }, {\n                                    default: _withCtx(() => [_createTextVNode(\" To build BioGears on a Windows Machine, you will need to download the \"), _hoisted_11, _createTextVNode(\". Then, install dependencies using: \"), _hoisted_12, _createTextVNode(\" Assuming the BioGears repository was cloned in the biogears folder on Desktop, run the following commands to build BioGears: \"), _hoisted_13]),\n                                    _: 1 /* STABLE */\n                                  })]),\n\n                                  _: 1 /* STABLE */\n                                })]),\n\n                                _: 1 /* STABLE */\n                              })]),\n\n                              _: 1 /* STABLE */\n                            })]),\n\n                            _: 1 /* STABLE */\n                          }), _createVNode(_component_v_list_item, null, {\n                            default: _withCtx(() => [_createVNode(_component_v_list_item_title, {\n                              style: {\n                                \"font-size\": \"18px\"\n                              },\n                              class: \"font-weight-bold\"\n                            }, {\n                              default: _withCtx(() => [_createTextVNode(\"2. Move downloaded files to proper directories\")]),\n                              _: 1 /* STABLE */\n                            }), _createVNode(_component_v_list, null, {\n                              default: _withCtx(() => [_createVNode(_component_v_list_item, null, {\n                                default: _withCtx(() => [_createTextVNode(\" After clicking Submit in the BioGears Scenario Creation Tool tab, two files should be downloaded - CustomScenario.xml and CustomPatient.xml. Within the BioGears directory folder, move CustomScenario.xml to the \"), _hoisted_14, _createTextVNode(\" folder. Also within the BioGears directory folder, move CustomPatient.xml to the \"), _hoisted_15, _createTextVNode(\" folder. \")]),\n                                _: 1 /* STABLE */\n                              })]),\n\n                              _: 1 /* STABLE */\n                            })]),\n\n                            _: 1 /* STABLE */\n                          }), _createVNode(_component_v_list_item, null, {\n                            default: _withCtx(() => [_createVNode(_component_v_list_item_title, {\n                              style: {\n                                \"font-size\": \"18px\"\n                              },\n                              class: \"font-weight-bold\"\n                            }, {\n                              default: _withCtx(() => [_createTextVNode(\"3. Run BioGears executable in command line\")]),\n                              _: 1 /* STABLE */\n                            }), _createVNode(_component_v_list, null, {\n                              default: _withCtx(() => [_createVNode(_component_v_list_item, null, {\n                                default: _withCtx(() => [_createTextVNode(\" Open command line and within the BioGears directory, navigate to \"), _hoisted_16, _createTextVNode(\". Run the BioGears executable by running this command: \"), _hoisted_17, _createTextVNode(), _hoisted_18, _createTextVNode(\" This may take a couple minutes to run. After BioGears has finished running, within the \"), _hoisted_19, _createTextVNode(\", there should be CustomScenario.log and CustomScenario.csv files. The csv file can be inputted into the BioGears Plotting Tool Tab to visualize the simulated physiological variables over time. \"), _hoisted_20, _createTextVNode(\" Most importantly, under the \"), _hoisted_21, _createTextVNode(\" folder, a new file called CustomBioGearsState.xml will be created, which is the MoHSES-compatible state file that can be used to generate the MoHSES Scenario file. \")]),\n                                _: 1 /* STABLE */\n                              })]),\n\n                              _: 1 /* STABLE */\n                            })]),\n\n                            _: 1 /* STABLE */\n                          })]),\n\n                          _: 1 /* STABLE */\n                        })]),\n\n                        _: 1 /* STABLE */\n                      })]),\n\n                      _: 1 /* STABLE */\n                    })]),\n\n                    _: 1 /* STABLE */\n                  })]),\n\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[1] || (_cache[1] = $event => $options.nextTab('option-1')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-right\"\n                })]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_22, _hoisted_23, _hoisted_24]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_window_item, {\n            value: \"option-1\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              flat: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n                default: _withCtx(() => [_hoisted_25, _hoisted_26, _createVNode(_component_v_text_field, {\n                  modelValue: _ctx.patient_props['Name'],\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.patient_props['Name'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Name\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_select, {\n                  modelValue: _ctx.patient_props['Sex'],\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.patient_props['Sex'] = $event),\n                  items: _ctx.genders,\n                  rules: [v => !!v || 'Sex is required'],\n                  label: \"Sex\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"rules\"]), _createVNode(_component_v_slider, {\n                  modelValue: _ctx.patient_props['age'],\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.patient_props['age'] = $event),\n                  label: \"Age\",\n                  class: \"align-center\",\n                  max: _ctx.age_max,\n                  min: _ctx.age_min,\n                  step: 1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_props['age'],\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.patient_props['age'] = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    suffix: \"years\",\n                    style: {\n                      \"width\": \"180px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\"]), _createVNode(_component_v_slider, {\n                  modelValue: _ctx.patient_props['height'],\n                  \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => _ctx.patient_props['height'] = $event),\n                  label: \"Height\",\n                  class: \"align-center\",\n                  max: _ctx.height_max,\n                  min: _ctx.height_min,\n                  step: 0.1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_props['height'],\n                    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.patient_props['height'] = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    style: {\n                      \"width\": \"90px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_select, {\n                    modelValue: _ctx.height_unit,\n                    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.height_unit = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    items: _ctx.height_units,\n                    style: {\n                      \"width\": \"90px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"items\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\", \"step\"]), _createVNode(_component_v_slider, {\n                  modelValue: _ctx.patient_props['weight'],\n                  \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => _ctx.patient_props['weight'] = $event),\n                  label: \"Weight\",\n                  class: \"align-center\",\n                  max: _ctx.weight_max,\n                  min: _ctx.weight_min,\n                  step: 0.1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_props['weight'],\n                    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => _ctx.patient_props['weight'] = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    style: {\n                      \"width\": \"90px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_select, {\n                    modelValue: _ctx.weight_unit,\n                    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => _ctx.weight_unit = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    items: _ctx.weight_units,\n                    style: {\n                      \"width\": \"90px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"items\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\", \"step\"])]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_27, _createVNode(_component_v_row, {\n              justify: \"center\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[12] || (_cache[12] = $event => $options.nextTab('home')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-left\"\n                })]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[13] || (_cache[13] = $event => $options.nextTab('option-2')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-right\"\n                })]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_28]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_window_item, {\n            value: \"option-2\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              flat: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n                default: _withCtx(() => [_hoisted_29, _hoisted_30, _createVNode(_component_v_select, {\n                  modelValue: _ctx.patient_vitals['BloodTypeABO'],\n                  \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => _ctx.patient_vitals['BloodTypeABO'] = $event),\n                  items: _ctx.blood_types,\n                  label: \"Blood Type\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"items\"]), _createVNode(_component_v_select, {\n                  modelValue: _ctx.patient_vitals['BloodTypeRh'],\n                  \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => _ctx.patient_vitals['BloodTypeRh'] = $event),\n                  items: _ctx.rh,\n                  label: \"Rh\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"items\"]), _createCommentVNode(\" <v-text-field\\r\\n                v-model=\\\"patient_vitals['mean_arterial_pressure']\\\"\\r\\n                label=\\\"Mean Arterial Pressure (mmHg)\\\"\\r\\n              ></v-text-field> \"), _createVNode(_component_v_text_field, {\n                  modelValue: _ctx.patient_vitals['DiastolicArterialPressureBaseline'],\n                  \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => _ctx.patient_vitals['DiastolicArterialPressureBaseline'] = $event),\n                  label: \"Diastolic Arterial Pressure (mmHg)\",\n                  required: \"\",\n                  hint: \"Enter value between 60-80 mmHg\"\n                }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n                  modelValue: _ctx.patient_vitals['SystolicArterialPressureBaseline'],\n                  \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => _ctx.patient_vitals['SystolicArterialPressureBaseline'] = $event),\n                  label: \"Systolic Arterial Pressure (mmHg)\",\n                  required: \"\",\n                  hint: \"Enter value between 90-120 mmHg\"\n                }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_slider, {\n                  modelValue: _ctx.patient_vitals['HeartRateBaseline'],\n                  \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => _ctx.patient_vitals['HeartRateBaseline'] = $event),\n                  label: \"Heart Rate\",\n                  class: \"align-center\",\n                  max: _ctx.heart_rate_max,\n                  min: _ctx.heart_rate_min,\n                  step: 1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_vitals['HeartRateBaseline'],\n                    \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => _ctx.patient_vitals['HeartRateBaseline'] = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    suffix: \"bpm\",\n                    style: {\n                      \"width\": \"180px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\"]), _createVNode(_component_v_slider, {\n                  modelValue: _ctx.patient_vitals['RespirationRateBaseline'],\n                  \"onUpdate:modelValue\": _cache[21] || (_cache[21] = $event => _ctx.patient_vitals['RespirationRateBaseline'] = $event),\n                  label: \"Respiratory Rate\",\n                  class: \"align-center\",\n                  max: _ctx.resp_rate_max,\n                  min: _ctx.resp_rate_min,\n                  step: 1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_vitals['RespirationRateBaseline'],\n                    \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => _ctx.patient_vitals['RespirationRateBaseline'] = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    suffix: \"/min\",\n                    style: {\n                      \"width\": \"180px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\"])]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_31, _createVNode(_component_v_row, {\n              justify: \"center\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[22] || (_cache[22] = $event => $options.nextTab('option-1')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-left\"\n                })]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[23] || (_cache[23] = $event => $options.nextTab('option-3')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-right\"\n                })]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_32]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_window_item, {\n            value: \"option-3\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              flat: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n                default: _withCtx(() => [_hoisted_33, _hoisted_34, _createVNode(_component_v_text_field, {\n                  modelValue: _ctx.date,\n                  \"onUpdate:modelValue\": _cache[24] || (_cache[24] = $event => _ctx.date = $event),\n                  type: \"date\",\n                  label: \"Date\"\n                }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_row, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_col, {\n                    cols: \"6\"\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                      modelValue: _ctx.lat,\n                      \"onUpdate:modelValue\": _cache[25] || (_cache[25] = $event => _ctx.lat = $event),\n                      label: \"Latitude\"\n                    }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_v_col, {\n                    cols: \"6\"\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                      modelValue: _ctx.lon,\n                      \"onUpdate:modelValue\": _cache[26] || (_cache[26] = $event => _ctx.lon = $event),\n                      label: \"Longitude\"\n                    }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                    _: 1 /* STABLE */\n                  })]),\n\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_btn, {\n                  onClick: $options.pullEnvironmentData,\n                  color: \"#3c2d70\",\n                  style: {\n                    \"color\": \"white\"\n                  }\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\"Generate Environment Data\")]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"onClick\"]), _hoisted_35, _hoisted_36, _ctx.weatherData ? (_openBlock(), _createBlock(_component_v_slider, {\n                  key: 0,\n                  modelValue: _ctx.environment_props['temperature'],\n                  \"onUpdate:modelValue\": _cache[28] || (_cache[28] = $event => _ctx.environment_props['temperature'] = $event),\n                  label: \"Temperature\",\n                  clearable: \"\",\n                  class: \"align-center\",\n                  max: _ctx.temperature_max,\n                  min: _ctx.temperature_min,\n                  step: 0.1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.environment_props['temperature'],\n                    \"onUpdate:modelValue\": _cache[27] || (_cache[27] = $event => _ctx.environment_props['temperature'] = $event),\n                    \"hide-details\": \"\",\n                    clearable: \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    suffix: \"Celsius\",\n                    style: {\n                      \"width\": \"180px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\", \"step\"])) : _createCommentVNode(\"v-if\", true), _ctx.weatherData ? (_openBlock(), _createBlock(_component_v_slider, {\n                  key: 1,\n                  modelValue: _ctx.environment_props['pressure'],\n                  \"onUpdate:modelValue\": _cache[30] || (_cache[30] = $event => _ctx.environment_props['pressure'] = $event),\n                  label: \"Pressure\",\n                  clearable: \"\",\n                  class: \"align-center\",\n                  max: _ctx.pressure_max,\n                  min: _ctx.pressure_min,\n                  step: 0.1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.environment_props['pressure'],\n                    \"onUpdate:modelValue\": _cache[29] || (_cache[29] = $event => _ctx.environment_props['pressure'] = $event),\n                    \"hide-details\": \"\",\n                    clearable: \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    suffix: \"mmHg\",\n                    style: {\n                      \"width\": \"180px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\", \"step\"])) : _createCommentVNode(\"v-if\", true), _ctx.weatherData ? (_openBlock(), _createBlock(_component_v_slider, {\n                  key: 2,\n                  modelValue: _ctx.environment_props['humidity'],\n                  \"onUpdate:modelValue\": _cache[32] || (_cache[32] = $event => _ctx.environment_props['humidity'] = $event),\n                  label: \"Relative Humidity\",\n                  clearable: \"\",\n                  class: \"align-center\",\n                  max: 100,\n                  min: 0,\n                  step: 0.1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.environment_props['humidity'],\n                    \"onUpdate:modelValue\": _cache[31] || (_cache[31] = $event => _ctx.environment_props['humidity'] = $event),\n                    \"hide-details\": \"\",\n                    clearable: \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    suffix: \"%\",\n                    style: {\n                      \"width\": \"180px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"step\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_row, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_col, {\n                    cols: \"8\"\n                  }, {\n                    default: _withCtx(() => [_ctx.weatherData ? (_openBlock(), _createBlock(_component_v_text_field, {\n                      key: 0,\n                      modelValue: _ctx.environment_props['cityName'],\n                      \"onUpdate:modelValue\": _cache[33] || (_cache[33] = $event => _ctx.environment_props['cityName'] = $event),\n                      label: \"City\"\n                    }, null, 8 /* PROPS */, [\"modelValue\"])) : _createCommentVNode(\"v-if\", true)]),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_v_col, {\n                    cols: \"4\"\n                  }, {\n                    default: _withCtx(() => [_ctx.weatherData ? (_openBlock(), _createBlock(_component_v_text_field, {\n                      key: 0,\n                      modelValue: _ctx.environment_props['state'],\n                      \"onUpdate:modelValue\": _cache[34] || (_cache[34] = $event => _ctx.environment_props['state'] = $event),\n                      label: \"State\"\n                    }, null, 8 /* PROPS */, [\"modelValue\"])) : _createCommentVNode(\"v-if\", true)]),\n                    _: 1 /* STABLE */\n                  })]),\n\n                  _: 1 /* STABLE */\n                }), _hoisted_37, _hoisted_38]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_39, _createVNode(_component_v_row, {\n              justify: \"center\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[35] || (_cache[35] = $event => $options.nextTab('option-2')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-left\"\n                })]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[36] || (_cache[36] = $event => $options.nextTab('option-4')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-right\"\n                })]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_40]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_window_item, {\n            value: \"option-4\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              flat: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n                default: _withCtx(() => [_hoisted_41, _hoisted_42, _createVNode(_component_v_text_field, {\n                  modelValue: _ctx.scenario_props['Name'],\n                  \"onUpdate:modelValue\": _cache[37] || (_cache[37] = $event => _ctx.scenario_props['Name'] = $event),\n                  label: \"Scenario Name\"\n                }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n                  modelValue: _ctx.scenario_props['Description'],\n                  \"onUpdate:modelValue\": _cache[38] || (_cache[38] = $event => _ctx.scenario_props['Description'] = $event),\n                  label: \"Scenario Brief Description\"\n                }, null, 8 /* PROPS */, [\"modelValue\"]), _hoisted_43, _hoisted_44, _hoisted_45, _hoisted_46, _createVNode(_component_v_row, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_col, {\n                    cols: \"12\",\n                    sm: \"8\",\n                    md: \"6\",\n                    class: \"my-content\"\n                  }, {\n                    default: _withCtx(() => [(_openBlock(), _createElementBlock(\"svg\", _hoisted_47, [_hoisted_48, _createElementVNode(\"path\", {\n                      fill: _ctx.colors['Chest'],\n                      onClick: _cache[39] || (_cache[39] = $event => $options.pathClicked('Chest')),\n                      id: \"Chest\",\n                      d: \"m 2.4651865,21.528509 -1.72941989,3.09103 -1.89346001,0.94785 1.15295001,0.90662 0.90586,2.63773 2.09966989,0.86537 3.34636,-1.655 -0.83462,-6.50527 z m 8.9862405,0 1.72942,3.09103 1.89346,0.94785 -1.15295,0.90662 -0.90604,2.63773 -2.09968,0.86537 -3.3452405,-1.655 0.83425,-6.50527 z\"\n                    }, null, 8 /* PROPS */, _hoisted_49), _createElementVNode(\"path\", {\n                      fill: _ctx.colors['Abdomen'],\n                      onClick: _cache[40] || (_cache[40] = $event => $options.pathClicked('Abdomen')),\n                      id: \"Abdomen\",\n                      d: \"m 3.5133365,30.595379 3.11202,-1.40603 -0.0937,2.27965 -2.80138,1.4364 z m -1.93508,1.6685 1.29355,0.72139 -0.14997,-1.70899 z m 1.05303,-1.637 -2.47930989,-1.03259 0.93360999,2.52148 z m -1.5316399,1.73729 1.6900499,1.03372 0.28871,2.06743 -1.64881,-1.07515 z m 2.9114199,1.10421 0.0623,1.62387 2.30327,-0.49961 0.12448,-2.21703 z m 0.15561,2.40432 -0.0309,1.99844 2.20973,0.59353 0.0311,-3.1227 z m -2.6546,-0.98516 1.48384,1.0339 0.20622,2.10905 -1.64975,-1.32355 z m 5.23795,14.47521 -0.60647,-5.91209 -0.015,-3.84879 -2.18479,-1.07533 -0.24746,7.03017 z m 0.41581,-5.7e-4 0.60628,-5.91209 0.0154,-3.84915 2.18404,-1.07515 0.2474605,7.03017 z m -4.00588,-10.21155 -1.81341,-1.36479 -0.15748,1.83347 -1.28567989,2.37432 1.98044989,2.73595 1.03109,0.16554 0.37119,-3.88721 z m 7.2429405,-8.55562 -3.1120205,-1.40604 0.0937,2.27965 2.8011905,1.43603 z m 1.93471,1.66849 -1.29355,0.7212 0.14997,-1.70898 z m -1.05303,-1.63718 2.47968,-1.03241 -0.9336,2.52093 z m 1.53164,1.73729 -1.69005,1.03372 -0.28871,2.0678 1.64975,-1.07533 z m -2.9114305,1.10421 -0.0622,1.62387 -2.30308,-0.49961 -0.12448,-2.21722 z m -0.1556,2.4045 0.0311,1.99844 -2.20953,0.59391 -0.0311,-3.1227 z m 2.6545905,-0.98535 -1.48383,1.03372 -0.20622,2.10905 1.64862,-1.32355 z m -1.64787,4.26366 1.81341,-1.36479 0.15748,1.83347 1.28642,2.37338 -1.98044,2.73652 -1.03109,0.16554 -0.37026,-3.88816 z\"\n                    }, null, 8 /* PROPS */, _hoisted_50), _createElementVNode(\"path\", {\n                      fill: _ctx.colors['Pelvis'],\n                      onClick: _cache[41] || (_cache[41] = $event => $options.pathClicked('Pelvis')),\n                      id: \"Pelvis\",\n                      d: \"m 0.73979661,43.812429 v 4.21363 l 2.94516989,5.8253 1.86028,5.78349 -0.19366,-4.0072 z m 3.24886989,13.42559 0.0647,0.15485 1.21294,2.90207 -0.78307,7.18803 -1.23618,-0.66102 1.0714,-6.69273 z m 1.52977,-7.75493 0.0221,-0.0277 -0.14866,-0.37945 -3.10172,-3.40449 -0.23283,-0.0825 2.05918,5.32009 z m -1.17263,2.01833 1.27705,3.29948 0.42631,-4.04862 -0.25196,-0.64303 z m 4.05219,-2.01795 -0.0221,-0.0281 0.14867,-0.37926 3.1017105,-3.40449 0.23246,-0.0825 -2.0584305,5.3199 z m 1.17263,2.01795 -1.27706,3.29948 -0.42631,-4.04843 0.25197,-0.64303 z m 3.6065705,-7.6888 v 4.21363 l -2.94574,5.82511 -1.8602705,5.78349 0.19365,-4.0072 z m -3.2494405,13.42596 -0.0649,0.15467 -1.21294,2.90207 0.78325,7.18803 1.2361905,-0.66122 -1.0714005,-6.69272 z\"\n                    }, null, 8 /* PROPS */, _hoisted_51), _createElementVNode(\"path\", {\n                      fill: _ctx.colors['Head'],\n                      onClick: _cache[42] || (_cache[42] = $event => $options.pathClicked('Head')),\n                      id: \"Head\",\n                      d: \"m 39.271427,10.801559 0.44208,-0.14964 0.16111,0.16427 1.48163,4.04751 2.32401,1.45118 2.39971,-1.52387 0.97577,-3.68969 0.52752,-0.55908 0.23367,0.0981 0.24198,-3.3446699 -2.03129,-2.31103 -2.84509,-0.51629 -2.20422,0.52915 -1.93631,2.63077 z m -28.40863,0.34495 0.0203,-2.2074699 -3.9668905,-2.7637 -3.74099,2.23559 -0.006,2.6352799 -0.60741,0.0403 0.27408,1.82447 0.97635,0.33932 0.44244,2.18029 1.82222,2.06556 2.03518,-0.0607 1.79223,-1.94408 0.3595705,-2.24066 0.97616,-0.33932 0.25159,-1.78416 z m -8.0771905,-0.34495 -0.0482,-2.5908499 4.20648,-2.46806 4.4276905,2.95361 -0.0405,1.9440799 0.24197,-3.3446699 -2.0312905,-2.31103 -2.84508,-0.51629 -2.20423,0.52915 -1.9363,2.63077 z\"\n                    }, null, 8 /* PROPS */, _hoisted_52), _createElementVNode(\"path\", {\n                      fill: _ctx.colors['Neck'],\n                      onClick: _cache[43] || (_cache[43] = $event => $options.pathClicked('Neck')),\n                      id: \"Neck\",\n                      d: \"m 43.483667,16.548089 -2.35767,-1.55045 -1.47119,-3.95143 -0.60741,0.0403 0.27409,1.82447 0.97635,0.33932 0.7613,2.21572 0.33017,1.06849 0.0895,2.14894 1.16448,0.008 0.10563,-0.70833 0.54716,-0.0606 z m 1.01793,1.47595 0.23768,0.64982 1.38107,-0.004 0.01,-2.38784 0.25971,-0.79061 0.57215,-2.1698 0.76359,-0.41018 0.25158,-1.78416 -0.62859,0.0193 -1.08488,3.89981 -2.39725,1.46684 0.2768,1.48507 z m -40.0829605,-1.67052 1.64975,2.35202 0.74426,2.62159 -1.73486,-1.38354 -0.86649,-2.97104 z m 5.08047,0 -1.64975,2.35202 -0.74538,2.62234 1.73486,-1.38354 0.86649,-2.97104 z\"\n                    }, null, 8 /* PROPS */, _hoisted_53), _createElementVNode(\"path\", {\n                      fill: _ctx.colors['Extremities'],\n                      onClick: _cache[44] || (_cache[44] = $event => $options.pathClicked('Extremities')),\n                      id: \"Extremities\",\n                      d: \"m 45.133277,68.516999 1.20605,3.01461 -0.70737,0.26558 -0.89755,3.51771 0.55802,-4.01191 z m 5.08496,-3.15003 -0.63355,1.8609 -0.16813,2.03261 -0.61313,1.93117 0.90584,-0.0851 0.28534,2.15982 z m -4.3014,6.58834 -1.27664,4.99697 0.28984,3.02284 0.67869,10.06546 1.66325,0.63506 3.504,-11.96959 -1.24986,-7.17525 z m -0.54053,20.8287 -0.85194,1.3581 -0.37189,0.79238 0.15589,1.21774 0.76983,0.74446 1.51186,0.12543 1.12989,-0.29192 0.24225,-0.95894 -0.80765,-1.30405 0.22563,-0.85987 -0.29679,-0.84153 0.0194,-1.81524 -1.53568,-0.54817 z m 1.19598,0.4675 -0.15943,1.25776 0.6023,0.97431 m 0.54436,0.29544 -1.06474,0.40084 -1.55326,-0.65137 m 3.56525,-39.90247 -3.97962,-1.70224 -0.56389,0.27131 -0.0528,1.79746 -0.075,4.64669 1.97837,6.04282 -0.47612,1.41403 1.42813,3.29446 1.7661,-0.30111 0.50079,-2.11605 0.1695,-1.75674 2.42102,-8.15763 0.009,-3.68308 z m 4.26465,-23.93238 -0.32785,-1.05121 -1.27383,-2.05489 1.38708,-2.96476 2.28579,0.91634 1.83971,1.74245 0.53937,1.78549 -0.26073,4.30868 z m 2.64394,15.3417 1.51839,0.0828 0.78033,-0.65476 1.16673,2.18281 0.79187,3.34623 -0.49843,0.21064 -0.55144,-2.21453 -0.50541,0.24292 0.30356,2.5012 -0.62882,0.23021 -0.36124,-2.50014 -0.56203,0.16666 0.16765,2.77019 -0.77603,0.30634 -0.19719,-2.87245 -0.45732,-0.0278 -0.22215,2.64829 -0.66539,0.24928 0.0254,-4.56692 -0.3374,-0.20146 -1.38845,1.65469 -0.32098,-0.35041 0.76973,-2.03928 z m 0.97685,-0.1799 1.43335,-0.74932 0.29002,-7.01054 c 0,0 -0.65,-2.77789 -0.64401,-3.06126 l -0.61212,-1.21783 -3.98124,-2.57566 1.0222,1.93525 -0.38967,4.82212 1.8218,7.69308 z m -13.45979,-5.10285 0.14418,2.97292 1.15984,-0.0241 0.048,-2.96488 2.80867,-0.81981 2.34029,-0.7541 1.34121,3.73319 -4.77886,1.36455 -2.33301,1.2158 -2.37536,-1.2333 -5.45663,-1.37716 1.51961,-3.95743 z m -7.0756,2.37946 5.48374,1.86457 2.27386,1.3378 2.74195,-1.74412 4.51804,-1.28077 0.90009,2.29721 0.675,3.4346 -0.81272,5.02838 -2.82636,0.16819 -4.11256,-1.67581 -1.00814,0.39118 -0.95849,-0.39888 -4.44053,1.94411 -2.77023,-0.51478 -0.95181,-6.15325 0.36754,-2.7864 z m 6.4333,24.38495 -1.20605,3.01461 0.70738,0.26558 0.89754,3.51771 -0.55801,-4.01191 z m -5.08496,-3.15003 0.63355,1.8609 0.16813,2.03261 0.61314,1.93117 -0.90585,-0.0851 -0.28534,2.15982 z m 4.3014,6.58834 1.27664,4.99697 -0.28984,3.02284 -0.67869,10.06546 -1.66325,0.63506 -3.50399,-11.96959 1.24985,-7.17525 z m 0.54053,20.8287 0.85194,1.3581 0.37189,0.79238 -0.15588,1.21774 -0.76984,0.74446 -1.51185,0.12543 -1.1299,-0.29192 -0.24225,-0.95894 0.80765,-1.30405 -0.22562,-0.85987 0.29679,-0.84153 -0.0194,-1.81524 1.53568,-0.54817 z m -1.19598,0.4675 0.15943,1.25776 -0.6023,0.97431 m -0.54436,0.29544 1.06474,0.40084 1.55326,-0.65137 m -4.19331,-39.53466 4.55099,-2.03879 0.63802,0.23079 0.0353,1.80672 0.075,4.64669 -1.97837,6.04282 0.47612,1.41403 -1.42812,3.29446 -1.76611,-0.30111 -0.50079,-2.11605 -0.1695,-1.75674 -2.42102,-8.15763 -0.34279,-3.64687 z m -3.98895,-24.48137 0.4297,-1.4164 1.30458,-1.68577 -1.39393,-2.96155 -2.28367,0.92162 -1.83567,1.7467 -0.53524,1.78673 0.27068,4.30806 z m -2.46869,15.35539 -1.5182,0.0863 -0.78184,-0.65295 -1.16168,2.1855 -0.78414,3.34805 0.49892,0.20949 0.54632,-2.2158 0.50597,0.24175 -0.29779,2.5019 0.62936,0.22875 0.35546,-2.50096 0.56242,0.16536 -0.16126,2.77057 0.77674,0.30455 0.19056,-2.87291 0.45724,-0.0289 0.22827,2.64778 0.66597,0.24774 -0.0359,-4.56685 0.33693,-0.20224 1.39227,1.65147 0.32017,-0.35115 -0.77444,-2.03749 z m -0.97726,-0.17765 -1.43509,-0.746 -0.30622,-7.00985 c 0,0 0.64359,-2.77938 0.63694,-3.06274 l 0.6093,-1.21924 3.62552,-2.56583 -0.68276,1.9919 0.41561,4.74788 -1.80402,7.69727 z m -12.59945,1.31596 1.5198,0.0506 0.76631,-0.67111 1.21262,2.15766 0.86245,3.32873 -0.49386,0.22113 -0.59815,-2.20238 -0.50016,0.25356 0.35639,2.49422 -0.62382,0.24345 -0.41402,-2.49194 -0.55839,0.17851 0.2262,2.76603 -0.76938,0.32268 -0.25788,-2.86764 -0.4578,-0.0181 -0.16611,2.6524 -0.65997,0.26329 -0.0712,-4.56643 -0.34158,-0.19428 -1.35316,1.68368 -0.32832,-0.34355 0.72644,-2.0551 z m 1.18497,-16.19302 -0.005,3.09419 0.57959,1.91184 0.54538,-2.41185 z m -23.9347704,16.19302 -1.5198,0.0506 -0.76631,-0.67112 -1.21262,2.15767 -0.86245,3.32873 0.49386,0.22113 0.59815,-2.20238 0.50016,0.25356 -0.35639,2.49422 0.62382,0.24345 0.41402,-2.49194 0.55839,0.17851 -0.2262,2.76603 0.76938,0.32268 0.25788,-2.86764 0.4578,-0.0181 0.16611,2.65239 0.65997,0.2633 0.0712,-4.56643 0.34158,-0.19428 1.35316,1.68367 0.32832,-0.34354 -0.72644,-2.0551 z m -1.18497,-16.19302 0.005,3.09419 -0.57959,1.91184 -0.54539,-2.41185 z m 7.0789299,37.41425 -0.12448,1.12295 0.87118,1.08171 0.29058,1.70599 0.58116,0.24933 0.49774,-2.57866 0.33182,-0.91486 -0.29058,-0.58247 z m 3.85854,0.0832 -0.62241,1.74685 -1.32767,2.57867 0.33182,2.37095 0.95423,-2.66209 0.78832,-1.4964 z m -4.97867989,-2.37058 0.95422989,5.11609 -0.62239989,-0.33313 -0.49793,1.6638 z m 4.27340989,7.94395 -0.29058,0.91486 -0.62241,3.86828 -0.0829,5.15733 0.87174,5.03304 -0.0418,-6.44714 0.91298,-2.57848 0.1243,-2.82837 z m -1.99151,2.32914 0.20735,7.73637 1.65968,6.23904 -1.80497,-0.85299 -3.00797989,-10.83584 1.03728,-6.82095 z m 2.98717,15.09818 -0.12448,3.45228 -0.29058,1.20637 h -0.87118 l -0.24877,-0.83181 -0.29059,-0.0416 0.0623,0.83181 -1.09934,-0.33333 -0.29058,-0.16629 -1.2448,-0.27033 -0.0412,-0.97747 1.2031899,-2.03781 0.82975,-1.04009 2.03294,-0.83181 z m -6.16386989,-37.46914 0.15504,4.75053 2.40262989,6.60968 -0.73638,1.90021 -2.3640099,-8.34435 z m 0.58117,-11.60768 0.15503,4.00684 -1.31754001,7.93154 -0.61978,-6.40308 z m 0.38769,5.1223 2.75150989,6.07239 0.61997,4.87425 -1.16232,6.85771 -2.51904989,-6.98163 -0.15504,-7.18801 z m 12.16631039,20.87063 0.1243,1.12295 -0.87118,1.08171 -0.29058,1.70599 -0.58116,0.24933 -0.49774,-2.57866 -0.33182,-0.91486 0.29058,-0.58247 z m -3.8585305,0.0832 0.6224,1.74685 1.3273005,2.57867 -0.33182,2.37095 -0.9542305,-2.66209 -0.78738,-1.49734 z m 4.9781105,-2.37039 -0.95423,5.11609 0.62241,-0.33295 0.49773,1.66381 z m -4.2728405,7.94394 0.29058,0.91486 0.6224005,3.8681 0.0829,5.15733 -0.8713605,5.03304 0.0412,-6.44714 -0.91242,-2.57848 -0.12561,-2.82837 z m 1.9915005,2.32915 -0.20753,7.73637 -1.6594905,6.23904 1.8047805,-0.853 3.00816,-10.83583 -1.03727,-6.82095 z m -2.9869805,15.09817 0.1243,3.45228 0.28983,1.20638 h 0.87136 l 0.24897,-0.83181 0.2905805,-0.0416 -0.0624,0.83181 1.09914,-0.33332 0.29058,-0.16629 1.24444,-0.27033 0.0416,-0.97748 -1.20319,-2.03743 -0.82974,-1.0399 -2.0329405,-0.83181 z m 6.1631205,-37.46932 -0.15504,4.75091 -2.40263,6.60949 0.7362,1.90021 2.36401,-8.34435 z m -0.58154,-11.60825 -0.15485,4.00722 1.31793,7.93154 0.61977,-6.40308 z m -0.38731,5.12268 -2.75152,6.07258 -0.62015,4.87425 1.16232,6.85771 2.51886,-6.98144 0.15504,-7.18764 z m -17.8749004,-10.94443 -1.30083,10.28927 1.10778,0.01 1.89387,-7.99609 -0.19174,-4.53719 z m -1.21978,-1.94971 0.58728,2.58635 -1.11875,9.15614 -0.55849,-0.21663 -0.2304,-6.77018 z m 0.71916,-0.2047 0.33838,1.70499 1.81931,-2.54418 0.66289,-1.26895 z m 2.8527,-2.6096 c 0.0259,-0.0144 0.0536,-0.0254 0.0824,-0.0324 l 1.48332001,-4.95503 -1.00455001,-2.08428 -1.65509,1.74532 -2.23034,6.67667 -0.0415,0.93739 c 1.06528,-0.84215 2.18961,-1.60679 3.36433,-2.28803 z m -1.6945,-5.75654 -1.64891,6.43421 0.36468,-4.92266 z m 21.7225804,10.52055 1.30083,10.28927 -1.10778,0.01 -1.89387,-7.99609 0.19174,-4.53719 z m 1.21978,-1.94971 -0.58729,2.58635 1.11876,9.15614 0.55849,-0.21663 0.2304,-6.77018 z m -0.55354,-0.2047 -0.33838,1.70499 -1.81932,-2.54418 -0.6629,-1.26895 z m -2.85271,-2.6096 c -0.0259,-0.0144 -0.0536,-0.0254 -0.0824,-0.0324 l -1.48333,-4.95503 1.00456,-2.08428 1.65511,1.74532 2.23034,6.67667 0.0415,0.93739 c -1.06528,-0.84215 -2.18962,-1.60679 -3.36434,-2.28803 z m 1.6945,-5.75654 1.64893,6.43421 -0.36469,-4.92266 z m -13.8386705,-9.20021 -3.55745989,1.97916 -0.72653,-0.35074 z m 0.107,0.43288 0.37119,1.73073 -2.18459,0.53561 -1.40114989,-0.49436 z m -3.98148989,1.97595 -0.75814,-0.41 -2.40806001,1.66799 -1.17364,1.50707 -0.62662,1.56259 0.0464,3.70195 1.3284,-1.72153 -0.0407,-2.59376 0.48843,-0.5005 c 0,0 3.09777001,-3.19057 3.14370001,-3.214 z m 0.2409,0.10873 c 0.002,0.0525 -3.32987001,3.54733 -3.32987001,3.54733 l -0.10067,3.10396 1.15426,-1.97782 2.22547001,-0.94804 1.56574989,-2.88481 z m 10.05660039,-2.51756 3.55748,1.97916 0.72653,-0.35074 z m -0.107,0.43288 -0.3711905,1.73073 2.1846005,0.53561 1.40116,-0.49436 z m 3.98151,1.97595 0.75814,-0.41 2.40806,1.66799 1.17364,1.50707 0.62662,1.5626 -0.0464,3.70194 -1.3284,-1.72153 0.0407,-2.59376 -0.48842,-0.50049 c 0,0 -3.09778,-3.19058 -3.14371,-3.21401 z m -0.2409,0.10873 c -10e-4,0.0525 3.32987,3.54733 3.32987,3.54733 l 0.10067,3.10396 -1.15426,-1.97782 -2.22547,-0.94804 -1.56576,-2.88481 z\"\n                    }, null, 8 /* PROPS */, _hoisted_54), _createElementVNode(\"path\", {\n                      fill: _ctx.colors['Back'],\n                      onClick: _cache[45] || (_cache[45] = $event => $options.pathClicked('Back')),\n                      id: \"Back\",\n                      d: \"m 40.739147,19.072339 0.063,-2.62462 -0.71441,1.15181 -4.37994,1.49796 4.97857,8.36746 1.83043,5.08188 -0.21949,-13.55362 z m -7.42423,1.95717 -1.57473,1.56517 -0.81404,2.06905 -0.38603,2.52859 1.83679,-1.23927 2.76223,-1.15538 1.84691,3.4342 1.13679,5.49715 0.0767,5.8593 4.07066,1.10938 -0.10355,-7.94098 -1.94107,-4.90022 -5.04395,-8.19334 z m 13.23814,-1.85796 -0.063,-2.62463 0.71441,1.15181 4.37994,1.49796 -4.97857,8.36746 -1.83043,5.08189 0.21949,-13.55362 z m 7.42423,1.95716 1.57473,1.56518 0.81404,2.06904 0.0384,2.52859 -1.48921,-1.23926 -2.76223,-1.15539 -1.84691,3.4342 -1.13679,5.49715 -0.0767,5.8593 -4.07066,1.10938 0.10355,-7.94098 1.94107,-4.90021 5.04395,-8.19335 z m -11.12961,-1.764514 0.53876,25.33066 0.48967,-0.0297 0.65658,-25.3387 -0.28147,-0.84188 -1.25059,-4.9e-4 z\"\n                    }, null, 8 /* PROPS */, _hoisted_55)]))]),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_v_col, null, {\n                    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.action, (item, index) => {\n                      return _openBlock(), _createElementBlock(\"div\", {\n                        key: index\n                      }, [_createCommentVNode(\"v-for=\\\"(exp, index) in action\\\" :key=\\\"index\\\"\"), _hoisted_56, _createVNode(_component_v_select, {\n                        modelValue: item.region,\n                        \"onUpdate:modelValue\": $event => item.region = $event,\n                        label: \"Select Body Region\",\n                        items: _ctx.body_regions,\n                        onChange: $options.changeColors()\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"items\", \"onChange\"]), _createVNode(_component_v_autocomplete, {\n                        modelValue: item.type,\n                        \"onUpdate:modelValue\": $event => item.type = $event,\n                        label: \"Select Injury Type\",\n                        items: _ctx.patient_body[item.region]\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"items\"]), _createVNode(_component_v_row, null, {\n                        default: _withCtx(() => [_createVNode(_component_v_col, null, {\n                          default: _withCtx(() => [item.type === 'Tension Pneumothorax' ? (_openBlock(), _createBlock(_component_v_select, {\n                            key: 0,\n                            modelValue: item.side,\n                            \"onUpdate:modelValue\": $event => item.side = $event,\n                            label: \"Select side\",\n                            items: _ctx.sides,\n                            style: {\n                              \"width\": \"200px\"\n                            },\n                            class: \"align-left\"\n                          }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"items\"])) : _createCommentVNode(\"v-if\", true)]),\n                          _: 2 /* DYNAMIC */\n                        }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_col, null, {\n                          default: _withCtx(() => [item.type === 'Tension Pneumothorax' ? (_openBlock(), _createBlock(_component_v_select, {\n                            key: 0,\n                            modelValue: item.openclose,\n                            \"onUpdate:modelValue\": $event => item.openclose = $event,\n                            label: \"Open or Closed\",\n                            items: _ctx.open_closed,\n                            class: \"align-right\",\n                            style: {\n                              \"width\": \"200px\"\n                            }\n                          }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"items\"])) : _createCommentVNode(\"v-if\", true)]),\n                          _: 2 /* DYNAMIC */\n                        }, 1024 /* DYNAMIC_SLOTS */)]),\n\n                        _: 2 /* DYNAMIC */\n                      }, 1024 /* DYNAMIC_SLOTS */), item.type === 'Hemorrhage' ? (_openBlock(), _createBlock(_component_v_select, {\n                        key: 0,\n                        modelValue: item.compartment,\n                        \"onUpdate:modelValue\": $event => item.compartment = $event,\n                        label: \"Select compartment\",\n                        items: _ctx.hemorrhage_regions[item.region]\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"items\"])) : _createCommentVNode(\"v-if\", true), item.type === 'Hemorrhage' ? (_openBlock(), _createBlock(_component_v_text_field, {\n                        key: 1,\n                        modelValue: item.hemrate,\n                        \"onUpdate:modelValue\": $event => item.hemrate = $event,\n                        label: \"Initial Rate\",\n                        suffix: \"mL/min\"\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])) : _createCommentVNode(\"v-if\", true), item.type === 'Brain Injury' ? (_openBlock(), _createBlock(_component_v_select, {\n                        key: 2,\n                        modelValue: item.braininjurytype,\n                        \"onUpdate:modelValue\": $event => item.braininjurytype = $event,\n                        label: \"Select type\",\n                        items: _ctx.brain_injury_types\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"items\"])) : _createCommentVNode(\"v-if\", true), item.type === 'Burn Wound' ? (_openBlock(), _createBlock(_component_v_text_field, {\n                        key: 3,\n                        modelValue: item.burnsurfacearea,\n                        \"onUpdate:modelValue\": $event => item.burnsurfacearea = $event,\n                        label: \"Enter Fraction of Total Body Surface Area Affected\",\n                        hint: \"Enter a decimal between 0 and 1.\"\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])) : _createCommentVNode(\"v-if\", true), item.type != 'Hemorrhage' && item.type != 'Burn Wound' && item.type != 'Cardiac Arrest' ? (_openBlock(), _createBlock(_component_v_slider, {\n                        key: 4,\n                        modelValue: item.severity,\n                        \"onUpdate:modelValue\": $event => item.severity = $event,\n                        label: \"Severity (0-1)\",\n                        class: \"align-center\",\n                        max: _ctx.sev_max,\n                        min: _ctx.sev_min,\n                        step: 0.1\n                      }, {\n                        append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                          modelValue: item.severity,\n                          \"onUpdate:modelValue\": $event => item.severity = $event,\n                          \"hide-details\": \"\",\n                          \"single-line\": \"\",\n                          density: \"compact\",\n                          style: {\n                            \"width\": \"90px\"\n                          }\n                        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])]),\n                        _: 2 /* DYNAMIC */\n                      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\", \"max\", \"min\", \"step\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_btn, {\n                        class: \"text-right\",\n                        onClick: $event => $options.removeAction(index)\n                      }, {\n                        default: _withCtx(() => [_createTextVNode(\"Remove Injury\")]),\n                        _: 2 /* DYNAMIC */\n                      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _hoisted_57, _hoisted_58]);\n                    }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_v_btn, {\n                      onClick: $options.addAction,\n                      color: \"#3c2d70\",\n                      style: {\n                        \"color\": \"white\"\n                      }\n                    }, {\n                      default: _withCtx(() => [_createTextVNode(\"Add Injury\")]),\n                      _: 1 /* STABLE */\n                    }, 8 /* PROPS */, [\"onClick\"]), _createCommentVNode(\" <v-form\\r\\n                    ref=\\\"form\\\"\\r\\n                    v-model=\\\"valid\\\"\\r\\n                    lazy-validation>\\r\\n                    <v-combobox v-for=\\\"(item, index) in name\\\"\\r\\n                      :key=\\\"index\\\"\\r\\n                      :label=\\\"Object.keys(item)[0]\\\"\\r\\n                      :items='patient_body[Object.keys(item)[0]]'\\r\\n                      v-model=\\\"item[Object.keys(item)[0]]\\\" \\r\\n                      multiple\\r\\n                      chips> \\r\\n                    </v-combobox>\\r\\n                  </v-form> \")]),\n                    _: 1 /* STABLE */\n                  })]),\n\n                  _: 1 /* STABLE */\n                }), _hoisted_59, _createVNode(_component_v_slider, {\n                  modelValue: _ctx.action_time,\n                  \"onUpdate:modelValue\": _cache[48] || (_cache[48] = $event => _ctx.action_time = $event),\n                  label: \"Medical Responder Time to Scene\",\n                  class: \"align-center\",\n                  max: _ctx.time_max,\n                  min: _ctx.time_min,\n                  step: 0.5\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.action_time,\n                    \"onUpdate:modelValue\": _cache[46] || (_cache[46] = $event => _ctx.action_time = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    items: _ctx.time_units,\n                    style: {\n                      \"width\": \"90px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"items\"]), _createVNode(_component_v_select, {\n                    modelValue: _ctx.action_unit,\n                    \"onUpdate:modelValue\": _cache[47] || (_cache[47] = $event => _ctx.action_unit = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    items: _ctx.time_units,\n                    style: {\n                      \"width\": \"90px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"items\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\", \"step\"]), _createVNode(_component_v_row, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_col, {\n                    cols: \"auto\",\n                    class: \"mr-2\"\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_v_dialog, {\n                      modelValue: _ctx.dialog1,\n                      \"onUpdate:modelValue\": _cache[51] || (_cache[51] = $event => _ctx.dialog1 = $event),\n                      persistent: \"\",\n                      width: \"auto\"\n                    }, {\n                      activator: _withCtx(({\n                        props\n                      }) => [_createVNode(_component_v_btn, _mergeProps({\n                        color: \"success\"\n                      }, props), {\n                        default: _withCtx(() => [_createTextVNode(\" Submit \")]),\n                        _: 2 /* DYNAMIC */\n                      }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */)]),\n\n                      default: _withCtx(() => [_createVNode(_component_v_card, null, {\n                        default: _withCtx(() => [_createVNode(_component_v_card_title, {\n                          class: \"text-h5\"\n                        }, {\n                          default: _withCtx(() => [_createTextVNode(\" Submission Confirmation \")]),\n                          _: 1 /* STABLE */\n                        }), _createVNode(_component_v_card_text, null, {\n                          default: _withCtx(() => [_createTextVNode(\"Are you sure you would like to submit your form?\")]),\n                          _: 1 /* STABLE */\n                        }), _createVNode(_component_v_card_actions, null, {\n                          default: _withCtx(() => [_createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n                            color: \"green-darken-1\",\n                            variant: \"text\",\n                            onClick: _cache[49] || (_cache[49] = $event => _ctx.dialog1 = false)\n                          }, {\n                            default: _withCtx(() => [_createTextVNode(\" Dismiss \")]),\n                            _: 1 /* STABLE */\n                          }), _createVNode(_component_v_btn, {\n                            disabled: !_ctx.valid,\n                            color: \"success\",\n                            class: \"mr-4\",\n                            onClick: _cache[50] || (_cache[50] = $event => {\n                              $options.saveBiogearsFiles();\n                              _ctx.dialog1 = false;\n                            })\n                          }, {\n                            default: _withCtx(() => [_createTextVNode(\" Submit \")]),\n                            _: 1 /* STABLE */\n                          }, 8 /* PROPS */, [\"disabled\"])]),\n                          _: 1 /* STABLE */\n                        })]),\n\n                        _: 1 /* STABLE */\n                      })]),\n\n                      _: 1 /* STABLE */\n                    }, 8 /* PROPS */, [\"modelValue\"])]),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_v_col, {\n                    cols: \"auto\"\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_v_dialog, {\n                      modelValue: _ctx.dialog,\n                      \"onUpdate:modelValue\": _cache[54] || (_cache[54] = $event => _ctx.dialog = $event),\n                      persistent: \"\",\n                      width: \"auto\"\n                    }, {\n                      activator: _withCtx(({\n                        props\n                      }) => [_createVNode(_component_v_btn, _mergeProps({\n                        color: \"error\"\n                      }, props), {\n                        default: _withCtx(() => [_createTextVNode(\" Reset Form \")]),\n                        _: 2 /* DYNAMIC */\n                      }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */)]),\n\n                      default: _withCtx(() => [_createVNode(_component_v_card, null, {\n                        default: _withCtx(() => [_createVNode(_component_v_card_title, {\n                          class: \"text-h5\"\n                        }, {\n                          default: _withCtx(() => [_createTextVNode(\" Reset Confirmation \")]),\n                          _: 1 /* STABLE */\n                        }), _createVNode(_component_v_card_text, null, {\n                          default: _withCtx(() => [_createTextVNode(\"Are you sure you would like to reset your form?\")]),\n                          _: 1 /* STABLE */\n                        }), _createVNode(_component_v_card_actions, null, {\n                          default: _withCtx(() => [_createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n                            color: \"green-darken-1\",\n                            variant: \"text\",\n                            onClick: _cache[52] || (_cache[52] = $event => _ctx.dialog = false)\n                          }, {\n                            default: _withCtx(() => [_createTextVNode(\" Dismiss \")]),\n                            _: 1 /* STABLE */\n                          }), _createVNode(_component_v_btn, {\n                            color: \"error\",\n                            class: \"mr-4\",\n                            onClick: _cache[53] || (_cache[53] = $event => {\n                              $options.reset();\n                              _ctx.dialog = false;\n                            })\n                          }, {\n                            default: _withCtx(() => [_createTextVNode(\" Reset Form \")]),\n                            _: 1 /* STABLE */\n                          })]),\n\n                          _: 1 /* STABLE */\n                        })]),\n\n                        _: 1 /* STABLE */\n                      })]),\n\n                      _: 1 /* STABLE */\n                    }, 8 /* PROPS */, [\"modelValue\"])]),\n                    _: 1 /* STABLE */\n                  })]),\n\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_60, _hoisted_61, _createVNode(_component_v_row, {\n              class: \"justify-center\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[55] || (_cache[55] = $event => $options.nextTab('option-3')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-left\"\n                })]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_62]),\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":"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","names":["_imports_0","_createElementVNode","style","class","href","width","height","viewBox","version","id","xmlns","_createVNode","_component_v_toolbar","color","_component_v_toolbar_title","_component_v_tabs","large","_ctx","_component_v_tab","value","_component_v_icon","start","_component_v_main","_component_v_container","_component_v_window","_component_v_form","ref","_component_v_window_item","_component_v_card","flat","_createCommentVNode","_component_v_card_title","fluid","_component_v_row","align","justify","_component_v_col","cols","_component_v_img","src","alt","_component_v_card_text","_hoisted_1","_component_v_expansion_panels","_component_v_expansion_panel","title","_component_v_expansion_panel_text","_hoisted_2","_component_v_list","_component_v_list_item","_component_v_list_item_title","_hoisted_8","_hoisted_18","_component_v_btn","onClick","$options","density","icon","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_component_v_text_field","rules","label","required","_component_v_select","items","v","_component_v_slider","max","min","step","append","type","suffix","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","hint","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_createBlock","clearable","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","sm","md","_createElementBlock","_hoisted_47","_hoisted_48","fill","d","_Fragment","item","index","key","_hoisted_56","region","onChange","_component_v_autocomplete","side","openclose","compartment","hemrate","braininjurytype","burnsurfacearea","severity","_hoisted_57","_hoisted_58","_hoisted_59","_component_v_dialog","persistent","activator","props","_mergeProps","_component_v_card_actions","_component_v_spacer","variant","disabled","_hoisted_60","_hoisted_61","_hoisted_62"],"sourceRoot":"","sources":["C:\\Users\\sanik\\Downloads\\capstone\\MoHSES-Scenario-User-Interface\\src\\views\\BioGearsView.vue"],"sourcesContent":["<template>\r\n\t<v-toolbar color=\"#3c2d70\" style=\"color: white\">\r\n\t\t<v-toolbar-title>BioGears Scenario Creation Tool</v-toolbar-title>\r\n\t</v-toolbar>\r\n\t<v-tabs large v-model=\"tab\" color=\"#3c2d70\">\r\n\t\t<v-tab value=\"home\">\r\n\t\t\t<v-icon start> mdi-home </v-icon> About this page </v-tab>\r\n\t\t<v-tab value=\"option-1\">\r\n\t\t\t<v-icon start> mdi-account </v-icon> Patient Information </v-tab>\r\n\t\t<v-tab value=\"option-2\">\r\n\t\t\t<v-icon start> mdi-access-point </v-icon> Patient Vitals </v-tab>\r\n\t\t<v-tab value=\"option-3\">\r\n\t\t\t<v-icon start> mdi-access-point </v-icon> Environment Properties </v-tab>\r\n\t\t<v-tab value=\"option-4\">\r\n\t\t\t<v-icon start> mdi-list-status </v-icon> Configure Patient Scenario </v-tab>\r\n\t</v-tabs>\r\n\t<v-main class=\"bg-grey-lighten-3\">\r\n\t\t<v-container>\r\n\t\t\t<v-window v-model=\"tab\" class=\"mt-n12\">\r\n\t\t\t\t<v-form ref=\"form\" v-model=\"valid\" lazy-validation>\r\n\t\t\t\t\t<v-window-item value=\"home\">\r\n\t\t\t\t\t\t<v-card class=\"bg-grey-lighten-3\" flat> <!--bg-yellow-lighten-4-->\r\n\t\t\t\t\t\t\t<v-card-title class=\"text-center\" style=\"font-size: 36px\">Welcome to the BioGears Scenario Creation Tool!</v-card-title>\r\n\t\t\t\t\t\t\t<v-container fluid>\r\n\t\t\t\t\t\t\t\t<v-row align=\"center\" justify=\"center\">\r\n\t\t\t\t\t\t\t\t\t<v-col cols=\"12\">\r\n\t\t\t\t\t\t\t\t\t\t<v-img src=\"@/assets/crest_vh_gold_purple_dt.png\" alt=\"Your image\" class=\"mx-auto\" width=\"80%\" height=\"80%\" /> </v-col>\r\n\t\t\t\t\t\t\t\t</v-row>\r\n\t\t\t\t\t\t\t</v-container>\r\n\t\t\t\t\t\t\t<v-card-text>\r\n\t\t\t\t\t\t\t\t<p style=\"font-size: 14px\">This tool is designed to simplify the process of generating BioGears Scenario XML files. First, input patient information and healthy vitals to define a BioGears patient. Then configure injuries to define a specific patient scenario and click Submit. This will locally download BioGears-compatible Patient and Scenario XML files, which can then be inputted into BioGears via command line. After running BioGears with this file, user will have a MoHSES-compatible state file with data on the simulated injured patient's vitals.</p>\r\n\t\t\t\t\t\t\t</v-card-text>\r\n\t\t\t\t\t\t\t<v-card flat>\r\n                <v-card-text>\r\n                  <v-expansion-panels>\r\n                    <v-expansion-panel class='font-weight-bold' style='font-size: 25px' title=\"BioGears Guide\">\r\n                      <v-expansion-panel-text class = \"text-h6\">\r\n                      <!-- <div class=\"text-h4\">BioGears Guide</div> -->\r\n                      <p class='font-weight-regular' style=\"font-size: 18px\">\r\n                        After generating the Custom Patient and Scenario files using the BioGears Scenario Creation Tool tab, users must run BioGears with the files in order to generate\r\n                        a MoHSES-compatible state file. The following are instructions on how to run BioGears:\r\n                      </p>\r\n                      <v-list>\r\n                        <v-list-item>\r\n                          <v-list-item-title style=\"font-size: 18px\" class='font-weight-bold'>\r\n                            1. Build BioGears\r\n                          </v-list-item-title>\r\n                          <v-list>\r\n                            <v-list-item>\r\n                              Create a folder in your Desktop titled 'biogears'. In the command line, navigate to this folder. Clone the BioGears <a href=\"https://github.com/BioGearsEngine/core\">codebase</a> to your local computer by running:\r\n                              <pre>git clone https://github.com/BioGearsEngine/core.git </pre> in command line.\r\n                              \r\n                              Follow the build instructions from the <a href=\"https://github.com/BioGearsEngine/core/wiki/Build-Instructions\">Github Wiki</a> for your operating system (also described below).\r\n                            </v-list-item>\r\n\r\n                            <v-expansion-panels>\r\n                              <v-expansion-panel class='font-weight-bold' title=\"For MacOS (M1/M2 chip)\">\r\n                                <v-expansion-panel-text class=\"font-weight-regular\" style=\"font-size: 18px\">\r\n                                  Install Homebrew using by running: <pre>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\" </pre> in command line.\r\n                          Add Homebrew to path using: <pre>echo 'eval \"$(/opt/homebrew/bin/brew shellenv)\"' >> ~/.zprofile </pre>\r\n                          <pre>eval \"$(/opt/homebrew/bin/brew shellenv)\"  </pre>\r\n                          Install dependencies using:<pre>brew install wget\r\nbrew install git\r\nbrew install ninja\r\nbrew install g++\r\nbrew install gcc\r\nbrew install eigen\r\nbrew install xerces-c\r\nbrew install xsd\r\nbrew install cmake\r\n                            </pre>\r\n                            Assuming the BioGears repository was cloned in the biogears folder on Desktop, run the following commands to build BioGears:\r\n                            <pre>cd ~/Desktop/biogears\r\ncd core\r\nmkdir build\r\ncd build\r\ncmake -G \"Ninja\" -DCMAKE_INSTALL_PREFIX=~/Desktop/BiogearsInstall -DBiogears_BUILD_HOWTOS=ON ..\r\nninja bg-cli\r\n                            </pre>\r\n                                </v-expansion-panel-text>\r\n                              </v-expansion-panel>\r\n                              <v-expansion-panel class='font-weight-bold' title=\"For Windows\">\r\n                                <v-expansion-panel-text class=\"font-weight-regular\" style=\"font-size: 18px\">\r\n                              To build BioGears on a Windows Machine, you will need to download the <a href=\"https://docs.chocolatey.org/en-us/choco/setup\"> Chocolatey Package Manager </a>.\r\n                              Then, install dependencies using: <pre>choco install git\r\nchoco install ninja\r\nchoco install g++\r\nchoco install gcc\r\nchoco install eigen\r\nchoco install xerces-c\r\nchoco install xsd\r\n                              </pre>\r\n                              Assuming the BioGears repository was cloned in the biogears folder on Desktop, run the following commands to build BioGears:\r\n                              <pre>cd ~/Desktop/biogears\r\ncd core\r\nmkdir build\r\ncd build\r\ncmake -G -DCMAKE_INSTALL_PREFIX=C:~/Downloads/BioGears/external/ .. </pre>\r\n                                </v-expansion-panel-text>\r\n                              </v-expansion-panel>\r\n                            </v-expansion-panels>\r\n                          </v-list>  \r\n                        </v-list-item>\r\n                        <v-list-item> <v-list-item-title style=\"font-size: 18px\" class='font-weight-bold'>2. Move downloaded files to proper directories</v-list-item-title> \r\n                          <v-list>\r\n                            <v-list-item>\r\n                              After clicking Submit in the BioGears Scenario Creation Tool tab, two files should be downloaded - CustomScenario.xml and CustomPatient.xml.\r\n                              \r\n                              Within the BioGears directory folder, move CustomScenario.xml to the <i>core/build/runtime/Scenarios/Patient</i> folder. Also within the BioGears directory folder,\r\n                              move CustomPatient.xml to the <i>core/build/runtime/patients</i> folder.\r\n                            </v-list-item>\r\n                          </v-list>\r\n                        </v-list-item>\r\n                        <v-list-item> <v-list-item-title style=\"font-size: 18px\" class='font-weight-bold'>3. Run BioGears executable in command line</v-list-item-title> \r\n                          <v-list>\r\n                            <v-list-item>\r\n                              Open command line and within the BioGears directory, navigate to <i>core/build/runtime</i>.\r\n                              \r\n                              Run the BioGears executable by running this command: <br> <pre>../outputs/Release/bin/bg-cli SCENARIO ./Scenarios/Patient/CustomScenario.xml </pre>\r\n                          \r\n                              This may take a couple minutes to run. After BioGears has finished running, within the <i>Scenarios/Patient folder</i>, there should be CustomScenario.log and CustomScenario.csv files.\r\n                              The csv file can be inputted into the BioGears Plotting Tool Tab to visualize the simulated physiological variables over time. \r\n                              <br>\r\n                              Most importantly, under the <i>core/build/runtime/states</i> folder, a new file called CustomBioGearsState.xml will be created, which is the MoHSES-compatible state file \r\n                              that can be used to generate the MoHSES Scenario file.\r\n                            </v-list-item>\r\n                          </v-list>\r\n                        </v-list-item>\r\n                      </v-list>\r\n                      </v-expansion-panel-text>\r\n                    </v-expansion-panel>\r\n                  </v-expansion-panels>\r\n                </v-card-text>\r\n              </v-card>\r\n\t\t\t\t\t\t\t<v-col cols=\"auto\">\r\n\t\t\t\t\t\t\t\t<v-btn @click=\"nextTab('option-1')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\r\n\t\t\t\t\t\t\t</v-col>\r\n\t\t\t\t\t\t</v-card>\r\n\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t<br> </v-window-item>\r\n\t\t\t\t\t\t<v-window-item value=\"option-1\">\r\n            <v-card flat>\r\n              <v-card-text>\r\n                <p style=\"font-size: 20px\">Please enter patient information:</p>\r\n                <br>\r\n                <v-text-field\r\n                v-model=\"patient_props['Name']\"\r\n                :rules=\"nameRules\"\r\n                label=\"Name\"\r\n                required>\r\n                </v-text-field>\r\n\r\n                <v-select\r\n                  v-model=\"patient_props['Sex']\"\r\n                  :items=\"genders\"\r\n                  :rules=\"[v => !!v || 'Sex is required']\"\r\n                  label=\"Sex\"\r\n                  required\r\n                ></v-select>\r\n\r\n                <v-slider v-model=\"patient_props['age']\" label=\"Age\" class=\"align-center\" :max=\"age_max\" :min=\"age_min\" :step=\"1\">\r\n                            <template v-slot:append>\r\n                               <v-text-field v-model=\"patient_props['age']\" hide-details single-line density=\"compact\" type=\"number\" suffix=\"years\" style=\"width: 180px\"></v-text-field>\r\n                            </template>\r\n                         </v-slider>\r\n                         <v-slider v-model=\"patient_props['height']\" label=\"Height\" class=\"align-center\" :max=\"height_max\" :min=\"height_min\" :step=\"0.1\">\r\n                            <template v-slot:append>\r\n                               <v-text-field v-model=\"patient_props['height']\" hide-details single-line density=\"compact\" type=\"number\" style=\"width: 90px\"></v-text-field>\r\n                               <v-select v-model=\"height_unit\" hide-details single-line density=\"compact\" :items=\"height_units\" style=\"width: 90px\"></v-select>\r\n                            </template>\r\n                         </v-slider>\r\n                         <v-slider v-model=\"patient_props['weight']\" label=\"Weight\" class=\"align-center\" :max=\"weight_max\" :min=\"weight_min\" :step=\"0.1\">\r\n                            <template v-slot:append>\r\n                               <v-text-field v-model=\"patient_props['weight']\" hide-details single-line density=\"compact\" type=\"number\" style=\"width: 90px\"></v-text-field>\r\n                               <v-select v-model=\"weight_unit\" hide-details single-line density=\"compact\" :items=\"weight_units\" style=\"width: 90px\"></v-select>\r\n                            </template>\r\n                         </v-slider>\r\n              </v-card-text>\r\n            </v-card>\r\n            <br>\r\n            <v-row justify=\"center\">\r\n              <v-col cols=\"auto\">\r\n                <v-btn @click=\"nextTab('home')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\r\n              </v-col>\r\n              <v-col cols=\"auto\">\r\n                <v-btn @click=\"nextTab('option-2')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\r\n              </v-col>\r\n            </v-row>\r\n            <br>\r\n          </v-window-item>\r\n\r\n        <v-window-item value=\"option-2\">\r\n          <v-card flat>\r\n            <v-card-text>\r\n              <p style=\"font-size: 20px\">Please enter <b>healthy</b>  patient vitals: </p>\r\n              <br>\r\n\r\n              <v-select\r\n                v-model=\"patient_vitals['BloodTypeABO']\"\r\n                :items=\"blood_types\"\r\n                label=\"Blood Type\"\r\n              ></v-select>\r\n\r\n              <v-select\r\n                v-model=\"patient_vitals['BloodTypeRh']\"\r\n                :items=\"rh\"\r\n                label=\"Rh\"\r\n              ></v-select>\r\n\r\n              <!-- <v-text-field\r\n                v-model=\"patient_vitals['mean_arterial_pressure']\"\r\n                label=\"Mean Arterial Pressure (mmHg)\"\r\n              ></v-text-field> -->\r\n              \r\n              <v-text-field\r\n                v-model=\"patient_vitals['DiastolicArterialPressureBaseline']\"\r\n                label=\"Diastolic Arterial Pressure (mmHg)\"\r\n                required\r\n                hint=\"Enter value between 60-80 mmHg\"\r\n              ></v-text-field>\r\n\r\n              <v-text-field\r\n                v-model=\"patient_vitals['SystolicArterialPressureBaseline']\"\r\n                label=\"Systolic Arterial Pressure (mmHg)\"\r\n                required\r\n                hint=\"Enter value between 90-120 mmHg\"\r\n              ></v-text-field>\r\n\r\n              <v-slider\r\n                v-model=\"patient_vitals['HeartRateBaseline']\"\r\n                label=\"Heart Rate\"\r\n                class=\"align-center\"\r\n                :max=\"heart_rate_max\"\r\n                :min=\"heart_rate_min\"\r\n                :step=\"1\"\r\n              ><template v-slot:append>\r\n                  <v-text-field\r\n                    v-model=\"patient_vitals['HeartRateBaseline']\"\r\n                    hide-details single-line density=\"compact\" type=\"number\" suffix=\"bpm\" style=\"width: 180px\"\r\n                  ></v-text-field>\r\n                </template>\r\n              </v-slider>\r\n              <v-slider\r\n                v-model=\"patient_vitals['RespirationRateBaseline']\"\r\n                label=\"Respiratory Rate\"\r\n                class=\"align-center\"\r\n                :max=\"resp_rate_max\"\r\n                :min=\"resp_rate_min\"\r\n                :step=\"1\"\r\n              >\r\n                <template v-slot:append>\r\n                  <v-text-field\r\n                    v-model=\"patient_vitals['RespirationRateBaseline']\"\r\n                    hide-details single-line density=\"compact\" type=\"number\" suffix=\"/min\" style=\"width: 180px\"\r\n                  ></v-text-field>\r\n                </template>\r\n              </v-slider>\r\n\r\n\r\n\r\n            </v-card-text> \r\n          </v-card>\r\n          <br>\r\n          <v-row justify=\"center\">\r\n            <v-col cols=\"auto\">\r\n              <v-btn @click=\"nextTab('option-1')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\r\n            </v-col>\r\n            <v-col cols=\"auto\">\r\n              <v-btn @click=\"nextTab('option-3')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\r\n            </v-col>\r\n          </v-row>\r\n          <br>\r\n        </v-window-item>\r\n        <v-window-item value=\"option-3\">\r\n\t\t\t\t\t\t<v-card flat>\r\n\t\t\t\t\t\t\t<v-card-text>\r\n\t\t\t\t\t\t\t\t<p style=\"font-size: 20px\"><b>Optional:</b> Please enter environment properties: </p>\r\n\t\t\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t\t\t<v-text-field v-model=\"date\" type=\"date\" label=\"Date\"></v-text-field>\r\n\t\t\t\t\t\t\t\t<v-row>\r\n\t\t\t\t\t\t\t\t\t<v-col cols=\"6\">\r\n\t\t\t\t\t\t\t\t\t<v-text-field v-model=\"lat\" label=\"Latitude\"></v-text-field>\r\n\t\t\t\t\t\t\t\t\t</v-col>\r\n\t\t\t\t\t\t\t\t\t<v-col cols=\"6\">\r\n\t\t\t\t\t\t\t\t\t<v-text-field v-model=\"lon\" label=\"Longitude\"></v-text-field>\r\n\t\t\t\t\t\t\t\t\t</v-col>\r\n\t\t\t\t\t\t\t\t</v-row>\r\n\t\t\t\t\t\t\t\t<v-btn @click=\"pullEnvironmentData\" color=\"#3c2d70\" style=\"color: white\">Generate Environment Data</v-btn>\r\n\t\t\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t\t\t<v-slider v-if=\"weatherData\" v-model=\"environment_props['temperature']\" label=\"Temperature\" clearable class=\"align-center\" :max=\"temperature_max\" :min=\"temperature_min\" :step=\"0.1\">\r\n\t\t\t\t\t\t\t\t\t<template v-slot:append>\r\n\t\t\t\t\t\t\t\t\t\t<v-text-field v-model=\"environment_props['temperature']\" hide-details clearable single-line density=\"compact\" type=\"number\" suffix=\"Celsius\" style=\"width: 180px\"></v-text-field>\r\n\t\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t\t</v-slider>\r\n\t\t\t\t\t\t\t\t<v-slider v-if=\"weatherData\" v-model=\"environment_props['pressure']\" label=\"Pressure\" clearable class=\"align-center\" :max=\"pressure_max\" :min=\"pressure_min\" :step=\"0.1\">\r\n\t\t\t\t\t\t\t\t\t<template v-slot:append>\r\n\t\t\t\t\t\t\t\t\t\t<v-text-field v-model=\"environment_props['pressure']\" hide-details clearable single-line density=\"compact\" type=\"number\" suffix=\"mmHg\" style=\"width: 180px\"></v-text-field>\r\n\t\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t\t</v-slider>\r\n\t\t\t\t\t\t\t\t<v-slider v-if=\"weatherData\" v-model=\"environment_props['humidity']\" label=\"Relative Humidity\" clearable class=\"align-center\" :max=\"100\" :min=\"0\" :step=\"0.1\">\r\n\t\t\t\t\t\t\t\t\t<template v-slot:append>\r\n\t\t\t\t\t\t\t\t\t\t<v-text-field v-model=\"environment_props['humidity']\" hide-details clearable single-line density=\"compact\" type=\"number\" suffix=\"%\" style=\"width: 180px\"></v-text-field>\r\n\t\t\t\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t\t\t</v-slider>\r\n\t\t\t\t\t\t\t\t<v-row>\r\n\t\t\t\t\t\t\t\t\t<v-col cols=\"8\">\r\n\t\t\t\t\t\t\t\t\t<v-text-field v-if=\"weatherData\" v-model=\"environment_props['cityName']\" label=\"City\"></v-text-field>\r\n\t\t\t\t\t\t\t\t\t</v-col>\r\n\t\t\t\t\t\t\t\t\t<v-col cols=\"4\">\r\n\t\t\t\t\t\t\t\t\t<v-text-field v-if=\"weatherData\" v-model=\"environment_props['state']\" label=\"State\"></v-text-field>\r\n\t\t\t\t\t\t\t\t\t</v-col>\r\n\t\t\t\t\t\t\t\t</v-row>\r\n\t\t\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t\t</v-card-text>\r\n\t\t\t\t\t\t</v-card>\r\n\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t<v-row justify=\"center\">\r\n\t\t\t\t\t\t\t<v-col cols=\"auto\">\r\n\t\t\t\t\t\t\t\t<v-btn @click=\"nextTab('option-2')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\r\n\t\t\t\t\t\t\t</v-col>\r\n\t\t\t\t\t\t\t<v-col cols=\"auto\">\r\n\t\t\t\t\t\t\t\t<v-btn @click=\"nextTab('option-4')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\r\n\t\t\t\t\t\t\t</v-col>\r\n\t\t\t\t\t\t</v-row>\r\n\t\t\t\t\t\t<br> </v-window-item>\r\n\t\t\t\t\t\t<v-window-item value=\"option-4\">\r\n          <v-card flat>\r\n            <v-card-text>\r\n              <p style=\"font-size: 20px\">Please enter a title and brief description for this patient scenario: </p>\r\n              <br>\r\n              <v-text-field v-model=\"scenario_props['Name']\" label=\"Scenario Name\"> </v-text-field>\r\n              <v-text-field v-model=\"scenario_props['Description']\" label=\"Scenario Brief Description\"> </v-text-field>\r\n              <p style=\"font-size: 20px\">Please configure patient injuries and timeline by either clicking on body part to add, or selecting 'Add Injury':</p>\r\n              <br>\r\n              <br>\r\n              <br>\r\n              <v-row>\r\n                <v-col cols=\"12\" sm=\"8\" md=\"6\" class=\"my-content\">\r\n                  <svg\r\n                    width=\"550px\"\r\n                    height=\"600px\"\r\n                    viewBox=\"15 0 20 100\"\r\n                    version=\"1.1\"\r\n                    id=\"svg46\"\r\n                    sodipodi:docname=\"human_sanika.svg\"\r\n                    inkscape:version=\"1.2.2 (732a01da63, 2022-12-09)\"\r\n                    xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\r\n                    xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    xmlns:svg=\"http://www.w3.org/2000/svg\">\r\n                    <defs\r\n                      id=\"defs50\" />\r\n                    <path \r\n                      :fill=\"colors['Chest']\"\r\n                      @click=\"pathClicked('Chest')\"\r\n                      id=\"Chest\"\r\n                      d=\"m 2.4651865,21.528509 -1.72941989,3.09103 -1.89346001,0.94785 1.15295001,0.90662 0.90586,2.63773 2.09966989,0.86537 3.34636,-1.655 -0.83462,-6.50527 z m 8.9862405,0 1.72942,3.09103 1.89346,0.94785 -1.15295,0.90662 -0.90604,2.63773 -2.09968,0.86537 -3.3452405,-1.655 0.83425,-6.50527 z\"\r\n                      />\r\n                    <path\r\n                      :fill=\"colors['Abdomen']\"\r\n                      @click=\"pathClicked('Abdomen')\"\r\n                      id=\"Abdomen\"\r\n                      d=\"m 3.5133365,30.595379 3.11202,-1.40603 -0.0937,2.27965 -2.80138,1.4364 z m -1.93508,1.6685 1.29355,0.72139 -0.14997,-1.70899 z m 1.05303,-1.637 -2.47930989,-1.03259 0.93360999,2.52148 z m -1.5316399,1.73729 1.6900499,1.03372 0.28871,2.06743 -1.64881,-1.07515 z m 2.9114199,1.10421 0.0623,1.62387 2.30327,-0.49961 0.12448,-2.21703 z m 0.15561,2.40432 -0.0309,1.99844 2.20973,0.59353 0.0311,-3.1227 z m -2.6546,-0.98516 1.48384,1.0339 0.20622,2.10905 -1.64975,-1.32355 z m 5.23795,14.47521 -0.60647,-5.91209 -0.015,-3.84879 -2.18479,-1.07533 -0.24746,7.03017 z m 0.41581,-5.7e-4 0.60628,-5.91209 0.0154,-3.84915 2.18404,-1.07515 0.2474605,7.03017 z m -4.00588,-10.21155 -1.81341,-1.36479 -0.15748,1.83347 -1.28567989,2.37432 1.98044989,2.73595 1.03109,0.16554 0.37119,-3.88721 z m 7.2429405,-8.55562 -3.1120205,-1.40604 0.0937,2.27965 2.8011905,1.43603 z m 1.93471,1.66849 -1.29355,0.7212 0.14997,-1.70898 z m -1.05303,-1.63718 2.47968,-1.03241 -0.9336,2.52093 z m 1.53164,1.73729 -1.69005,1.03372 -0.28871,2.0678 1.64975,-1.07533 z m -2.9114305,1.10421 -0.0622,1.62387 -2.30308,-0.49961 -0.12448,-2.21722 z m -0.1556,2.4045 0.0311,1.99844 -2.20953,0.59391 -0.0311,-3.1227 z m 2.6545905,-0.98535 -1.48383,1.03372 -0.20622,2.10905 1.64862,-1.32355 z m -1.64787,4.26366 1.81341,-1.36479 0.15748,1.83347 1.28642,2.37338 -1.98044,2.73652 -1.03109,0.16554 -0.37026,-3.88816 z\"/>\r\n                    <path\r\n                      :fill=\"colors['Pelvis']\"\r\n                      @click=\"pathClicked('Pelvis')\"\r\n                      id=\"Pelvis\"\r\n                      d=\"m 0.73979661,43.812429 v 4.21363 l 2.94516989,5.8253 1.86028,5.78349 -0.19366,-4.0072 z m 3.24886989,13.42559 0.0647,0.15485 1.21294,2.90207 -0.78307,7.18803 -1.23618,-0.66102 1.0714,-6.69273 z m 1.52977,-7.75493 0.0221,-0.0277 -0.14866,-0.37945 -3.10172,-3.40449 -0.23283,-0.0825 2.05918,5.32009 z m -1.17263,2.01833 1.27705,3.29948 0.42631,-4.04862 -0.25196,-0.64303 z m 4.05219,-2.01795 -0.0221,-0.0281 0.14867,-0.37926 3.1017105,-3.40449 0.23246,-0.0825 -2.0584305,5.3199 z m 1.17263,2.01795 -1.27706,3.29948 -0.42631,-4.04843 0.25197,-0.64303 z m 3.6065705,-7.6888 v 4.21363 l -2.94574,5.82511 -1.8602705,5.78349 0.19365,-4.0072 z m -3.2494405,13.42596 -0.0649,0.15467 -1.21294,2.90207 0.78325,7.18803 1.2361905,-0.66122 -1.0714005,-6.69272 z\"\r\n                      />\r\n                    <path\r\n                      :fill=\"colors['Head']\"\r\n                      @click=\"pathClicked('Head')\"\r\n                      id=\"Head\"\r\n                      d=\"m 39.271427,10.801559 0.44208,-0.14964 0.16111,0.16427 1.48163,4.04751 2.32401,1.45118 2.39971,-1.52387 0.97577,-3.68969 0.52752,-0.55908 0.23367,0.0981 0.24198,-3.3446699 -2.03129,-2.31103 -2.84509,-0.51629 -2.20422,0.52915 -1.93631,2.63077 z m -28.40863,0.34495 0.0203,-2.2074699 -3.9668905,-2.7637 -3.74099,2.23559 -0.006,2.6352799 -0.60741,0.0403 0.27408,1.82447 0.97635,0.33932 0.44244,2.18029 1.82222,2.06556 2.03518,-0.0607 1.79223,-1.94408 0.3595705,-2.24066 0.97616,-0.33932 0.25159,-1.78416 z m -8.0771905,-0.34495 -0.0482,-2.5908499 4.20648,-2.46806 4.4276905,2.95361 -0.0405,1.9440799 0.24197,-3.3446699 -2.0312905,-2.31103 -2.84508,-0.51629 -2.20423,0.52915 -1.9363,2.63077 z\" />\r\n                    <path\r\n                      :fill=\"colors['Neck']\"\r\n                      @click=\"pathClicked('Neck')\"\r\n                      id=\"Neck\"\r\n                      d=\"m 43.483667,16.548089 -2.35767,-1.55045 -1.47119,-3.95143 -0.60741,0.0403 0.27409,1.82447 0.97635,0.33932 0.7613,2.21572 0.33017,1.06849 0.0895,2.14894 1.16448,0.008 0.10563,-0.70833 0.54716,-0.0606 z m 1.01793,1.47595 0.23768,0.64982 1.38107,-0.004 0.01,-2.38784 0.25971,-0.79061 0.57215,-2.1698 0.76359,-0.41018 0.25158,-1.78416 -0.62859,0.0193 -1.08488,3.89981 -2.39725,1.46684 0.2768,1.48507 z m -40.0829605,-1.67052 1.64975,2.35202 0.74426,2.62159 -1.73486,-1.38354 -0.86649,-2.97104 z m 5.08047,0 -1.64975,2.35202 -0.74538,2.62234 1.73486,-1.38354 0.86649,-2.97104 z\"\r\n                      />\r\n                    <path\r\n                      :fill=\"colors['Extremities']\"\r\n                      @click=\"pathClicked('Extremities')\"\r\n                      id=\"Extremities\"\r\n                      d=\"m 45.133277,68.516999 1.20605,3.01461 -0.70737,0.26558 -0.89755,3.51771 0.55802,-4.01191 z m 5.08496,-3.15003 -0.63355,1.8609 -0.16813,2.03261 -0.61313,1.93117 0.90584,-0.0851 0.28534,2.15982 z m -4.3014,6.58834 -1.27664,4.99697 0.28984,3.02284 0.67869,10.06546 1.66325,0.63506 3.504,-11.96959 -1.24986,-7.17525 z m -0.54053,20.8287 -0.85194,1.3581 -0.37189,0.79238 0.15589,1.21774 0.76983,0.74446 1.51186,0.12543 1.12989,-0.29192 0.24225,-0.95894 -0.80765,-1.30405 0.22563,-0.85987 -0.29679,-0.84153 0.0194,-1.81524 -1.53568,-0.54817 z m 1.19598,0.4675 -0.15943,1.25776 0.6023,0.97431 m 0.54436,0.29544 -1.06474,0.40084 -1.55326,-0.65137 m 3.56525,-39.90247 -3.97962,-1.70224 -0.56389,0.27131 -0.0528,1.79746 -0.075,4.64669 1.97837,6.04282 -0.47612,1.41403 1.42813,3.29446 1.7661,-0.30111 0.50079,-2.11605 0.1695,-1.75674 2.42102,-8.15763 0.009,-3.68308 z m 4.26465,-23.93238 -0.32785,-1.05121 -1.27383,-2.05489 1.38708,-2.96476 2.28579,0.91634 1.83971,1.74245 0.53937,1.78549 -0.26073,4.30868 z m 2.64394,15.3417 1.51839,0.0828 0.78033,-0.65476 1.16673,2.18281 0.79187,3.34623 -0.49843,0.21064 -0.55144,-2.21453 -0.50541,0.24292 0.30356,2.5012 -0.62882,0.23021 -0.36124,-2.50014 -0.56203,0.16666 0.16765,2.77019 -0.77603,0.30634 -0.19719,-2.87245 -0.45732,-0.0278 -0.22215,2.64829 -0.66539,0.24928 0.0254,-4.56692 -0.3374,-0.20146 -1.38845,1.65469 -0.32098,-0.35041 0.76973,-2.03928 z m 0.97685,-0.1799 1.43335,-0.74932 0.29002,-7.01054 c 0,0 -0.65,-2.77789 -0.64401,-3.06126 l -0.61212,-1.21783 -3.98124,-2.57566 1.0222,1.93525 -0.38967,4.82212 1.8218,7.69308 z m -13.45979,-5.10285 0.14418,2.97292 1.15984,-0.0241 0.048,-2.96488 2.80867,-0.81981 2.34029,-0.7541 1.34121,3.73319 -4.77886,1.36455 -2.33301,1.2158 -2.37536,-1.2333 -5.45663,-1.37716 1.51961,-3.95743 z m -7.0756,2.37946 5.48374,1.86457 2.27386,1.3378 2.74195,-1.74412 4.51804,-1.28077 0.90009,2.29721 0.675,3.4346 -0.81272,5.02838 -2.82636,0.16819 -4.11256,-1.67581 -1.00814,0.39118 -0.95849,-0.39888 -4.44053,1.94411 -2.77023,-0.51478 -0.95181,-6.15325 0.36754,-2.7864 z m 6.4333,24.38495 -1.20605,3.01461 0.70738,0.26558 0.89754,3.51771 -0.55801,-4.01191 z m -5.08496,-3.15003 0.63355,1.8609 0.16813,2.03261 0.61314,1.93117 -0.90585,-0.0851 -0.28534,2.15982 z m 4.3014,6.58834 1.27664,4.99697 -0.28984,3.02284 -0.67869,10.06546 -1.66325,0.63506 -3.50399,-11.96959 1.24985,-7.17525 z m 0.54053,20.8287 0.85194,1.3581 0.37189,0.79238 -0.15588,1.21774 -0.76984,0.74446 -1.51185,0.12543 -1.1299,-0.29192 -0.24225,-0.95894 0.80765,-1.30405 -0.22562,-0.85987 0.29679,-0.84153 -0.0194,-1.81524 1.53568,-0.54817 z m -1.19598,0.4675 0.15943,1.25776 -0.6023,0.97431 m -0.54436,0.29544 1.06474,0.40084 1.55326,-0.65137 m -4.19331,-39.53466 4.55099,-2.03879 0.63802,0.23079 0.0353,1.80672 0.075,4.64669 -1.97837,6.04282 0.47612,1.41403 -1.42812,3.29446 -1.76611,-0.30111 -0.50079,-2.11605 -0.1695,-1.75674 -2.42102,-8.15763 -0.34279,-3.64687 z m -3.98895,-24.48137 0.4297,-1.4164 1.30458,-1.68577 -1.39393,-2.96155 -2.28367,0.92162 -1.83567,1.7467 -0.53524,1.78673 0.27068,4.30806 z m -2.46869,15.35539 -1.5182,0.0863 -0.78184,-0.65295 -1.16168,2.1855 -0.78414,3.34805 0.49892,0.20949 0.54632,-2.2158 0.50597,0.24175 -0.29779,2.5019 0.62936,0.22875 0.35546,-2.50096 0.56242,0.16536 -0.16126,2.77057 0.77674,0.30455 0.19056,-2.87291 0.45724,-0.0289 0.22827,2.64778 0.66597,0.24774 -0.0359,-4.56685 0.33693,-0.20224 1.39227,1.65147 0.32017,-0.35115 -0.77444,-2.03749 z m -0.97726,-0.17765 -1.43509,-0.746 -0.30622,-7.00985 c 0,0 0.64359,-2.77938 0.63694,-3.06274 l 0.6093,-1.21924 3.62552,-2.56583 -0.68276,1.9919 0.41561,4.74788 -1.80402,7.69727 z m -12.59945,1.31596 1.5198,0.0506 0.76631,-0.67111 1.21262,2.15766 0.86245,3.32873 -0.49386,0.22113 -0.59815,-2.20238 -0.50016,0.25356 0.35639,2.49422 -0.62382,0.24345 -0.41402,-2.49194 -0.55839,0.17851 0.2262,2.76603 -0.76938,0.32268 -0.25788,-2.86764 -0.4578,-0.0181 -0.16611,2.6524 -0.65997,0.26329 -0.0712,-4.56643 -0.34158,-0.19428 -1.35316,1.68368 -0.32832,-0.34355 0.72644,-2.0551 z m 1.18497,-16.19302 -0.005,3.09419 0.57959,1.91184 0.54538,-2.41185 z m -23.9347704,16.19302 -1.5198,0.0506 -0.76631,-0.67112 -1.21262,2.15767 -0.86245,3.32873 0.49386,0.22113 0.59815,-2.20238 0.50016,0.25356 -0.35639,2.49422 0.62382,0.24345 0.41402,-2.49194 0.55839,0.17851 -0.2262,2.76603 0.76938,0.32268 0.25788,-2.86764 0.4578,-0.0181 0.16611,2.65239 0.65997,0.2633 0.0712,-4.56643 0.34158,-0.19428 1.35316,1.68367 0.32832,-0.34354 -0.72644,-2.0551 z m -1.18497,-16.19302 0.005,3.09419 -0.57959,1.91184 -0.54539,-2.41185 z m 7.0789299,37.41425 -0.12448,1.12295 0.87118,1.08171 0.29058,1.70599 0.58116,0.24933 0.49774,-2.57866 0.33182,-0.91486 -0.29058,-0.58247 z m 3.85854,0.0832 -0.62241,1.74685 -1.32767,2.57867 0.33182,2.37095 0.95423,-2.66209 0.78832,-1.4964 z m -4.97867989,-2.37058 0.95422989,5.11609 -0.62239989,-0.33313 -0.49793,1.6638 z m 4.27340989,7.94395 -0.29058,0.91486 -0.62241,3.86828 -0.0829,5.15733 0.87174,5.03304 -0.0418,-6.44714 0.91298,-2.57848 0.1243,-2.82837 z m -1.99151,2.32914 0.20735,7.73637 1.65968,6.23904 -1.80497,-0.85299 -3.00797989,-10.83584 1.03728,-6.82095 z m 2.98717,15.09818 -0.12448,3.45228 -0.29058,1.20637 h -0.87118 l -0.24877,-0.83181 -0.29059,-0.0416 0.0623,0.83181 -1.09934,-0.33333 -0.29058,-0.16629 -1.2448,-0.27033 -0.0412,-0.97747 1.2031899,-2.03781 0.82975,-1.04009 2.03294,-0.83181 z m -6.16386989,-37.46914 0.15504,4.75053 2.40262989,6.60968 -0.73638,1.90021 -2.3640099,-8.34435 z m 0.58117,-11.60768 0.15503,4.00684 -1.31754001,7.93154 -0.61978,-6.40308 z m 0.38769,5.1223 2.75150989,6.07239 0.61997,4.87425 -1.16232,6.85771 -2.51904989,-6.98163 -0.15504,-7.18801 z m 12.16631039,20.87063 0.1243,1.12295 -0.87118,1.08171 -0.29058,1.70599 -0.58116,0.24933 -0.49774,-2.57866 -0.33182,-0.91486 0.29058,-0.58247 z m -3.8585305,0.0832 0.6224,1.74685 1.3273005,2.57867 -0.33182,2.37095 -0.9542305,-2.66209 -0.78738,-1.49734 z m 4.9781105,-2.37039 -0.95423,5.11609 0.62241,-0.33295 0.49773,1.66381 z m -4.2728405,7.94394 0.29058,0.91486 0.6224005,3.8681 0.0829,5.15733 -0.8713605,5.03304 0.0412,-6.44714 -0.91242,-2.57848 -0.12561,-2.82837 z m 1.9915005,2.32915 -0.20753,7.73637 -1.6594905,6.23904 1.8047805,-0.853 3.00816,-10.83583 -1.03727,-6.82095 z m -2.9869805,15.09817 0.1243,3.45228 0.28983,1.20638 h 0.87136 l 0.24897,-0.83181 0.2905805,-0.0416 -0.0624,0.83181 1.09914,-0.33332 0.29058,-0.16629 1.24444,-0.27033 0.0416,-0.97748 -1.20319,-2.03743 -0.82974,-1.0399 -2.0329405,-0.83181 z m 6.1631205,-37.46932 -0.15504,4.75091 -2.40263,6.60949 0.7362,1.90021 2.36401,-8.34435 z m -0.58154,-11.60825 -0.15485,4.00722 1.31793,7.93154 0.61977,-6.40308 z m -0.38731,5.12268 -2.75152,6.07258 -0.62015,4.87425 1.16232,6.85771 2.51886,-6.98144 0.15504,-7.18764 z m -17.8749004,-10.94443 -1.30083,10.28927 1.10778,0.01 1.89387,-7.99609 -0.19174,-4.53719 z m -1.21978,-1.94971 0.58728,2.58635 -1.11875,9.15614 -0.55849,-0.21663 -0.2304,-6.77018 z m 0.71916,-0.2047 0.33838,1.70499 1.81931,-2.54418 0.66289,-1.26895 z m 2.8527,-2.6096 c 0.0259,-0.0144 0.0536,-0.0254 0.0824,-0.0324 l 1.48332001,-4.95503 -1.00455001,-2.08428 -1.65509,1.74532 -2.23034,6.67667 -0.0415,0.93739 c 1.06528,-0.84215 2.18961,-1.60679 3.36433,-2.28803 z m -1.6945,-5.75654 -1.64891,6.43421 0.36468,-4.92266 z m 21.7225804,10.52055 1.30083,10.28927 -1.10778,0.01 -1.89387,-7.99609 0.19174,-4.53719 z m 1.21978,-1.94971 -0.58729,2.58635 1.11876,9.15614 0.55849,-0.21663 0.2304,-6.77018 z m -0.55354,-0.2047 -0.33838,1.70499 -1.81932,-2.54418 -0.6629,-1.26895 z m -2.85271,-2.6096 c -0.0259,-0.0144 -0.0536,-0.0254 -0.0824,-0.0324 l -1.48333,-4.95503 1.00456,-2.08428 1.65511,1.74532 2.23034,6.67667 0.0415,0.93739 c -1.06528,-0.84215 -2.18962,-1.60679 -3.36434,-2.28803 z m 1.6945,-5.75654 1.64893,6.43421 -0.36469,-4.92266 z m -13.8386705,-9.20021 -3.55745989,1.97916 -0.72653,-0.35074 z m 0.107,0.43288 0.37119,1.73073 -2.18459,0.53561 -1.40114989,-0.49436 z m -3.98148989,1.97595 -0.75814,-0.41 -2.40806001,1.66799 -1.17364,1.50707 -0.62662,1.56259 0.0464,3.70195 1.3284,-1.72153 -0.0407,-2.59376 0.48843,-0.5005 c 0,0 3.09777001,-3.19057 3.14370001,-3.214 z m 0.2409,0.10873 c 0.002,0.0525 -3.32987001,3.54733 -3.32987001,3.54733 l -0.10067,3.10396 1.15426,-1.97782 2.22547001,-0.94804 1.56574989,-2.88481 z m 10.05660039,-2.51756 3.55748,1.97916 0.72653,-0.35074 z m -0.107,0.43288 -0.3711905,1.73073 2.1846005,0.53561 1.40116,-0.49436 z m 3.98151,1.97595 0.75814,-0.41 2.40806,1.66799 1.17364,1.50707 0.62662,1.5626 -0.0464,3.70194 -1.3284,-1.72153 0.0407,-2.59376 -0.48842,-0.50049 c 0,0 -3.09778,-3.19058 -3.14371,-3.21401 z m -0.2409,0.10873 c -10e-4,0.0525 3.32987,3.54733 3.32987,3.54733 l 0.10067,3.10396 -1.15426,-1.97782 -2.22547,-0.94804 -1.56576,-2.88481 z\"\r\n                      />\r\n                    <path\r\n                      :fill=\"colors['Back']\"\r\n                      @click=\"pathClicked('Back')\"\r\n                      id=\"Back\"\r\n                      d=\"m 40.739147,19.072339 0.063,-2.62462 -0.71441,1.15181 -4.37994,1.49796 4.97857,8.36746 1.83043,5.08188 -0.21949,-13.55362 z m -7.42423,1.95717 -1.57473,1.56517 -0.81404,2.06905 -0.38603,2.52859 1.83679,-1.23927 2.76223,-1.15538 1.84691,3.4342 1.13679,5.49715 0.0767,5.8593 4.07066,1.10938 -0.10355,-7.94098 -1.94107,-4.90022 -5.04395,-8.19334 z m 13.23814,-1.85796 -0.063,-2.62463 0.71441,1.15181 4.37994,1.49796 -4.97857,8.36746 -1.83043,5.08189 0.21949,-13.55362 z m 7.42423,1.95716 1.57473,1.56518 0.81404,2.06904 0.0384,2.52859 -1.48921,-1.23926 -2.76223,-1.15539 -1.84691,3.4342 -1.13679,5.49715 -0.0767,5.8593 -4.07066,1.10938 0.10355,-7.94098 1.94107,-4.90021 5.04395,-8.19335 z m -11.12961,-1.764514 0.53876,25.33066 0.48967,-0.0297 0.65658,-25.3387 -0.28147,-0.84188 -1.25059,-4.9e-4 z\" />\r\n                  </svg>\r\n                </v-col>\r\n\r\n                <v-col>\r\n                  <div v-for=\"(item, index) in action\" :key='index'> <!--v-for=\"(exp, index) in action\" :key=\"index\"-->\r\n                    <br>\r\n                    <v-select v-model=\"item.region\" label=\"Select Body Region\" :items=\"body_regions\" :onChange=\"changeColors()\"></v-select>\r\n                    <v-autocomplete v-model=\"item.type\" label=\"Select Injury Type\" :items=\"patient_body[item.region]\"></v-autocomplete>\r\n                    <v-row>\r\n                      <v-col>\r\n                        <v-select v-if=\"item.type==='Tension Pneumothorax'\" v-model=\"item.side\" label=\"Select side\" :items=\"sides\" style=\"width: 200px\" class=\"align-left\"></v-select>\r\n                      </v-col>\r\n                      <v-col>\r\n                        <v-select v-if=\"item.type==='Tension Pneumothorax'\" v-model=\"item.openclose\" label=\"Open or Closed\" :items=\"open_closed\" class=\"align-right\" style=\"width: 200px\"></v-select>\r\n                      </v-col>\r\n                    </v-row>\r\n                    <v-select v-if=\"item.type==='Hemorrhage'\" v-model=item.compartment label=\"Select compartment\" :items=\"hemorrhage_regions[item.region]\"></v-select>\r\n                    <v-text-field v-if=\"item.type==='Hemorrhage'\" v-model=\"item.hemrate\" label=\"Initial Rate\" suffix=\"mL/min\"></v-text-field>\r\n                    <v-select v-if=\"item.type==='Brain Injury'\" v-model=item.braininjurytype label=\"Select type\" :items=\"brain_injury_types\"></v-select>\r\n                    <v-text-field v-if=\"item.type==='Burn Wound'\" v-model=item.burnsurfacearea label=\"Enter Fraction of Total Body Surface Area Affected\" hint=\"Enter a decimal between 0 and 1.\"></v-text-field>\r\n                    <v-slider v-if=\"(item.type!='Hemorrhage') && (item.type!='Burn Wound') && (item.type!='Cardiac Arrest')\" v-model=\"item.severity\" label=\"Severity (0-1)\" class=\"align-center\" :max=\"sev_max\" :min=\"sev_min\" :step=\"0.1\">\r\n                      <template v-slot:append>\r\n                        <v-text-field v-model=\"item.severity\" hide-details single-line density=\"compact\" style=\"width: 90px\"></v-text-field>\r\n                      </template>\r\n                    </v-slider>\r\n                    <v-btn class='text-right' @click=\"removeAction(index)\">Remove Injury</v-btn>\r\n                    <br>\r\n                    <br>\r\n                  </div>\r\n                  <v-btn @click=\"addAction\" color='#3c2d70' style=\"color: white\">Add Injury</v-btn>\r\n                  \r\n                  <!-- <v-form\r\n                    ref=\"form\"\r\n                    v-model=\"valid\"\r\n                    lazy-validation>\r\n                    <v-combobox v-for=\"(item, index) in name\"\r\n                      :key=\"index\"\r\n                      :label=\"Object.keys(item)[0]\"\r\n                      :items='patient_body[Object.keys(item)[0]]'\r\n                      v-model=\"item[Object.keys(item)[0]]\" \r\n                      multiple\r\n                      chips> \r\n                    </v-combobox>\r\n                  </v-form> -->\r\n                </v-col>\r\n              </v-row>\r\n              <br>\r\n              <v-slider v-model=\"action_time\" label=\"Medical Responder Time to Scene\" class=\"align-center\" :max=\"time_max\" :min=\"time_min\" :step=\"0.5\">\r\n                <template v-slot:append>\r\n                  <v-text-field v-model=\"action_time\" hide-details single-line density=\"compact\" :items=\"time_units\" style=\"width: 90px\"></v-text-field>\r\n                  <v-select v-model=\"action_unit\" hide-details single-line density=\"compact\" :items=\"time_units\" style=\"width: 90px\"></v-select>\r\n                </template>\r\n              </v-slider>\r\n              <v-row>\r\n                <v-col cols=\"auto\" class=\"mr-2\">\r\n                  <v-dialog v-model=\"dialog1\" persistent width=\"auto\">\r\n                    <template v-slot:activator=\"{ props }\">\r\n                      <v-btn color=\"success\" v-bind=\"props\"> Submit </v-btn>\r\n                    </template>\r\n                    <v-card>\r\n                      <v-card-title class=\"text-h5\"> Submission Confirmation </v-card-title>\r\n                      <v-card-text>Are you sure you would like to submit your form?</v-card-text>\r\n                      <v-card-actions>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn color=\"green-darken-1\" variant=\"text\" @click=\"dialog1=false\"> Dismiss </v-btn>\r\n                        <v-btn :disabled=\"!valid\" color=\"success\" class=\"mr-4\" @click=\"saveBiogearsFiles(); dialog1=false\"> Submit </v-btn>\r\n                      </v-card-actions>\r\n                    </v-card>\r\n                  </v-dialog>\r\n                </v-col>\r\n                <v-col cols=\"auto\">\r\n                  <v-dialog v-model=\"dialog\" persistent width=\"auto\">\r\n                    <template v-slot:activator=\"{ props }\"> \r\n                      <v-btn color=\"error\" v-bind=\"props\"> Reset Form </v-btn>\r\n                    </template>\r\n                    <v-card>\r\n                      <v-card-title class=\"text-h5\"> Reset Confirmation </v-card-title>\r\n                      <v-card-text>Are you sure you would like to reset your form?</v-card-text>\r\n                      <v-card-actions>\r\n                        <v-spacer></v-spacer>\r\n                        <v-btn color=\"green-darken-1\" variant=\"text\" @click=\"dialog = false\"> Dismiss </v-btn>\r\n                        <v-btn color=\"error\" class=\"mr-4\" @click=\"reset(); dialog=false\"> Reset Form </v-btn>\r\n                      </v-card-actions>\r\n                    </v-card>\r\n                  </v-dialog>              \r\n                </v-col>\r\n              </v-row>\r\n            </v-card-text>\r\n          </v-card>  \r\n          <br>\r\n          <br>\r\n          <v-row class=\"justify-center\">\r\n            <v-col cols=\"auto\">\r\n                <v-btn @click=\"nextTab('option-3')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\r\n            </v-col>\r\n          </v-row>\r\n          <br>   \r\n        </v-window-item>\r\n\t\t\t\t</v-form>\r\n\t\t\t</v-window>\r\n\t\t</v-container>\r\n\t</v-main>\r\n</template>\r\n<script>\r\nimport xmlbuilder from 'xmlbuilder'\r\nexport default {\r\n\tdata: () => ({\r\n\t\tenvironment_props: {\r\n\t\t\t\"temperature\": null,\r\n\t\t\t\"pressure\": null,\r\n\t\t\t\"humidity\": null,\r\n\t\t\t\"state\": null,\r\n\t\t\t\"cityName\": null,\r\n\t\t},\r\n\t\ttemperature_min: 0,\r\n\t\ttemperature_max: 100,\r\n\t\tpressure_min: 0,\r\n\t\tpressure_max: 1000,\r\n\t\tweatherData: null,\r\n\t\tlat: null,\r\n\t\tlon: null,\r\n\t\tdate: null,\r\n\t\tdialog1: null,\r\n\t\tdialog: null,\r\n\t\tage_min: 18,\r\n    age_max: 65,\r\n    core_temp_min: 0,\r\n    core_temp_max: 70,\r\n    heart_rate_min: 50,\r\n    heart_rate_max: 109,\r\n    resp_rate_min: 12,\r\n    resp_rate_max: 20,\r\n    height_min: 55,\r\n    height_max: 190,\r\n    height_units: ['cm', 'in'],\r\n    height_unit: 'cm',\r\n    weight_min: 20,\r\n    weight_max: 250,\r\n    weight_units: ['kg', 'lb'],\r\n    weight_unit: 'kg',\r\n    time_min: 0,\r\n    time_max: 60,\r\n    action_time: 0,\r\n    action_unit: 'min',\r\n    sev_min: 0,\r\n    sev_max: 1,\r\n    med_options: ['A', 'B', 'C'],\r\n    tab: 'home',\r\n    name: [],\r\n    sides: ['Left', 'Right'],\r\n    open_closed: ['Open', 'Closed'],\r\n    drawer: false,\r\n    valid: true,\r\n    expanded: [0],\r\n    scenario_file_name: [],\r\n    action: [],\r\n    //   { region: [],\r\n    //     type: [],\r\n    //   },\r\n    // ],\r\n    colors: {\r\n      'Head':'black',\r\n      'Neck': 'black', \r\n      'Chest': 'black', \r\n      'Back':'black',\r\n      'Abdomen':'black', \r\n      'Pelvis':'black',\r\n      'Extremities':'black',\r\n    },\r\n    patient_props: {\r\n      \"Name\": [],\r\n      \"Sex\": [],\r\n      \"age\": 44,\r\n      \"weight\": 65,\r\n      \"height\": 170\r\n      \r\n    },\r\n    patient_vitals: {\r\n      \"BloodTypeABO\": 'AB',\r\n      \"BloodTypeRh\": 'Positive',\r\n      \"DiastolicArterialPressureBaseline\": [],\r\n      \"HeartRateBaseline\": 72,\r\n      \"RespirationRateBaseline\": 14,\r\n      \"SystolicArterialPressureBaseline\":[]\r\n    },\r\n    scenario_props: {\r\n      'Name': [],\r\n      'Description': [],\r\n    },\r\n    genders: [\r\n      'Male',\r\n      'Female'\r\n    ],\r\n    patient_body: {\r\n      'Head':['Hemorrhage', 'Brain Injury', 'Acute Stress', 'Burn Wound'],\r\n      'Neck':['Airway Obstruction', 'Apnea', 'Burn Wound'], \r\n      'Chest':['Asthma Attack', 'Acute Respiratory Distress', 'Bronchoconstriction', 'Cardiac Arrest', 'Tension Pneumothorax', 'Burn Wound', 'Hemorrhage'], \r\n      'Back':['Burn Wound'],\r\n      'Abdomen':['Burn Wound'], \r\n      'Pelvis':['Burn Wound'],\r\n      'Extremities':['Burn Wound', 'Hemorrhage'],\r\n    },\r\n    hemorrhage_regions: {\r\n      'Head': ['Brain'],\r\n      'Chest': ['Aorta', 'Myocardium', 'Vena Cava', 'Lung'],\r\n      'Abdomen': ['Spleen', 'Liver', 'LeftKidney', 'RightKidney', 'Splanchnic', 'SmallIntestine', 'LargeIntestine'],\r\n      'Extremities': ['LeftArm', 'RightArm', 'LeftLeg', 'RightLeg']\r\n    },\r\n    brain_injury_types: [\r\n      'Diffuse',\r\n      'LeftFocal',\r\n      'RightFocal'\r\n    ],\r\n    body_regions: [\r\n      'Head',\r\n      'Neck', \r\n      'Chest', \r\n      'Back',\r\n      'Abdomen', \r\n      'Pelvis',\r\n      'Extremities']\r\n    ,\r\n    blood_types: [\r\n      'A',\r\n      'B',\r\n      'AB',\r\n      'O'\r\n    ],\r\n    rh: [\r\n      'Positive',\r\n      'Negative'\r\n    ],\r\n    time_units: [\r\n      's',\r\n      'min',\r\n      'hr'\r\n    ]\r\n  }),\r\n\tmethods: {\r\n\t\tchangeColors() {\r\n\t\t\tconst selected_regions = []\r\n\t\t\tfor (var actions in this.action) {\r\n\t\t\t\tselected_regions.push(this.action[actions]['region'])\r\n\t\t\t}\r\n\t\t\tconsole.log(selected_regions)\r\n\t\t\t\tfor (let region of this.body_regions) {\r\n\t\t\t\t\tif (selected_regions.includes(region)) {\r\n\t\t\t\t\t\tthis.colors[region] = 'red';\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.colors[region] = 'black';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t},\r\n\t\tnextTab(id) {\r\n\t\t\t\tthis.tab = id;\r\n    },\r\n\t\t\taddAction() {\r\n\t\t\t\tthis.action.push({\r\n\t\t\t\t\tregion: '',\r\n\t\t\t\t\ttype: '',\r\n\t\t\t\t\tseverity: ''\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tremoveAction(index) {\r\n\t\t\t\tthis.action.splice(index, 1);\r\n\t\t\t},\r\n\t\t\tvalidate() {\r\n\t\t\t\tthis.$refs.form.validate()\r\n\t\t\t},\r\n\t\t\treset() {\r\n\t\t\t\tthis.$refs.form.reset()\r\n\t\t\t},\r\n\t\t\tpathClicked(id) {\r\n\t\t\t\tlet pathElement = document.getElementById(id);\r\n\t\t\t\tif(this.action.some(x => Object.keys(x).includes('Head'))) { // this.action.some(x => Object.keys(x).includes(id))\r\n\t\t\t\t\tthis.action.splice(-1, 1) // = this.name.filter(x => !Object.keys(x).includes(id)); // this.name.push({[id]: ''})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.action.push({\r\n            region: id,\r\n            type: '',\r\n            severity: '',\r\n        })\r\n\t\t\t\t}\r\n\t\t\t\tif(pathElement.classList.contains(\"active\")) {\r\n\t\t\t\t\t// pathElement.classList.remove(\"active\");\r\n          this.colors[id] = 'black';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// pathElement.classList.add(\"active\");\r\n          this.colors[id] = 'red';\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tsaveStateXML() {\r\n\t\t\t\tconst xml = xmlbuilder.create('Patient', {\r\n\t\t\t\t\tencoding: 'UTF-8',\r\n\t\t\t\t\tstandalone: \"yes\"\r\n\t\t\t\t})\r\n\t\t\t\txml.att({\r\n\t\t\t\t\t'xmlns': \"uri:/mil/tatrc/physiology/datamodel\",\r\n\t\t\t\t\t'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\r\n\t\t\t\t\t'contentVersion': \"BioGears_7.5\"\r\n\t\t\t\t})\r\n\t\t\t\tfor(var key1 in this.patient_props) {\r\n\t\t\t\t\tif(key1 == 'age') {\r\n\t\t\t\t\t\tconst Age = xml.ele('Age')\r\n\t\t\t\t\t\tAge.att('value', this.patient_props[key1])\r\n\t\t\t\t\t\tAge.att('units', 'yr')\r\n\t\t\t\t\t} else if (key1 == 'height') {\r\n\t\t\t\t\t\tconst Height = xml.ele('Height')\r\n\t\t\t\t\t\tHeight.att('readOnly', 'false')\r\n\t\t\t\t\t\tHeight.att('value', this.patient_props[key1])\r\n\t\t\t\t\t\tHeight.att('unit', this.height_unit)\r\n\t\t\t\t\t} else if (key1 == 'weight') {\r\n\t\t\t\t\t\tconst Weight = xml.ele('Weight')\r\n\t\t\t\t\t\tWeight.att('readOnly', 'false')\r\n\t\t\t\t\t\tWeight.att('value', this.patient_props[key1])\r\n\t\t\t\t\t\tWeight.att('unit', this.weight_unit)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\txml.ele(key1, this.patient_props[key1])\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor(var key2 in this.patient_vitals) {\r\n\t\t\t\t\tif(key2 == 'BloodTypeRh') {\r\n\t\t\t\t\t\tif(this.patient_vitals[key2] == 'Positive') {\r\n\t\t\t\t\t\t\txml.ele(key2, 'true')\r\n\t\t\t\t\t\t} else if(this.patient_vitals[key2] == 'Negative') {\r\n\t\t\t\t\t\t\txml.ele(key2, 'false')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if(key2 == 'DiastolicArterialPressureBaseline') {\r\n\t\t\t\t\t\tconst DiastolicArterialPressureBaseline = xml.ele('DiastolicArterialPressureBaseline')\r\n\t\t\t\t\t\tDiastolicArterialPressureBaseline.att('value', this.patient_vitals[key2])\r\n\t\t\t\t\t\tDiastolicArterialPressureBaseline.att('units', 'mmHg')\r\n\t\t\t\t\t} else if(key2 == 'SystolicArterialPressureBaseline') {\r\n\t\t\t\t\t\tconst SystolicArterialPressureBaseline = xml.ele('SystolicArterialPressureBaseline')\r\n\t\t\t\t\t\tSystolicArterialPressureBaseline.att('value', this.patient_vitals[key2])\r\n\t\t\t\t\t\tSystolicArterialPressureBaseline.att('units', 'mmHg')\r\n\t\t\t\t\t} else if(key2 == 'HeartRateBaseline') {\r\n\t\t\t\t\t\tconst HeartRate = xml.ele('HeartRateBaseline')\r\n\t\t\t\t\t\tHeartRate.att('value', this.patient_vitals[key2])\r\n\t\t\t\t\t\tHeartRate.att('units', '1/min')\r\n\t\t\t\t\t} else if(key2 == 'RespirationRateBaseline') {\r\n\t\t\t\t\t\tconst RespRate = xml.ele('RespirationRateBaseline')\r\n\t\t\t\t\t\tRespRate.att('value', this.patient_vitals[key2])\r\n\t\t\t\t\t\tRespRate.att('units', '1/min')\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\txml.ele(key2, this.patient_vitals[key2])\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar xmlString = xml.end({\r\n\t\t\t\t\tpretty: true\r\n\t\t\t\t});\r\n\t\t\t\tconst blob = new Blob([xmlString], {\r\n\t\t\t\t\ttype: 'text/xml'\r\n\t\t\t\t})\r\n\t\t\t\tconst link = document.createElement('a')\r\n\t\t\t\tlink.href = URL.createObjectURL(blob)\r\n\t\t\t\tlink.download = 'patientdata.xml'\r\n\t\t\t\tlink.click()\r\n\t\t\t},\r\n\t\t\tsaveScenarioXML() {\r\n\t\t\t\tconst xml = xmlbuilder.create('Scenario', {\r\n\t\t\t\t\tencoding: 'UTF-8',\r\n\t\t\t\t\tstandalone: \"yes\"\r\n\t\t\t\t})\r\n\t\t\t\txml.att({\r\n\t\t\t\t\t'xmlns': \"uri:/mil/tatrc/physiology/datamodel\",\r\n\t\t\t\t\t'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\r\n\t\t\t\t\t'contentVersion': \"BioGears_7.5\"\r\n\t\t\t\t})\r\n\t\t\t\tfor(var key1 in this.scenario_props) {\r\n\t\t\t\t\txml.ele(key1, this.scenario_props[key1])\r\n\t\t\t\t}\r\n\t\t\t\tconst InitialParams = xml.ele('InitialParameters')\r\n\t\t\t\tInitialParams.ele('PatientFile', 'patientdata.xml')\r\n\t\t\t\tconst data_req = xml.ele('DataRequests')\r\n\t\t\t\tdata_req.att('SamplesPerSecond', 50)\r\n\t\t\t\tconst map = data_req.ele('DataRequest')\r\n\t\t\t\tmap.att('xsi:type', 'PhysiologyDataRequestData')\r\n\t\t\t\tmap.att('Name', 'MeanArterialPressure')\r\n\t\t\t\tmap.att('Unit', 'mmHg')\r\n\t\t\t\tmap.att('Precision', 1)\r\n\t\t\t\tconst sap = data_req.ele('DataRequest')\r\n\t\t\t\tsap.att('xsi:type', 'PhysiologyDataRequestData')\r\n\t\t\t\tsap.att('Name', 'SystolicArterialPressure')\r\n\t\t\t\tsap.att('Unit', 'mmHg')\r\n\t\t\t\tsap.att('Precision', 0)\r\n\t\t\t\tconst dap = data_req.ele('DataRequest')\r\n\t\t\t\tdap.att('xsi:type', 'PhysiologyDataRequestData')\r\n\t\t\t\tdap.att('Name', 'DiastolicArterialPressure')\r\n\t\t\t\tdap.att('Unit', 'mmHg')\r\n\t\t\t\tdap.att('Precision', 1)\r\n\t\t\t\tconst co = data_req.ele('DataRequest')\r\n\t\t\t\tco.att('xsi:type', 'PhysiologyDataRequestData')\r\n\t\t\t\tco.att('Name', 'CardiacOutput')\r\n\t\t\t\tco.att('Unit', 'L/min')\r\n\t\t\t\tco.att('Precision', 2)\r\n\t\t\t\tconst cvp = data_req.ele('DataRequest')\r\n\t\t\t\tcvp.att('xsi:type', 'PhysiologyDataRequestData')\r\n\t\t\t\tcvp.att('Name', 'CentralVenousPressure')\r\n\t\t\t\tcvp.att('Unit', 'mmHg')\r\n\t\t\t\tcvp.att('Precision', 2)\r\n\t\t\t\tconst hr = data_req.ele('DataRequest')\r\n\t\t\t\thr.att('xsi:type', 'PhysiologyDataRequestData')\r\n\t\t\t\thr.att('Name', 'HeartRate')\r\n\t\t\t\thr.att('Unit', '')\r\n\t\t\t\thr.att('Precision', 2)\r\n\t\t\t\tconst tv = data_req.ele('DataRequest')\r\n\t\t\t\ttv.att('xsi:type', 'PhysiologyDataRequestData')\r\n\t\t\t\ttv.att('Name', 'TidalVolume')\r\n\t\t\t\ttv.att('Unit', 'mL')\r\n\t\t\t\ttv.att('Precision', 3)\r\n\t\t\t\tconst rr = data_req.ele('DataRequest')\r\n\t\t\t\trr.att('xsi:type', 'PhysiologyDataRequestData')\r\n\t\t\t\trr.att('Name', 'RespirationRate')\r\n\t\t\t\trr.att('Unit', '1/min')\r\n\t\t\t\trr.att('Precision', 2)\r\n\t\t\t\tconst oxsat = data_req.ele('DataRequest')\r\n\t\t\t\toxsat.att('xsi:type', 'PhysiologyDataRequestData')\r\n\t\t\t\toxsat.att('Name', 'OxygenSaturation')\r\n\t\t\t\toxsat.att('Unit', 'unitless')\r\n\t\t\t\toxsat.att('Precision', 3)\r\n\t\t\t\tconst ct = data_req.ele('DataRequest')\r\n\t\t\t\tct.att('xsi:type', 'PhysiologyDataRequestData')\r\n\t\t\t\tct.att('Name', 'CoreTemperature')\r\n\t\t\t\tct.att('Unit', 'degC')\r\n\t\t\t\tct.att('Precision', 1)\r\n\t\t\t\tfor(var item2 in this.action) {\r\n\t\t\t\t\tconst act = xml.ele('Action')\r\n\t\t\t\t\tif(this.action[item2]['type'] == 'Tension Pneumothorax') {\r\n\t\t\t\t\t\tact.att('xsi:type', 'TensionPneumothoraxData')\r\n\t\t\t\t\t\tact.att('Type', this.action[item2]['openclose'])\r\n\t\t\t\t\t\tact.att('Side', this.action[item2]['side'])\r\n\t\t\t\t\t\tconst sev = act.ele('Severity')\r\n\t\t\t\t\t\tsev.att('value', this.action[item2]['severity'])\r\n\t\t\t\t\t} else if(this.action[item2]['type'] == 'Hemorrhage') {\r\n\t\t\t\t\t\tact.att('xsi:type', 'HemorrhageData')\r\n\t\t\t\t\t\tact.att('Compartment', this.action[item2]['compartment'])\r\n\t\t\t\t\t\tconst initrate = act.ele('InitialRate')\r\n\t\t\t\t\t\tinitrate.att('value', this.action[item2]['hemrate'])\r\n\t\t\t\t\t\tinitrate.att('unit', 'mL/min')\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tact.att('xsi:type', this.action[item2]['type'])\r\n\t\t\t\t\t\tconst sev = act.ele('Severity')\r\n\t\t\t\t\t\tsev.att('value', this.action[item2]['severity'])\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconst time_act = xml.ele('Action')\r\n\t\t\t\ttime_act.att('xsi:type', 'AdvanceTimeData')\r\n\t\t\t\tconst time = time_act.ele('Time')\r\n\t\t\t\ttime.att('value', this.action_time)\r\n\t\t\t\ttime.att('unit', this.action_unit)\r\n\t\t\t\tvar xmlString = xml.end({\r\n\t\t\t\t\tpretty: true\r\n\t\t\t\t});\r\n\t\t\t\tconst blob = new Blob([xmlString], {\r\n\t\t\t\t\ttype: 'text/xml'\r\n\t\t\t\t})\r\n\t\t\t\tconst link = document.createElement('a')\r\n\t\t\t\tlink.href = URL.createObjectURL(blob)\r\n\t\t\t\tlink.download = 'biogearsscenario.xml'\r\n\t\t\t\tlink.click()\r\n\t\t\t},\r\n\t\t\tsaveBiogearsFiles() {\r\n\t\t\t\tthis.saveStateXML()\r\n\t\t\t\tthis.saveScenarioXML()\r\n\t\t\t},\r\n\t\t\tasync pullEnvironmentData() {\r\n    const fetch = require('node-fetch'); // Only needed in Node.js environment\r\n    var apiKey = '7a72fefa61ba4a84959231957230205'; // Replace with your Weather API key\r\n    console.log(this.date);\r\n    try {\r\n        const response = await fetch(`http://api.weatherapi.com/v1/history.json?key=${apiKey}&q=${this.lat},${this.lon}&dt=${this.date}`);\r\n        const data = await response.json();\r\n        // Extract location information\r\n        const location = data.location;\r\n        this.environment_props['cityName'] = location.name;\r\n\t\tthis.environment_props['state'] = location.region;\r\n        if (data.forecast && data.forecast.forecastday && data.forecast.forecastday.length > 0) {\r\n            this.weatherData = data.forecast.forecastday[0].day;\r\n            this.environment_props['temperature'] = this.weatherData.avgtemp_c;\r\n            this.environment_props['humidity'] = this.weatherData.avghumidity;\r\n            console.log(`Temperature: ${this.environment_props['temperature']} °C`);\r\n            console.log(`Relative Humidity: ${this.environment_props['humidity']} %`);\r\n            console.log(data.forecast.forecastday[0].hour)\r\n\t\t\t// Calculate the sum of all pressure fields using the reduce() method\r\n\t\t\tconst sum = data.forecast.forecastday[0].hour.reduce((accumulator, currentObj) => {\r\n\t\t\treturn accumulator + currentObj.pressure_mb;\r\n\t\t\t}, 0);\r\n\t\t\t// Calculate the average by dividing the sum by the length of the dataArray\r\n\t\t\tthis.environment_props['pressure'] = sum / data.forecast.forecastday[0].hour.length / 1.33322;\r\n        } else {\r\n            console.log('No weather data found for the given location and date.');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching weather data:', error);\r\n    }\r\n},\r\n\r\n\t\t},\r\n}\r\n</script>\r\n<style>\r\n.my-content {\r\n\tmargin-top: -50px;\r\n\t/* Adjust the top margin */\r\n\t/* padding-left: 16px; Adjust the left padding */\r\n}\r\n\r\n@media (hover: hover) {\r\n\tsvg:hover {\r\n\t\tcursor: pointer;\r\n\t}\r\n\tsvg path:hover {\r\n\t\topacity: 0.8;\r\n\t}\r\n}\r\n\r\n#Head.active { \r\n  fill: rgb(238, 174, 0);\r\n}\r\n#Neck.active {\r\n\tfill: rgb(255, 0, 0);\r\n}\r\n\r\n#Chest.active {\r\n\tfill: rgb(255, 0, 0);\r\n}\r\n\r\n#Extremities.active {\r\n\tfill: rgb(255, 0, 0);\r\n}\r\n\r\n#Back.active {\r\n\tfill: rgb(255, 0, 0);\r\n}\r\n\r\n#Abdomen.active {\r\n  fill: rgb(255, 0, 0);\r\n}\r\n\r\n#Pelvis.active {\r\n\tfill: rgb(255, 0, 0);\r\n}\r\n\r\n.active {\r\n\tfill: rgb(238, 174, 0);\r\n}\r\n\r\n.noClick {\r\n\tpointer-events: none;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}