{"ast":null,"code":"export default {\n  data: () => ({\n    tab: 'option-1'\n  })\n};\n// import xmlbuilder from 'xmlbuilder'\n\n// export default {\n//   data: () => ({\n//     drawer: false,\n//     valid: true,\n//     expanded: [0],\n//     capability: [\n//       { required: [],\n//         name: [],\n//         data: [],\n//         propertyName: [],\n//         dataType: [],\n//         value: [] },\n//     ],\n//     scenario_props: {\n//       \"name\":[],\n//       \"authors\":[]\n//     },\n//     patient_props: {\n//       \"type\": [],\n//       \"name\": [],\n//       \"title\": [],\n//       \"age\": [],\n//       \"gender\": [],\n//       \"height\": [],\n//       \"weight\": [],\n//     },\n//     environment_props: {\n//       \"surrounding\": [],\n//       \"altitude\":[],\n//       \"temperature\":[],\n//       \"pressure\":[],\n//       \"co2\":[],\n//       \"sounds\":[],\n//       \"smells\":[]\n//     },\n//     ed_props: {\n//       'instruction':[],\n//       'narrative':[],\n//       'learnerCount':[],\n//       'role':[],\n//       'setup_checklist':[],\n//       'equipment':[],\n//       'supplies':[],\n//       'duration':[],\n//       'scenario_type':[],\n//       'assessment_type':[],\n//       'learner_group':[],\n//       'objectives':[],\n//       'task':[],\n//       'conditions':[],\n//       'exit_criteria':[]\n//     },\n//     nameRules: [\n//       v => !!v || 'Name is required',\n//     ],\n//     genders: [\n//       'Male',\n//       'Female'\n//     ],\n//     types: [\n//       'Medical Doctor',\n//       'Paramedic',\n//       'Nurse'\n//     ],\n//   }),\n//   methods: {\n//     addCapability() {\n//       this.capability.push({\n//         required: '',\n//         name: '',\n//         data: '',\n//         propertyName: '',\n//         dataType: '',\n//         value: ''\n//         });\n//     },\n//     removeCapability(index) {\n//       this.capability.splice(index, 1);\n//     },\n//     validate () {\n//       this.$refs.form.validate()\n//     },\n//     reset () {\n//       this.$refs.form.reset()\n//     },\n//     saveXML () {\n//       const xml = xmlbuilder.create('AMMConfiguration', {encoding: 'UTF-8'})\n//         xml.att({'xmlns:xsd':'http://www.w3.org/2001/XMLSchema',\n//               'xmlns:xsi':'http://www.w3.org/2001/XMLSchema-instance'\n//         })\n//         const metadata = xml.ele('metadata')\n//           for (var key1 in this.patient_props) {\n//             if (Array.isArray(this.patient_props[key1])) {\n//               for (var item1 in this.patient_props[key1]) {\n//                 metadata.ele(key1, this.patient_props[key1][item1])\n//               }\n//             } else {\n//               metadata.ele(key1, this.patient_props[key1])\n//             }\n//           }\n\n//           for (var key2 in this.environment_props) {\n//             if (Array.isArray(this.environment_props[key2])) {\n//               for (var item2 in this.environment_props[key2]) {\n//                 metadata.ele(key2, this.environment_props[key2][item2])\n//               }\n//             } else {\n//               metadata.ele(key2, this.environment_props[key2])\n//             }\n//           }\n//           for (var key3 in this.ed_props) {\n//             if (Array.isArray(this.ed_props[key3])) {\n//               for (var item3 in this.ed_props[key3]) {\n//                 metadata.ele(key3, this.ed_props[key3][item3])\n//               }\n//             } else {\n//               metadata.ele(key3, this.ed_props[key3])\n//             }\n//           }\n//           for (var item4 in this.capability) {\n//             for (var key4 in this.capability[item4]) {\n//                 metadata.ele(key4, this.capability[item4][key4])\n//               }\n//           }\n//       var xmlString = xml.end({ pretty: true });\n//       const blob = new Blob([xmlString], {type:'text/xml'})\n//       const link = document.createElement('a')\n//       link.href = URL.createObjectURL(blob)\n//       link.download = 'data.xml'\n//       link.click()\n//     }\n//   }\n// }","map":{"version":3,"mappings":"AA8cE,eAAe;EACbA,IAAI,EAAE,OAAO;IACXC,GAAG,EAAE;EACP,CAAC;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","names":["data","tab"],"sourceRoot":"","sources":["/Users/meganluu/Desktop/Capstone/MoHSES-Scenario-User-Interface/src/views/HomeTest.vue"],"sourcesContent":["<template>\n<v-card>\n    <v-toolbar\n      color=\"primary\"\n    >\n      <v-toolbar-title>User Profile</v-toolbar-title>\n    </v-toolbar>\n    <div class=\"d-flex flex-row\">\n      <v-tabs\n        v-model=\"tab\"\n        direction=\"vertical\"\n        color=\"primary\"\n      >\n        <v-tab value=\"option-1\">\n          <v-icon start>\n            mdi-account\n          </v-icon>\n          Option 1\n        </v-tab>\n        <v-tab value=\"option-2\">\n          <v-icon start>\n            mdi-lock\n          </v-icon>\n          Option 2\n        </v-tab>\n        <v-tab value=\"option-3\">\n          <v-icon start>\n            mdi-access-point\n          </v-icon>\n          Option 3\n        </v-tab>\n      </v-tabs>\n      <v-window v-model=\"tab\">\n        <v-window-item value=\"option-1\">\n          <v-card flat>\n            <v-card-text>\n              <v-form\n              ref=\"form\"\n              v-model=\"valid\"\n              lazy-validation\n            >\n              <v-select\n              v-model=\"patient_props['type']\"\n              :items=\"types\"\n              :rules=\"[v => !!v || 'Type is required']\"\n              label=\"Instructor Type\"\n              required\n            ></v-select>\n            </v-form>\n              <p>\n                Sed aliquam ultrices mauris. Donec posuere vulputate arcu. Morbi ac felis. Etiam feugiat lorem non metus. Sed a libero.\n              </p>\n\n              <p>\n                Nam ipsum risus, rutrum vitae, vestibulum eu, molestie vel, lacus. Aenean tellus metus, bibendum sed, posuere ac, mattis non, nunc. Aliquam lobortis. Aliquam lobortis. Suspendisse non nisl sit amet velit hendrerit rutrum.\n              </p>\n\n              <p class=\"mb-0\">\n                Phasellus dolor. Fusce neque. Fusce fermentum odio nec arcu. Pellentesque libero tortor, tincidunt et, tincidunt eget, semper nec, quam. Phasellus blandit leo ut odio.\n              </p>\n            </v-card-text>\n          </v-card>\n        </v-window-item>\n        <v-window-item value=\"option-2\">\n          <v-card flat>\n            <v-card-text>\n              <p>\n                Morbi nec metus. Suspendisse faucibus, nunc et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id tortor. Sed mollis, eros et ultrices tempus, mauris ipsum aliquam libero, non adipiscing dolor urna a orci. Curabitur ligula sapien, tincidunt non, euismod vitae, posuere imperdiet, leo. Nunc sed turpis.\n              </p>\n\n              <p>\n                Suspendisse feugiat. Suspendisse faucibus, nunc et pellentesque egestas, lacus ante convallis tellus, vitae iaculis lacus elit id tortor. Proin viverra, ligula sit amet ultrices semper, ligula arcu tristique sapien, a accumsan nisi mauris ac eros. In hac habitasse platea dictumst. Fusce ac felis sit amet ligula pharetra condimentum.\n              </p>\n\n              <p>\n                Sed consequat, leo eget bibendum sodales, augue velit cursus nunc, quis gravida magna mi a libero. Nam commodo suscipit quam. In consectetuer turpis ut velit. Sed cursus turpis vitae tortor. Aliquam eu nunc.\n              </p>\n\n              <p>\n                Etiam ut purus mattis mauris sodales aliquam. Ut varius tincidunt libero. Aenean viverra rhoncus pede. Duis leo. Fusce fermentum odio nec arcu.\n              </p>\n\n              <p class=\"mb-0\">\n                Donec venenatis vulputate lorem. Aenean viverra rhoncus pede. In dui magna, posuere eget, vestibulum et, tempor auctor, justo. Fusce commodo aliquam arcu. Suspendisse enim turpis, dictum sed, iaculis a, condimentum nec, nisi.\n              </p>\n            </v-card-text>\n          </v-card>\n        </v-window-item>\n        <v-window-item value=\"option-3\">\n          <v-card flat>\n            <v-card-text>\n              <p>\n                Fusce a quam. Phasellus nec sem in justo pellentesque facilisis. Nam eget dui. Proin viverra, ligula sit amet ultrices semper, ligula arcu tristique sapien, a accumsan nisi mauris ac eros. In dui magna, posuere eget, vestibulum et, tempor auctor, justo.\n              </p>\n\n              <p class=\"mb-0\">\n                Cras sagittis. Phasellus nec sem in justo pellentesque facilisis. Proin sapien ipsum, porta a, auctor quis, euismod ut, mi. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nam at tortor in tellus interdum sagittis.\n              </p>\n            </v-card-text>\n          </v-card>\n        </v-window-item>\n      </v-window>\n    </div>\n  </v-card>\n  \n  <v-main>\n  <v-row class=\"justify-center\">\n      <v-col cols=\"12\" sm=\"8\" md=\"6\">\n      <v-form\n        ref=\"form\"\n        v-model=\"valid\"\n        lazy-validation\n      >\n        <v-select\n          v-model=\"patient_props['type']\"\n          :items=\"types\"\n          :rules=\"[v => !!v || 'Type is required']\"\n          label=\"Instructor Type\"\n          required\n        ></v-select>\n\n        <v-expansion-panels v-model=\"expanded\">\n\n          <v-expansion-panel>\n          <v-expansion-panel-title>\n            Scenario Properties\n          </v-expansion-panel-title>\n          \n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"scenario_props['name']\"\n              label=\"Scenario Name\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"scenario_props['authors']\"\n              label=\"Authors\"\n              required\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          </v-expansion-panel>\n\n          <v-expansion-panel>\n          <v-expansion-panel-title>\n            Patient Properties\n          </v-expansion-panel-title>\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"patient_props['name']\"\n              :rules=\"nameRules\"\n              label=\"Name\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"patient_props['title']\"\n              :rules=\"nameRules\"\n              label=\"Title or Rank\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"patient_props['age']\"\n              :rules=\"nameRules\"\n              label=\"Age\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-select\n              v-model=\"patient_props['gender']\"\n              :items=\"genders\"\n              :rules=\"[v => !!v || 'Gender is required']\"\n              label=\"Gender\"\n              required\n            ></v-select>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"patient_props['height']\"\n              :rules=\"nameRules\"\n              label=\"Height [cm]\"\n              required\n              ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"patient_props['weight']\"\n              :rules=\"nameRules\"\n              label=\"Weight [kg]\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n          </v-expansion-panel>\n\n          <v-expansion-panel>\n          <v-expansion-panel-title>\n            Environment Properties\n          </v-expansion-panel-title>\n\n          <v-expansion-panel-text>\n            <v-textarea\n              v-model=\"environment_props['surrounding']\"\n              label=\"Surrounding\"\n            ></v-textarea>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"environment_props['altitude']\"\n              :rules=\"nameRules\"\n              label=\"Altitude or Elevation\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"environment_props['temperature']\"\n              :rules=\"nameRules\"\n              label=\"Temperature [C]\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"environment_props['pressure']\"\n              :rules=\"nameRules\"\n              label=\"Pressure [mmHg]\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"environment_props['co2']\"\n              :rules=\"nameRules\"\n              label=\"Ambient CO2 [fraction]\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"environment_props['sounds']\"\n              label=\"Ambient Sounds\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"environment_props['smells']\"\n              label=\"Smells\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          </v-expansion-panel>\n\n          <v-expansion-panel>\n          <v-expansion-panel-title>\n            Educational Encounter Properties\n          </v-expansion-panel-title>\n\n          <v-expansion-panel-text>\n            <v-textarea\n              v-model=\"ed_props['instruction']\"\n              label=\"Instructions\"\n            ></v-textarea>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-textarea\n              v-model=\"ed_props['narrative']\"\n              label=\"Narrative\"\n            ></v-textarea>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['learnerCount']\"\n              label=\"Number of Learners\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['role']\"\n              label=\"Roles\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['setup_checklist']\"\n              label=\"Setup Checklist\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['equipment']\"\n              label=\"Equipment\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['supplies']\"\n              label=\"Supplies\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['duration']\"\n              label=\"Estimated Duration\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['scenario_type']\"\n              label=\"Scenario Type\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['assessment_type']\"\n              label=\"Assessment Type\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['learner_group']\"\n              label=\"Learner Group\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['objectives']\"\n              label=\"Learning Objectives\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['task']\"\n              label=\"Task Descriptions\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['conditions']\"\n              label=\"Performance Conditions\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['exit_criteria']\"\n              label=\"Exit Criteria\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n          </v-expansion-panel>\n\n          <v-expansion-panel>\n          <v-expansion-panel-title>\n            Capabilities\n          </v-expansion-panel-title>\n          <v-expansion-panel-text>\n            <div v-for=\"(exp, index) in capability\" :key=\"index\">\n              <v-checkbox-btn v-model=\"exp.required\" label=\"Required\"></v-checkbox-btn>\n              <v-text-field v-model=\"exp.name\" label=\"Capability Name\"></v-text-field>\n              <v-text-field v-model=\"exp.data\" label=\"Configuration Data\"></v-text-field>\n              <v-text-field v-model=\"exp.propertyName\" label=\"Property Name\"></v-text-field>\n              <v-select v-model=\"exp.dataType\" label=\"Data Type\" :items=\"['string', 'number', 'boolean', 'option']\"></v-select>\n              <v-file-input v-model=\"exp.value\" label=\"Value\"></v-file-input>\n              <v-btn @click=\"removeCapability(index)\">Remove Capability</v-btn>\n              <br>\n              <br>\n            </div>\n            <v-btn @click=\"addCapability\">Add Capability</v-btn>\n          </v-expansion-panel-text>\n          </v-expansion-panel>\n\n\n        </v-expansion-panels>\n        <br>\n        <br>\n\n\n        <v-btn\n          :disabled=\"!valid\"\n          color=\"success\"\n          class=\"mr-4\"\n          @click=\"saveXML\"\n        >\n          Submit\n        </v-btn>\n\n        <v-btn\n          color=\"error\"\n          class=\"mr-4\"\n          @click=\"reset\"\n        >\n          Reset Form\n        </v-btn>\n\n      </v-form>\n      </v-col>\n      </v-row>\n\n    </v-main>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      tab: 'option-1',\n    }),\n  }\n  // import xmlbuilder from 'xmlbuilder'\n\n  // export default {\n  //   data: () => ({\n  //     drawer: false,\n  //     valid: true,\n  //     expanded: [0],\n  //     capability: [\n  //       { required: [],\n  //         name: [],\n  //         data: [],\n  //         propertyName: [],\n  //         dataType: [],\n  //         value: [] },\n  //     ],\n  //     scenario_props: {\n  //       \"name\":[],\n  //       \"authors\":[]\n  //     },\n  //     patient_props: {\n  //       \"type\": [],\n  //       \"name\": [],\n  //       \"title\": [],\n  //       \"age\": [],\n  //       \"gender\": [],\n  //       \"height\": [],\n  //       \"weight\": [],\n  //     },\n  //     environment_props: {\n  //       \"surrounding\": [],\n  //       \"altitude\":[],\n  //       \"temperature\":[],\n  //       \"pressure\":[],\n  //       \"co2\":[],\n  //       \"sounds\":[],\n  //       \"smells\":[]\n  //     },\n  //     ed_props: {\n  //       'instruction':[],\n  //       'narrative':[],\n  //       'learnerCount':[],\n  //       'role':[],\n  //       'setup_checklist':[],\n  //       'equipment':[],\n  //       'supplies':[],\n  //       'duration':[],\n  //       'scenario_type':[],\n  //       'assessment_type':[],\n  //       'learner_group':[],\n  //       'objectives':[],\n  //       'task':[],\n  //       'conditions':[],\n  //       'exit_criteria':[]\n  //     },\n  //     nameRules: [\n  //       v => !!v || 'Name is required',\n  //     ],\n  //     genders: [\n  //       'Male',\n  //       'Female'\n  //     ],\n  //     types: [\n  //       'Medical Doctor',\n  //       'Paramedic',\n  //       'Nurse'\n  //     ],\n  //   }),\n  //   methods: {\n  //     addCapability() {\n  //       this.capability.push({\n  //         required: '',\n  //         name: '',\n  //         data: '',\n  //         propertyName: '',\n  //         dataType: '',\n  //         value: ''\n  //         });\n  //     },\n  //     removeCapability(index) {\n  //       this.capability.splice(index, 1);\n  //     },\n  //     validate () {\n  //       this.$refs.form.validate()\n  //     },\n  //     reset () {\n  //       this.$refs.form.reset()\n  //     },\n  //     saveXML () {\n  //       const xml = xmlbuilder.create('AMMConfiguration', {encoding: 'UTF-8'})\n  //         xml.att({'xmlns:xsd':'http://www.w3.org/2001/XMLSchema',\n  //               'xmlns:xsi':'http://www.w3.org/2001/XMLSchema-instance'\n  //         })\n  //         const metadata = xml.ele('metadata')\n  //           for (var key1 in this.patient_props) {\n  //             if (Array.isArray(this.patient_props[key1])) {\n  //               for (var item1 in this.patient_props[key1]) {\n  //                 metadata.ele(key1, this.patient_props[key1][item1])\n  //               }\n  //             } else {\n  //               metadata.ele(key1, this.patient_props[key1])\n  //             }\n  //           }\n  \n  //           for (var key2 in this.environment_props) {\n  //             if (Array.isArray(this.environment_props[key2])) {\n  //               for (var item2 in this.environment_props[key2]) {\n  //                 metadata.ele(key2, this.environment_props[key2][item2])\n  //               }\n  //             } else {\n  //               metadata.ele(key2, this.environment_props[key2])\n  //             }\n  //           }\n  //           for (var key3 in this.ed_props) {\n  //             if (Array.isArray(this.ed_props[key3])) {\n  //               for (var item3 in this.ed_props[key3]) {\n  //                 metadata.ele(key3, this.ed_props[key3][item3])\n  //               }\n  //             } else {\n  //               metadata.ele(key3, this.ed_props[key3])\n  //             }\n  //           }\n  //           for (var item4 in this.capability) {\n  //             for (var key4 in this.capability[item4]) {\n  //                 metadata.ele(key4, this.capability[item4][key4])\n  //               }\n  //           }\n  //       var xmlString = xml.end({ pretty: true });\n  //       const blob = new Blob([xmlString], {type:'text/xml'})\n  //       const link = document.createElement('a')\n  //       link.href = URL.createObjectURL(blob)\n  //       link.download = 'data.xml'\n  //       link.click()\n  //     }\n  //   }\n  // }\n  </script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}