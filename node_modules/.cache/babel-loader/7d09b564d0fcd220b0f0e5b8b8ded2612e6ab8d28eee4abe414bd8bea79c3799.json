{"ast":null,"code":"import { atan2, cos, sin, sqrt } from \"../math.js\";\n\n// Note: 6-element arrays are used to denote the 3x3 affine transform matrix:\n// [a, b, c,\n//  d, e, f,\n//  0, 0, 1] - this redundant row is left out.\n\n// Transform matrix for [a0, a1] -> [b0, b1].\nexport default function (a, b) {\n  var u = subtract(a[1], a[0]),\n    v = subtract(b[1], b[0]),\n    phi = angle(u, v),\n    s = length(u) / length(v);\n  return multiply([1, 0, a[0][0], 0, 1, a[0][1]], multiply([s, 0, 0, 0, s, 0], multiply([cos(phi), sin(phi), 0, -sin(phi), cos(phi), 0], [1, 0, -b[0][0], 0, 1, -b[0][1]])));\n}\n\n// Inverts a transform matrix.\nexport function inverse(m) {\n  var k = 1 / (m[0] * m[4] - m[1] * m[3]);\n  return [k * m[4], -k * m[1], k * (m[1] * m[5] - m[2] * m[4]), -k * m[3], k * m[0], k * (m[2] * m[3] - m[0] * m[5])];\n}\n\n// Multiplies two 3x2 matrices.\nexport function multiply(a, b) {\n  return [a[0] * b[0] + a[1] * b[3], a[0] * b[1] + a[1] * b[4], a[0] * b[2] + a[1] * b[5] + a[2], a[3] * b[0] + a[4] * b[3], a[3] * b[1] + a[4] * b[4], a[3] * b[2] + a[4] * b[5] + a[5]];\n}\n\n// Subtracts 2D vectors.\nfunction subtract(a, b) {\n  return [a[0] - b[0], a[1] - b[1]];\n}\n\n// Magnitude of a 2D vector.\nfunction length(v) {\n  return sqrt(v[0] * v[0] + v[1] * v[1]);\n}\n\n// Angle between two 2D vectors.\nfunction angle(a, b) {\n  return atan2(a[0] * b[1] - a[1] * b[0], a[0] * b[0] + a[1] * b[1]);\n}","map":{"version":3,"names":["atan2","cos","sin","sqrt","a","b","u","subtract","v","phi","angle","s","length","multiply","inverse","m","k"],"sources":["C:/Users/sanik/Downloads/capstone/MoHSES-Scenario-User-Interface/node_modules/d3-geo-projection/src/polyhedral/matrix.js"],"sourcesContent":["import {atan2, cos, sin, sqrt} from \"../math.js\";\r\n\r\n// Note: 6-element arrays are used to denote the 3x3 affine transform matrix:\r\n// [a, b, c,\r\n//  d, e, f,\r\n//  0, 0, 1] - this redundant row is left out.\r\n\r\n// Transform matrix for [a0, a1] -> [b0, b1].\r\nexport default function(a, b) {\r\n  var u = subtract(a[1], a[0]),\r\n      v = subtract(b[1], b[0]),\r\n      phi = angle(u, v),\r\n      s = length(u) / length(v);\r\n\r\n  return multiply([\r\n    1, 0, a[0][0],\r\n    0, 1, a[0][1]\r\n  ], multiply([\r\n    s, 0, 0,\r\n    0, s, 0\r\n  ], multiply([\r\n    cos(phi), sin(phi), 0,\r\n    -sin(phi), cos(phi), 0\r\n  ], [\r\n    1, 0, -b[0][0],\r\n    0, 1, -b[0][1]\r\n  ])));\r\n}\r\n\r\n// Inverts a transform matrix.\r\nexport function inverse(m) {\r\n  var k = 1 / (m[0] * m[4] - m[1] * m[3]);\r\n  return [\r\n    k * m[4], -k * m[1], k * (m[1] * m[5] - m[2] * m[4]),\r\n    -k * m[3], k * m[0], k * (m[2] * m[3] - m[0] * m[5])\r\n  ];\r\n}\r\n\r\n// Multiplies two 3x2 matrices.\r\nexport function multiply(a, b) {\r\n  return [\r\n    a[0] * b[0] + a[1] * b[3],\r\n    a[0] * b[1] + a[1] * b[4],\r\n    a[0] * b[2] + a[1] * b[5] + a[2],\r\n    a[3] * b[0] + a[4] * b[3],\r\n    a[3] * b[1] + a[4] * b[4],\r\n    a[3] * b[2] + a[4] * b[5] + a[5]\r\n  ];\r\n}\r\n\r\n// Subtracts 2D vectors.\r\nfunction subtract(a, b) {\r\n  return [a[0] - b[0], a[1] - b[1]];\r\n}\r\n\r\n// Magnitude of a 2D vector.\r\nfunction length(v) {\r\n  return sqrt(v[0] * v[0] + v[1] * v[1]);\r\n}\r\n\r\n// Angle between two 2D vectors.\r\nfunction angle(a, b) {\r\n  return atan2(a[0] * b[1] - a[1] * b[0], a[0] * b[0] + a[1] * b[1]);\r\n}\r\n"],"mappings":"AAAA,SAAQA,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,QAAO,YAAY;;AAEhD;AACA;AACA;AACA;;AAEA;AACA,eAAe,UAASC,CAAC,EAAEC,CAAC,EAAE;EAC5B,IAAIC,CAAC,GAAGC,QAAQ,CAACH,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC;IACxBI,CAAC,GAAGD,QAAQ,CAACF,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC;IACxBI,GAAG,GAAGC,KAAK,CAACJ,CAAC,EAAEE,CAAC,CAAC;IACjBG,CAAC,GAAGC,MAAM,CAACN,CAAC,CAAC,GAAGM,MAAM,CAACJ,CAAC,CAAC;EAE7B,OAAOK,QAAQ,CAAC,CACd,CAAC,EAAE,CAAC,EAAET,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACb,CAAC,EAAE,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACd,EAAES,QAAQ,CAAC,CACVF,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAEA,CAAC,EAAE,CAAC,CACR,EAAEE,QAAQ,CAAC,CACVZ,GAAG,CAACQ,GAAG,CAAC,EAAEP,GAAG,CAACO,GAAG,CAAC,EAAE,CAAC,EACrB,CAACP,GAAG,CAACO,GAAG,CAAC,EAAER,GAAG,CAACQ,GAAG,CAAC,EAAE,CAAC,CACvB,EAAE,CACD,CAAC,EAAE,CAAC,EAAE,CAACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACd,CAAC,EAAE,CAAC,EAAE,CAACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACf,CAAC,CAAC,CAAC;AACN;;AAEA;AACA,OAAO,SAASS,OAAO,CAACC,CAAC,EAAE;EACzB,IAAIC,CAAC,GAAG,CAAC,IAAID,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,OAAO,CACLC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,EAAE,CAACC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,EAAEC,CAAC,IAAID,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,CAAC,EACpD,CAACC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,EAAEC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,EAAEC,CAAC,IAAID,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,CAAC,CACrD;AACH;;AAEA;AACA,OAAO,SAASF,QAAQ,CAACT,CAAC,EAAEC,CAAC,EAAE;EAC7B,OAAO,CACLD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,EACzBD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,EACzBD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,EAChCA,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,EACzBD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,EACzBD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,CACjC;AACH;;AAEA;AACA,SAASG,QAAQ,CAACH,CAAC,EAAEC,CAAC,EAAE;EACtB,OAAO,CAACD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,EAAED,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC;;AAEA;AACA,SAASO,MAAM,CAACJ,CAAC,EAAE;EACjB,OAAOL,IAAI,CAACK,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC;;AAEA;AACA,SAASE,KAAK,CAACN,CAAC,EAAEC,CAAC,EAAE;EACnB,OAAOL,KAAK,CAACI,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,EAAED,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE"},"metadata":{},"sourceType":"module","externalDependencies":[]}