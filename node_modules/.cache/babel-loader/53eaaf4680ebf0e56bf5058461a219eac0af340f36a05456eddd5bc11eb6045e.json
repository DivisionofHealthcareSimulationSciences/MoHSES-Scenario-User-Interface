{"ast":null,"code":"// Generated by CoffeeScript 2.4.1\n(function () {\n  var NodeType, XMLDummy, XMLNode;\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType');\n\n  // Represents a  raw node\n  module.exports = XMLDummy = class XMLDummy extends XMLNode {\n    // Initializes a new instance of `XMLDummy`\n\n    // `XMLDummy` is a special node representing a node with \n    // a null value. Dummy nodes are created while recursively\n    // building the XML tree. Simply skipping null values doesn't\n    // work because that would break the recursive chain.\n    constructor(parent) {\n      super(parent);\n      this.type = NodeType.Dummy;\n    }\n\n    // Creates and returns a deep clone of `this`\n    clone() {\n      return Object.create(this);\n    }\n\n    // Converts the XML fragment to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return '';\n    }\n  };\n}).call(this);","map":{"version":3,"names":["NodeType","XMLDummy","XMLNode","require","module","exports","constructor","parent","type","Dummy","clone","Object","create","toString","options","call"],"sources":["C:/Users/sanik/Downloads/capstone/MoHSES-Scenario-User-Interface/node_modules/xmlbuilder/lib/XMLDummy.js"],"sourcesContent":["// Generated by CoffeeScript 2.4.1\r\n(function() {\r\n  var NodeType, XMLDummy, XMLNode;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  // Represents a  raw node\r\n  module.exports = XMLDummy = class XMLDummy extends XMLNode {\r\n    // Initializes a new instance of `XMLDummy`\r\n\r\n    // `XMLDummy` is a special node representing a node with \r\n    // a null value. Dummy nodes are created while recursively\r\n    // building the XML tree. Simply skipping null values doesn't\r\n    // work because that would break the recursive chain.\r\n    constructor(parent) {\r\n      super(parent);\r\n      this.type = NodeType.Dummy;\r\n    }\r\n\r\n    // Creates and returns a deep clone of `this`\r\n    clone() {\r\n      return Object.create(this);\r\n    }\r\n\r\n    // Converts the XML fragment to string\r\n\r\n    // `options.pretty` pretty prints the result\r\n    // `options.indent` indentation for pretty print\r\n    // `options.offset` how many indentations to add to every line for pretty print\r\n    // `options.newline` newline sequence for pretty print\r\n    toString(options) {\r\n      return '';\r\n    }\r\n\r\n  };\r\n\r\n}).call(this);\r\n"],"mappings":"AAAA;AACA,CAAC,YAAW;EACV,IAAIA,QAAQ,EAAEC,QAAQ,EAAEC,OAAO;EAE/BA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;EAE9BH,QAAQ,GAAGG,OAAO,CAAC,YAAY,CAAC;;EAEhC;EACAC,MAAM,CAACC,OAAO,GAAGJ,QAAQ,GAAG,MAAMA,QAAQ,SAASC,OAAO,CAAC;IACzD;;IAEA;IACA;IACA;IACA;IACAI,WAAW,CAACC,MAAM,EAAE;MAClB,KAAK,CAACA,MAAM,CAAC;MACb,IAAI,CAACC,IAAI,GAAGR,QAAQ,CAACS,KAAK;IAC5B;;IAEA;IACAC,KAAK,GAAG;MACN,OAAOC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;IAC5B;;IAEA;;IAEA;IACA;IACA;IACA;IACAC,QAAQ,CAACC,OAAO,EAAE;MAChB,OAAO,EAAE;IACX;EAEF,CAAC;AAEH,CAAC,EAAEC,IAAI,CAAC,IAAI,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}