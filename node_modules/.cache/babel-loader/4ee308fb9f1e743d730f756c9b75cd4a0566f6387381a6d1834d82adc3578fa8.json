{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_select = _resolveComponent(\"v-select\");\n  const _component_v_expansion_panel_title = _resolveComponent(\"v-expansion-panel-title\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_expansion_panel_text = _resolveComponent(\"v-expansion-panel-text\");\n  const _component_v_combobox = _resolveComponent(\"v-combobox\");\n  const _component_v_expansion_panel = _resolveComponent(\"v-expansion-panel\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_checkbox_btn = _resolveComponent(\"v-checkbox-btn\");\n  const _component_v_file_input = _resolveComponent(\"v-file-input\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_expansion_panels = _resolveComponent(\"v-expansion-panels\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_main = _resolveComponent(\"v-main\");\n  return _openBlock(), _createBlock(_component_v_main, null, {\n    default: _withCtx(() => [_createVNode(_component_v_row, {\n      class: \"justify-center\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"12\",\n        sm: \"8\",\n        md: \"6\"\n      }, {\n        default: _withCtx(() => [_createCommentVNode(\" v-if=\\\"type === 'Medical Doctor' || type === 'Paramedic'\\\" \"), _createVNode(_component_v_form, {\n          ref: \"form\",\n          modelValue: _ctx.valid,\n          \"onUpdate:modelValue\": _cache[32] || (_cache[32] = $event => _ctx.valid = $event),\n          \"lazy-validation\": \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_select, {\n            modelValue: _ctx.patient_props['type'],\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.patient_props['type'] = $event),\n            items: _ctx.types,\n            rules: [v => !!v || 'Type is required'],\n            label: \"Instructor Type\",\n            required: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"rules\"]), _createVNode(_component_v_expansion_panels, {\n            modelValue: _ctx.expanded,\n            \"onUpdate:modelValue\": _cache[31] || (_cache[31] = $event => _ctx.expanded = $event)\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_expansion_panel, null, {\n              default: _withCtx(() => [_createVNode(_component_v_expansion_panel_title, null, {\n                default: _withCtx(() => [_createTextVNode(\" Scenario Properties \")]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.scenario_props['name'],\n                  \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.scenario_props['name'] = $event),\n                  label: \"Scenario Name\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                  modelValue: _ctx.scenario_props['authors'],\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.scenario_props['authors'] = $event),\n                  label: \"Authors\",\n                  required: \"\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _createVNode(_component_v_expansion_panel, null, {\n              default: _withCtx(() => [_createVNode(_component_v_expansion_panel_title, null, {\n                default: _withCtx(() => [_createTextVNode(\" Patient Properties \")]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.patient_props['name'],\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.patient_props['name'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Name\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.patient_props['title'],\n                  \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.patient_props['title'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Title or Rank\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.patient_props['age'],\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.patient_props['age'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Age\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_select, {\n                  modelValue: _ctx.patient_props['gender'],\n                  \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.patient_props['gender'] = $event),\n                  items: _ctx.genders,\n                  rules: [v => !!v || 'Gender is required'],\n                  label: \"Gender\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"rules\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.patient_props['height'],\n                  \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.patient_props['height'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Height [cm]\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.patient_props['weight'],\n                  \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => _ctx.patient_props['weight'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Weight [kg]\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _createVNode(_component_v_expansion_panel, null, {\n              default: _withCtx(() => [_createVNode(_component_v_expansion_panel_title, null, {\n                default: _withCtx(() => [_createTextVNode(\" Environment Properties \")]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_textarea, {\n                  modelValue: _ctx.environment_props['surrounding'],\n                  \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => _ctx.environment_props['surrounding'] = $event),\n                  label: \"Surrounding\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.environment_props['altitude'],\n                  \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => _ctx.environment_props['altitude'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Altitude or Elevation\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.environment_props['temperature'],\n                  \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => _ctx.environment_props['temperature'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Temperature [C]\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.environment_props['pressure'],\n                  \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => _ctx.environment_props['pressure'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Pressure [mmHg]\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.environment_props['co2'],\n                  \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => _ctx.environment_props['co2'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Ambient CO2 [fraction]\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                  modelValue: _ctx.environment_props['sounds'],\n                  \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => _ctx.environment_props['sounds'] = $event),\n                  label: \"Ambient Sounds\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                  modelValue: _ctx.environment_props['smells'],\n                  \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => _ctx.environment_props['smells'] = $event),\n                  label: \"Smells\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _createVNode(_component_v_expansion_panel, null, {\n              default: _withCtx(() => [_createVNode(_component_v_expansion_panel_title, null, {\n                default: _withCtx(() => [_createTextVNode(\" Educational Encounter Properties \")]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_textarea, {\n                  modelValue: _ctx.ed_props['instruction'],\n                  \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => _ctx.ed_props['instruction'] = $event),\n                  label: \"Instructions\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_textarea, {\n                  modelValue: _ctx.ed_props['narrative'],\n                  \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => _ctx.ed_props['narrative'] = $event),\n                  label: \"Narrative\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.ed_props['learnerCount'],\n                  \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => _ctx.ed_props['learnerCount'] = $event),\n                  label: \"Number of Learners\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.ed_props['role'],\n                  \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => _ctx.ed_props['role'] = $event),\n                  label: \"Roles\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                  modelValue: _ctx.ed_props['setup_checklist'],\n                  \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => _ctx.ed_props['setup_checklist'] = $event),\n                  label: \"Setup Checklist\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                  modelValue: _ctx.ed_props['equipment'],\n                  \"onUpdate:modelValue\": _cache[21] || (_cache[21] = $event => _ctx.ed_props['equipment'] = $event),\n                  label: \"Equipment\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                  modelValue: _ctx.ed_props['supplies'],\n                  \"onUpdate:modelValue\": _cache[22] || (_cache[22] = $event => _ctx.ed_props['supplies'] = $event),\n                  label: \"Supplies\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.ed_props['duration'],\n                  \"onUpdate:modelValue\": _cache[23] || (_cache[23] = $event => _ctx.ed_props['duration'] = $event),\n                  label: \"Estimated Duration\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.ed_props['scenario_type'],\n                  \"onUpdate:modelValue\": _cache[24] || (_cache[24] = $event => _ctx.ed_props['scenario_type'] = $event),\n                  label: \"Scenario Type\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.ed_props['assessment_type'],\n                  \"onUpdate:modelValue\": _cache[25] || (_cache[25] = $event => _ctx.ed_props['assessment_type'] = $event),\n                  label: \"Assessment Type\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.ed_props['learner_group'],\n                  \"onUpdate:modelValue\": _cache[26] || (_cache[26] = $event => _ctx.ed_props['learner_group'] = $event),\n                  label: \"Learner Group\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                  modelValue: _ctx.ed_props['objectives'],\n                  \"onUpdate:modelValue\": _cache[27] || (_cache[27] = $event => _ctx.ed_props['objectives'] = $event),\n                  label: \"Learning Objectives\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                  modelValue: _ctx.ed_props['task'],\n                  \"onUpdate:modelValue\": _cache[28] || (_cache[28] = $event => _ctx.ed_props['task'] = $event),\n                  label: \"Task Descriptions\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                  modelValue: _ctx.ed_props['conditions'],\n                  \"onUpdate:modelValue\": _cache[29] || (_cache[29] = $event => _ctx.ed_props['conditions'] = $event),\n                  label: \"Performance Conditions\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                  modelValue: _ctx.ed_props['exit_criteria'],\n                  \"onUpdate:modelValue\": _cache[30] || (_cache[30] = $event => _ctx.ed_props['exit_criteria'] = $event),\n                  label: \"Exit Criteria\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _createVNode(_component_v_expansion_panel, null, {\n              default: _withCtx(() => [_createVNode(_component_v_expansion_panel_title, null, {\n                default: _withCtx(() => [_createTextVNode(\" Capabilities \")]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.capability, (exp, index) => {\n                  return _openBlock(), _createElementBlock(\"div\", {\n                    key: index\n                  }, [_createVNode(_component_v_checkbox_btn, {\n                    modelValue: exp.required,\n                    \"onUpdate:modelValue\": $event => exp.required = $event,\n                    label: \"Required\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_v_text_field, {\n                    modelValue: exp.name,\n                    \"onUpdate:modelValue\": $event => exp.name = $event,\n                    label: \"Capability Name\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_v_text_field, {\n                    modelValue: exp.data,\n                    \"onUpdate:modelValue\": $event => exp.data = $event,\n                    label: \"Configuration Data\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_v_text_field, {\n                    modelValue: exp.propertyName,\n                    \"onUpdate:modelValue\": $event => exp.propertyName = $event,\n                    label: \"Property Name\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_v_select, {\n                    modelValue: exp.dataType,\n                    \"onUpdate:modelValue\": $event => exp.dataType = $event,\n                    label: \"Data Type\",\n                    items: ['string', 'number', 'boolean', 'option']\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_v_file_input, {\n                    modelValue: exp.value,\n                    \"onUpdate:modelValue\": $event => exp.value = $event,\n                    label: \"Value\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_v_btn, {\n                    onClick: $event => $options.removeCapability(index)\n                  }, {\n                    default: _withCtx(() => [_createTextVNode(\"Remove Capability\")]),\n                    _: 2 /* DYNAMIC */\n                  }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _hoisted_1, _hoisted_2]);\n                }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_v_btn, {\n                  onClick: $options.addCapability\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\"Add Capability\")]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"onClick\"])]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"]), _hoisted_3, _hoisted_4, _createVNode(_component_v_btn, {\n            disabled: !_ctx.valid,\n            color: \"success\",\n            class: \"mr-4\",\n            onClick: $options.saveXML\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" Submit \")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"disabled\", \"onClick\"]), _createVNode(_component_v_btn, {\n            color: \"error\",\n            class: \"mr-4\",\n            onClick: $options.reset\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" Reset Form \")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";gCAkUcA,oBAAI;gCACJA,oBAAI;gCAQVA,oBAAI;gCACJA,oBAAI;;;;;;;;;;;;;;;;;;uBA3UZC,aAmWaC;sBAlWX,MAgWY,CAhWZC,aAgWYC;MAhWLC,KAAK,EAAC;IAAgB;wBACzB,MA8VQ,CA9VRF,aA8VQG;QA9VDC,IAAI,EAAC,IAAI;QAACC,EAAE,EAAC,GAAG;QAACC,EAAE,EAAC;;0BAC3B,MAAiE,CAAjEC,mFAAiE,EACjEP,aA2VSQ;UA1VPC,GAAG,EAAC,MAAM;sBACDC,UAAK;uEAALA,UAAK;UACd,iBAAe,EAAf;;4BAGA,MAMY,CANZV,aAMYW;wBALDD,kBAAa;uEAAbA,kBAAa;YACrBE,KAAK,EAAEF,UAAK;YACZG,KAAK,GAAGC,CAAC,MAAMA,CAAC;YACjBC,KAAK,EAAC,iBAAiB;YACvBC,QAAQ,EAAR;qEAGFhB,aAuTqBiB;wBAvTQP,aAAQ;yEAARA,aAAQ;;8BAEnC,MAwBoB,CAxBpBV,aAwBoBkB;gCAvBpB,MAE0B,CAF1BlB,aAE0BmB;kCAFD,MAEzB,kBAFyB,uBAEzB;;kBAEAnB,aAMyBoB;kCALvB,MAIgB,CAJhBpB,aAIgBqB;8BAHLX,mBAAc;6EAAdA,mBAAc;kBACvBK,KAAK,EAAC,eAAe;kBACrBC,QAAQ,EAAR;;;kBAIJhB,aASyBoB;kCARvB,MAOc,CAPdpB,aAOcsB;8BANHZ,mBAAc;6EAAdA,mBAAc;kBACvBK,KAAK,EAAC,SAAS;kBACfC,QAAQ,EAAR,EAAQ;kBACRO,QAAQ,EAAR,EAAQ;kBACRC,KAAK,EAAL,EAAK;kBACLC,IAAI,EAAC;;;;;;gBAMTzB,aA0DoBkB;gCAzDpB,MAE0B,CAF1BlB,aAE0BmB;kCAFD,MAEzB,kBAFyB,sBAEzB;;kBACAnB,aAOyBoB;kCANvB,MAKgB,CALhBpB,aAKgBqB;8BAJLX,kBAAa;6EAAbA,kBAAa;kBACrBG,KAAK,EAAEH,cAAS;kBACjBK,KAAK,EAAC,MAAM;kBACZC,QAAQ,EAAR;;;kBAIJhB,aAOyBoB;kCANvB,MAKgB,CALhBpB,aAKgBqB;8BAJLX,kBAAa;6EAAbA,kBAAa;kBACrBG,KAAK,EAAEH,cAAS;kBACjBK,KAAK,EAAC,eAAe;kBACrBC,QAAQ,EAAR;;;kBAIJhB,aAOyBoB;kCANvB,MAKgB,CALhBpB,aAKgBqB;8BAJLX,kBAAa;6EAAbA,kBAAa;kBACrBG,KAAK,EAAEH,cAAS;kBACjBK,KAAK,EAAC,KAAK;kBACXC,QAAQ,EAAR;;;kBAIJhB,aAQyBoB;kCAPvB,MAMY,CANZpB,aAMYW;8BALDD,kBAAa;6EAAbA,kBAAa;kBACrBE,KAAK,EAAEF,YAAO;kBACdG,KAAK,GAAGC,CAAC,MAAMA,CAAC;kBACjBC,KAAK,EAAC,QAAQ;kBACdC,QAAQ,EAAR;;;kBAIJhB,aAOyBoB;kCANvB,MAKkB,CALlBpB,aAKkBqB;8BAJPX,kBAAa;6EAAbA,kBAAa;kBACrBG,KAAK,EAAEH,cAAS;kBACjBK,KAAK,EAAC,aAAa;kBACnBC,QAAQ,EAAR;;;kBAIJhB,aAOyBoB;kCANvB,MAKgB,CALhBpB,aAKgBqB;8BAJLX,kBAAa;6EAAbA,kBAAa;kBACrBG,KAAK,EAAEH,cAAS;kBACjBK,KAAK,EAAC,aAAa;kBACnBC,QAAQ,EAAR;;;;;;gBAKJhB,aAoEoBkB;gCAnEpB,MAE0B,CAF1BlB,aAE0BmB;kCAFD,MAEzB,kBAFyB,0BAEzB;;kBAEAnB,aAKyBoB;kCAJvB,MAGc,CAHdpB,aAGc0B;8BAFHhB,sBAAiB;6EAAjBA,sBAAiB;kBAC1BK,KAAK,EAAC;;;kBAIVf,aAOyBoB;kCANvB,MAKgB,CALhBpB,aAKgBqB;8BAJLX,sBAAiB;+EAAjBA,sBAAiB;kBACzBG,KAAK,EAAEH,cAAS;kBACjBK,KAAK,EAAC,uBAAuB;kBAC7BC,QAAQ,EAAR;;;kBAIJhB,aAOyBoB;kCANvB,MAKgB,CALhBpB,aAKgBqB;8BAJLX,sBAAiB;+EAAjBA,sBAAiB;kBACzBG,KAAK,EAAEH,cAAS;kBACjBK,KAAK,EAAC,iBAAiB;kBACvBC,QAAQ,EAAR;;;kBAIJhB,aAOyBoB;kCANvB,MAKgB,CALhBpB,aAKgBqB;8BAJLX,sBAAiB;+EAAjBA,sBAAiB;kBACzBG,KAAK,EAAEH,cAAS;kBACjBK,KAAK,EAAC,iBAAiB;kBACvBC,QAAQ,EAAR;;;kBAIJhB,aAOyBoB;kCANvB,MAKgB,CALhBpB,aAKgBqB;8BAJLX,sBAAiB;+EAAjBA,sBAAiB;kBACzBG,KAAK,EAAEH,cAAS;kBACjBK,KAAK,EAAC,wBAAwB;kBAC9BC,QAAQ,EAAR;;;kBAIJhB,aAQyBoB;kCAPvB,MAMc,CANdpB,aAMcsB;8BALHZ,sBAAiB;+EAAjBA,sBAAiB;kBAC1BK,KAAK,EAAC,gBAAgB;kBACtBQ,QAAQ,EAAR,EAAQ;kBACRC,KAAK,EAAL,EAAK;kBACLC,IAAI,EAAC;;;kBAITzB,aAQyBoB;kCAPvB,MAMc,CANdpB,aAMcsB;8BALHZ,sBAAiB;+EAAjBA,sBAAiB;kBAC1BK,KAAK,EAAC,QAAQ;kBACdQ,QAAQ,EAAR,EAAQ;kBACRC,KAAK,EAAL,EAAK;kBACLC,IAAI,EAAC;;;;;;gBAMTzB,aAkIoBkB;gCAjIpB,MAE0B,CAF1BlB,aAE0BmB;kCAFD,MAEzB,kBAFyB,oCAEzB;;kBAEAnB,aAKyBoB;kCAJvB,MAGc,CAHdpB,aAGc0B;8BAFHhB,aAAQ;+EAARA,aAAQ;kBACjBK,KAAK,EAAC;;;kBAIVf,aAKyBoB;kCAJvB,MAGc,CAHdpB,aAGc0B;8BAFHhB,aAAQ;+EAARA,aAAQ;kBACjBK,KAAK,EAAC;;;kBAIVf,aAKyBoB;kCAJvB,MAGgB,CAHhBpB,aAGgBqB;8BAFLX,aAAQ;+EAARA,aAAQ;kBACjBK,KAAK,EAAC;;;kBAIVf,aAKyBoB;kCAJvB,MAGgB,CAHhBpB,aAGgBqB;8BAFLX,aAAQ;+EAARA,aAAQ;kBACjBK,KAAK,EAAC;;;kBAIVf,aAQyBoB;kCAPvB,MAMc,CANdpB,aAMcsB;8BALHZ,aAAQ;+EAARA,aAAQ;kBACjBK,KAAK,EAAC,iBAAiB;kBACvBQ,QAAQ,EAAR,EAAQ;kBACRC,KAAK,EAAL,EAAK;kBACLC,IAAI,EAAC;;;kBAITzB,aAQyBoB;kCAPvB,MAMc,CANdpB,aAMcsB;8BALHZ,aAAQ;+EAARA,aAAQ;kBACjBK,KAAK,EAAC,WAAW;kBACjBQ,QAAQ,EAAR,EAAQ;kBACRC,KAAK,EAAL,EAAK;kBACLC,IAAI,EAAC;;;kBAITzB,aAQyBoB;kCAPvB,MAMc,CANdpB,aAMcsB;8BALHZ,aAAQ;+EAARA,aAAQ;kBACjBK,KAAK,EAAC,UAAU;kBAChBQ,QAAQ,EAAR,EAAQ;kBACRC,KAAK,EAAL,EAAK;kBACLC,IAAI,EAAC;;;kBAITzB,aAKyBoB;kCAJvB,MAGgB,CAHhBpB,aAGgBqB;8BAFLX,aAAQ;+EAARA,aAAQ;kBACjBK,KAAK,EAAC;;;kBAIVf,aAKyBoB;kCAJvB,MAGgB,CAHhBpB,aAGgBqB;8BAFLX,aAAQ;+EAARA,aAAQ;kBACjBK,KAAK,EAAC;;;kBAIVf,aAKyBoB;kCAJvB,MAGgB,CAHhBpB,aAGgBqB;8BAFLX,aAAQ;+EAARA,aAAQ;kBACjBK,KAAK,EAAC;;;kBAIVf,aAKyBoB;kCAJvB,MAGgB,CAHhBpB,aAGgBqB;8BAFLX,aAAQ;+EAARA,aAAQ;kBACjBK,KAAK,EAAC;;;kBAIVf,aAQyBoB;kCAPvB,MAMc,CANdpB,aAMcsB;8BALHZ,aAAQ;+EAARA,aAAQ;kBACjBK,KAAK,EAAC,qBAAqB;kBAC3BQ,QAAQ,EAAR,EAAQ;kBACRC,KAAK,EAAL,EAAK;kBACLC,IAAI,EAAC;;;kBAITzB,aAQyBoB;kCAPvB,MAMc,CANdpB,aAMcsB;8BALHZ,aAAQ;+EAARA,aAAQ;kBACjBK,KAAK,EAAC,mBAAmB;kBACzBQ,QAAQ,EAAR,EAAQ;kBACRC,KAAK,EAAL,EAAK;kBACLC,IAAI,EAAC;;;kBAITzB,aAQyBoB;kCAPvB,MAMc,CANdpB,aAMcsB;8BALHZ,aAAQ;+EAARA,aAAQ;kBACjBK,KAAK,EAAC,wBAAwB;kBAC9BQ,QAAQ,EAAR,EAAQ;kBACRC,KAAK,EAAL,EAAK;kBACLC,IAAI,EAAC;;;kBAITzB,aAQyBoB;kCAPvB,MAMc,CANdpB,aAMcsB;8BALHZ,aAAQ;+EAARA,aAAQ;kBACjBK,KAAK,EAAC,eAAe;kBACrBQ,QAAQ,EAAR,EAAQ;kBACRC,KAAK,EAAL,EAAK;kBACLC,IAAI,EAAC;;;;;;gBAKTzB,aAkBoBkB;gCAjBpB,MAE0B,CAF1BlB,aAE0BmB;kCAFD,MAEzB,kBAFyB,gBAEzB;;kBACAnB,aAayBoB;kCAZlB,MAAkC,oBAAvCO,oBAUMC,6BAVsBlB,eAAU,GAAzBmB,GAAG,EAAEC,KAAK;uCAAvBH,oBAUM;oBAVmCI,GAAG,EAAED;kBAAK,IACjD9B,aAAyEgC;gCAAhDH,GAAG,CAACb,QAAQ;qDAAZa,GAAG,CAACb,QAAQ;oBAAED,KAAK,EAAC;kFAC7Cf,aAAwEqB;gCAAjDQ,GAAG,CAACI,IAAI;qDAARJ,GAAG,CAACI,IAAI;oBAAElB,KAAK,EAAC;kFACvCf,aAA2EqB;gCAApDQ,GAAG,CAACK,IAAI;qDAARL,GAAG,CAACK,IAAI;oBAAEnB,KAAK,EAAC;kFACvCf,aAA8EqB;gCAAvDQ,GAAG,CAACM,YAAY;qDAAhBN,GAAG,CAACM,YAAY;oBAAEpB,KAAK,EAAC;kFAC/Cf,aAAiHW;gCAA9FkB,GAAG,CAACO,QAAQ;qDAAZP,GAAG,CAACO,QAAQ;oBAAErB,KAAK,EAAC,WAAW;oBAAEH,KAAK,EAAE;kFAC3DZ,aAA+DqC;gCAAxCR,GAAG,CAACS,KAAK;qDAATT,GAAG,CAACS,KAAK;oBAAEvB,KAAK,EAAC;kFACxCf,aAAiEuC;oBAAzDC,OAAK,YAAEC,yBAAgB,CAACX,KAAK;;sCAAG,MAAiB,kBAAjB,mBAAiB;;oEACzDY,UAAI,EACJC,UAAI;gDAEN3C,aAAoDuC;kBAA5CC,OAAK,EAAEC;gBAAa;oCAAE,MAAc,kBAAd,gBAAc;;;;;;;;;;6CAMhDG,UAAI,EACJC,UAAI,EAGJ7C,aAOQuC;YANLO,QAAQ,GAAGpC,UAAK;YACjBqC,KAAK,EAAC,SAAS;YACf7C,KAAK,EAAC,MAAM;YACXsC,OAAK,EAAEC;;8BACT,MAED,kBAFC,UAED;;sDAEAzC,aAMQuC;YALNQ,KAAK,EAAC,OAAO;YACb7C,KAAK,EAAC,MAAM;YACXsC,OAAK,EAAEC;;8BACT,MAED,kBAFC,cAED","names":["_createElementVNode","_createBlock","_component_v_main","_createVNode","_component_v_row","class","_component_v_col","cols","sm","md","_createCommentVNode","_component_v_form","ref","_ctx","_component_v_select","items","rules","v","label","required","_component_v_expansion_panels","_component_v_expansion_panel","_component_v_expansion_panel_title","_component_v_expansion_panel_text","_component_v_text_field","_component_v_combobox","multiple","chips","hint","_component_v_textarea","_createElementBlock","_Fragment","exp","index","key","_component_v_checkbox_btn","name","data","propertyName","dataType","_component_v_file_input","value","_component_v_btn","onClick","$options","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","disabled","color"],"sourceRoot":"","sources":["/Users/stlp/Desktop/BIOEN 404/User Interface/MoHSES-Scenario-User-Interface/src/views/HomeView.vue"],"sourcesContent":["<template>\n<v-main>\n  <v-row class=\"justify-center\">\n      <v-col cols=\"12\" sm=\"8\" md=\"6\">\n      <!-- v-if=\"type === 'Medical Doctor' || type === 'Paramedic'\" -->\n      <v-form\n        ref=\"form\"\n        v-model=\"valid\"\n        lazy-validation\n      >\n        \n        <v-select\n          v-model=\"patient_props['type']\"\n          :items=\"types\"\n          :rules=\"[v => !!v || 'Type is required']\"\n          label=\"Instructor Type\"\n          required\n        ></v-select>\n\n        <v-expansion-panels v-model=\"expanded\">\n\n          <v-expansion-panel>\n          <v-expansion-panel-title>\n            Scenario Properties\n          </v-expansion-panel-title>\n          \n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"scenario_props['name']\"\n              label=\"Scenario Name\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"scenario_props['authors']\"\n              label=\"Authors\"\n              required\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          </v-expansion-panel>\n\n          <v-expansion-panel>\n          <v-expansion-panel-title>\n            Patient Properties\n          </v-expansion-panel-title>\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"patient_props['name']\"\n              :rules=\"nameRules\"\n              label=\"Name\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"patient_props['title']\"\n              :rules=\"nameRules\"\n              label=\"Title or Rank\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"patient_props['age']\"\n              :rules=\"nameRules\"\n              label=\"Age\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-select\n              v-model=\"patient_props['gender']\"\n              :items=\"genders\"\n              :rules=\"[v => !!v || 'Gender is required']\"\n              label=\"Gender\"\n              required\n            ></v-select>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"patient_props['height']\"\n              :rules=\"nameRules\"\n              label=\"Height [cm]\"\n              required\n              ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"patient_props['weight']\"\n              :rules=\"nameRules\"\n              label=\"Weight [kg]\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n          </v-expansion-panel>\n\n          <v-expansion-panel>\n          <v-expansion-panel-title>\n            Environment Properties\n          </v-expansion-panel-title>\n\n          <v-expansion-panel-text>\n            <v-textarea\n              v-model=\"environment_props['surrounding']\"\n              label=\"Surrounding\"\n            ></v-textarea>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"environment_props['altitude']\"\n              :rules=\"nameRules\"\n              label=\"Altitude or Elevation\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"environment_props['temperature']\"\n              :rules=\"nameRules\"\n              label=\"Temperature [C]\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"environment_props['pressure']\"\n              :rules=\"nameRules\"\n              label=\"Pressure [mmHg]\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"environment_props['co2']\"\n              :rules=\"nameRules\"\n              label=\"Ambient CO2 [fraction]\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"environment_props['sounds']\"\n              label=\"Ambient Sounds\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"environment_props['smells']\"\n              label=\"Smells\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          </v-expansion-panel>\n\n          <v-expansion-panel>\n          <v-expansion-panel-title>\n            Educational Encounter Properties\n          </v-expansion-panel-title>\n\n          <v-expansion-panel-text>\n            <v-textarea\n              v-model=\"ed_props['instruction']\"\n              label=\"Instructions\"\n            ></v-textarea>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-textarea\n              v-model=\"ed_props['narrative']\"\n              label=\"Narrative\"\n            ></v-textarea>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['learnerCount']\"\n              label=\"Number of Learners\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['role']\"\n              label=\"Roles\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['setup_checklist']\"\n              label=\"Setup Checklist\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['equipment']\"\n              label=\"Equipment\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['supplies']\"\n              label=\"Supplies\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['duration']\"\n              label=\"Estimated Duration\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['scenario_type']\"\n              label=\"Scenario Type\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['assessment_type']\"\n              label=\"Assessment Type\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['learner_group']\"\n              label=\"Learner Group\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['objectives']\"\n              label=\"Learning Objectives\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['task']\"\n              label=\"Task Descriptions\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['conditions']\"\n              label=\"Performance Conditions\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['exit_criteria']\"\n              label=\"Exit Criteria\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n          </v-expansion-panel>\n\n          <v-expansion-panel>\n          <v-expansion-panel-title>\n            Capabilities\n          </v-expansion-panel-title>\n          <v-expansion-panel-text>\n            <div v-for=\"(exp, index) in capability\" :key=\"index\">\n              <v-checkbox-btn v-model=\"exp.required\" label=\"Required\"></v-checkbox-btn>\n              <v-text-field v-model=\"exp.name\" label=\"Capability Name\"></v-text-field>\n              <v-text-field v-model=\"exp.data\" label=\"Configuration Data\"></v-text-field>\n              <v-text-field v-model=\"exp.propertyName\" label=\"Property Name\"></v-text-field>\n              <v-select v-model=\"exp.dataType\" label=\"Data Type\" :items=\"['string', 'number', 'boolean', 'option']\"></v-select>\n              <v-file-input v-model=\"exp.value\" label=\"Value\"></v-file-input>\n              <v-btn @click=\"removeCapability(index)\">Remove Capability</v-btn>\n              <br>\n              <br>\n            </div>\n            <v-btn @click=\"addCapability\">Add Capability</v-btn>\n          </v-expansion-panel-text>\n          </v-expansion-panel>\n\n\n        </v-expansion-panels>\n        <br>\n        <br>\n\n\n        <v-btn\n          :disabled=\"!valid\"\n          color=\"success\"\n          class=\"mr-4\"\n          @click=\"saveXML\"\n        >\n          Submit\n        </v-btn>\n\n        <v-btn\n          color=\"error\"\n          class=\"mr-4\"\n          @click=\"reset\"\n        >\n          Reset Form\n        </v-btn>\n\n      </v-form>\n      </v-col>\n      </v-row>\n\n    </v-main>\n</template>\n\n<script>\n  import xmlbuilder from 'xmlbuilder'\n\n  export default {\n    data: () => ({\n      drawer: false,\n      valid: true,\n      expanded: [0],\n      capability: [\n        { employer: '', jobTitle: '', startYear: '', endYear: '' },\n      ],\n      scenario_props: {\n        \"name\":[],\n        \"authors\":[]\n      },\n      patient_props: {\n        \"type\": [],\n        \"name\": [],\n        \"title\": [],\n        \"age\": [],\n        \"gender\": [],\n        \"height\": [],\n        \"weight\": [],\n      },\n      environment_props: {\n        \"surrounding\": [],\n        \"altitude\":[],\n        \"temperature\":[],\n        \"pressure\":[],\n        \"co2\":[],\n        \"sounds\":[],\n        \"smells\":[]\n      },\n      ed_props: {\n        'instruction':[],\n        'narrative':[],\n        'learnerCount':[],\n        'role':[],\n        'setup_checklist':[],\n        'equipment':[],\n        'supplies':[],\n        'duration':[],\n        'scenario_type':[],\n        'assessment_type':[],\n        'learner_group':[],\n        'objectives':[],\n        'task':[],\n        'conditions':[],\n        'exit_criteria':[]\n      },\n      nameRules: [\n        v => !!v || 'Name is required',\n      ],\n      genders: [\n        'Male',\n        'Female'\n      ],\n      types: [\n        'Medical Doctor',\n        'Paramedic',\n        'Nurse'\n      ],\n    }),\n    methods: {\n      addCapability() {\n        this.capability.push({\n          required: '',\n          name: '',\n          data: '',\n          propertyName: '',\n          dataType: '',\n          value: ''\n          });\n      },\n      removeCapability(index) {\n        this.capability.splice(index, 1);\n      },\n      validate () {\n        this.$refs.form.validate()\n      },\n      reset () {\n        this.$refs.form.reset()\n      },\n      saveXML () {\n        const xml = xmlbuilder.create('AMMConfiguration', {encoding: 'UTF-8'})\n          xml.att({'xmlns:xsd':'http://www.w3.org/2001/XMLSchema',\n                'xmlns:xsi':'http://www.w3.org/2001/XMLSchema-instance'\n          })\n          const metadata = xml.ele('metadata')\n            for (var key1 in this.patient_props) {\n              if (Array.isArray(this.patient_props[key1])) {\n                for (var item1 in this.patient_props[key1]) {\n                  metadata.ele(key1, this.patient_props[key1][item1])\n                }\n              } else {\n                metadata.ele(key1, this.patient_props[key1])\n              }\n            }\n  \n            for (var key2 in this.environment_props) {\n              if (Array.isArray(this.environment_props[key2])) {\n                for (var item2 in this.environment_props[key2]) {\n                  metadata.ele(key2, this.environment_props[key2][item2])\n                }\n              } else {\n                metadata.ele(key2, this.environment_props[key2])\n              }\n            }\n            for (var key3 in this.ed_props) {\n              if (Array.isArray(this.ed_props[key3])) {\n                for (var item3 in this.ed_props[key3]) {\n                  metadata.ele(key3, this.ed_props[key3][item3])\n                }\n              } else {\n                metadata.ele(key3, this.ed_props[key3])\n              }\n            }\n            for (var key4 in this.capability) {\n              if (Array.isArray(this.ed_props[key3])) {\n                for (var item3 in this.ed_props[key3]) {\n                  metadata.ele(key3, this.ed_props[key3][item3])\n                }\n              } else {\n                metadata.ele(key3, this.ed_props[key3])\n              }\n            }\n        var xmlString = xml.end({ pretty: true });\n        const blob = new Blob([xmlString], {type:'text/xml'})\n        const link = document.createElement('a')\n        link.href = URL.createObjectURL(blob)\n        link.download = 'data.xml'\n        link.click()\n      }\n    }\n  }\n  </script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}