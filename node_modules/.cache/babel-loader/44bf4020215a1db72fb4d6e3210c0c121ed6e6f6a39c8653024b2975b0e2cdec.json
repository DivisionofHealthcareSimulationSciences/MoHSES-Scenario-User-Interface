{"ast":null,"code":"import * as d3 from 'd3';\nexport default {\n  data() {\n    return {\n      file: null,\n      data: null,\n      x: null,\n      y: null\n    };\n  },\n  methods: {\n    onFileSelected() {\n      const fileReader = new FileReader();\n      fileReader.onload = () => {\n        const data = d3.csvParse(fileReader.result);\n        this.data = data;\n        this.x = Object.keys(data[0])[0];\n        this.y = Object.keys(data[0])[1];\n        this.renderChart();\n      };\n      fileReader.readAsText(this.file);\n    },\n    renderChart() {\n      const margin = {\n        top: 10,\n        right: 30,\n        bottom: 30,\n        left: 60\n      };\n      const width = 500 - margin.left - margin.right;\n      const height = 300 - margin.top - margin.bottom;\n      const svg = d3.select(this.$refs.chart).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n      const xScale = d3.scaleLinear().domain([d3.min(this.data, d => Number(d[this.x])), d3.max(this.data, d => Number(d[this.x]))]).range([0, width]);\n      const yScale = d3.scaleLinear().domain([d3.min(this.data, d => Number(d[this.y])), d3.max(this.data, d => Number(d[this.y]))]).range([height, 0]);\n      const xAxis = d3.axisBottom(xScale);\n      const yAxis = d3.axisLeft(yScale);\n      svg.append(\"g\").attr(\"transform\", `translate(0, ${height})`).call(xAxis);\n      svg.append(\"g\").call(yAxis);\n      svg.selectAll(\"circle\").data(this.data).enter().append(\"circle\").attr(\"cx\", d => xScale(Number(d[this.x]))).attr(\"cy\", d => yScale(Number(d[this.y]))).attr(\"r\", 5);\n    }\n  }\n};","map":{"version":3,"mappings":"AAuBI,OAAO,KAAKA,EAAC,MAAO,IAAI;AAE5B,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI;MACVD,IAAI,EAAE,IAAI;MACVE,CAAC,EAAE,IAAI;MACPC,CAAC,EAAE;IACL,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,cAAc,GAAG;MACf,MAAMC,UAAS,GAAI,IAAIC,UAAU,EAAE;MACnCD,UAAU,CAACE,MAAK,GAAI,MAAM;QACxB,MAAMR,IAAG,GAAID,EAAE,CAACU,QAAQ,CAACH,UAAU,CAACI,MAAM,CAAC;QAC3C,IAAI,CAACV,IAAG,GAAIA,IAAI;QAChB,IAAI,CAACE,IAAIS,MAAM,CAACC,IAAI,CAACZ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,IAAI,CAACG,IAAIQ,MAAM,CAACC,IAAI,CAACZ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,IAAI,CAACa,WAAW,EAAE;MACpB,CAAC;MACDP,UAAU,CAACQ,UAAU,CAAC,IAAI,CAACb,IAAI,CAAC;IAClC,CAAC;IACDY,WAAW,GAAG;MACZ,MAAME,MAAK,GAAI;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC;MAC3D,MAAMC,KAAI,GAAI,GAAE,GAAIL,MAAM,CAACI,IAAG,GAAIJ,MAAM,CAACE,KAAK;MAC9C,MAAMI,MAAK,GAAI,GAAE,GAAIN,MAAM,CAACC,GAAE,GAAID,MAAM,CAACG,MAAM;MAE/C,MAAMI,GAAE,GAAIvB,EAAC,CACVwB,MAAM,CAAC,IAAI,CAACC,KAAK,CAACC,KAAK,EACvBC,MAAM,CAAC,KAAK,EACZC,IAAI,CAAC,OAAO,EAAEP,KAAI,GAAIL,MAAM,CAACI,IAAG,GAAIJ,MAAM,CAACE,KAAK,EAChDU,IAAI,CAAC,QAAQ,EAAEN,MAAK,GAAIN,MAAM,CAACC,GAAE,GAAID,MAAM,CAACG,MAAM,EAClDQ,MAAM,CAAC,GAAG,EACVC,IAAI,CAAC,WAAW,EAAG,aAAYZ,MAAM,CAACI,IAAK,KAAIJ,MAAM,CAACC,GAAI,GAAE,CAAC;MAEhE,MAAMY,MAAK,GAAI7B,EAAC,CACb8B,WAAW,EAAC,CACZC,MAAM,CAAC,CACN/B,EAAE,CAACgC,GAAG,CAAC,IAAI,CAAC/B,IAAI,EAAEgC,KAAKC,MAAM,CAACD,CAAC,CAAC,IAAI,CAAC9B,CAAC,CAAC,CAAC,CAAC,EACzCH,EAAE,CAACmC,GAAG,CAAC,IAAI,CAAClC,IAAI,EAAEgC,KAAKC,MAAM,CAACD,CAAC,CAAC,IAAI,CAAC9B,CAAC,CAAC,CAAC,CAAC,CAC1C,EACAiC,KAAK,CAAC,CAAC,CAAC,EAAEf,KAAK,CAAC,CAAC;MAEpB,MAAMgB,MAAK,GAAIrC,EAAC,CACb8B,WAAW,EAAC,CACZC,MAAM,CAAC,CACN/B,EAAE,CAACgC,GAAG,CAAC,IAAI,CAAC/B,IAAI,EAAEgC,KAAKC,MAAM,CAACD,CAAC,CAAC,IAAI,CAAC7B,CAAC,CAAC,CAAC,CAAC,EACzCJ,EAAE,CAACmC,GAAG,CAAC,IAAI,CAAClC,IAAI,EAAEgC,KAAKC,MAAM,CAACD,CAAC,CAAC,IAAI,CAAC7B,CAAC,CAAC,CAAC,CAAC,CAC1C,EACAgC,KAAK,CAAC,CAACd,MAAM,EAAE,CAAC,CAAC,CAAC;MAErB,MAAMgB,KAAI,GAAItC,EAAE,CAACuC,UAAU,CAACV,MAAM,CAAC;MACnC,MAAMW,KAAI,GAAIxC,EAAE,CAACyC,QAAQ,CAACJ,MAAM,CAAC;MAEjCd,GAAE,CACCI,MAAM,CAAC,GAAG,EACVC,IAAI,CAAC,WAAW,EAAG,gBAAeN,MAAO,GAAE,EAC3CoB,IAAI,CAACJ,KAAK,CAAC;MAEdf,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACe,IAAI,CAACF,KAAK,CAAC;MAE3BjB,GAAE,CACCoB,SAAS,CAAC,QAAQ,EAClB1C,IAAI,CAAC,IAAI,CAACA,IAAI,EACd2C,KAAK,EAAC,CACNjB,MAAM,CAAC,QAAQ,EACfC,IAAI,CAAC,IAAI,EAAEK,KAAKJ,MAAM,CAACK,MAAM,CAACD,CAAC,CAAC,IAAI,CAAC9B,CAAC,CAAC,CAAC,CAAC,EACzCyB,IAAI,CAAC,IAAI,EAAEK,KAAKI,MAAM,CAACH,MAAM,CAACD,CAAC,CAAC,IAAI,CAAC7B,CAAC,CAAC,CAAC,CAAC,EACzCwB,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACjB;EACF;AACF,CAAC","names":["d3","data","file","x","y","methods","onFileSelected","fileReader","FileReader","onload","csvParse","result","Object","keys","renderChart","readAsText","margin","top","right","bottom","left","width","height","svg","select","$refs","chart","append","attr","xScale","scaleLinear","domain","min","d","Number","max","range","yScale","xAxis","axisBottom","yAxis","axisLeft","call","selectAll","enter"],"sourceRoot":"","sources":["/Users/stlp/Desktop/Spring 2023/BIOEN 405/User Interface/MoHSES-Scenario-User-Interface/src/views/PlottingView.vue"],"sourcesContent":["<template>\n    <v-toolbar style=\"color: white\" color=\"#4b0082\">\n       <v-toolbar-title>BioGears Plotting Tool</v-toolbar-title>\n    </v-toolbar>\n    <v-main class=\"bg-grey-lighten-3\">\n       <v-container>\n          <v-card class=\"mt-n12\">\n             <v-card-text>\n                <p style=\"font-size: 20px\">Please upload your .CSV:</p>\n                <br>\n                <v-file-input\n                   v-model=\"file\"\n                   accept=\".csv\"\n                   label=\"Upload CSV\"\n                   @change=\"onFileSelected\"\n                   ></v-file-input>\n                   <div ref=\"chart\"></div>\n             </v-card-text>\n          </v-card>\n       </v-container>\n    </v-main>\n </template>\n <script>\n    import * as d3 from 'd3';\n\nexport default {\n  data() {\n    return {\n      file: null,\n      data: null,\n      x: null,\n      y: null,\n    };\n  },\n  methods: {\n    onFileSelected() {\n      const fileReader = new FileReader();\n      fileReader.onload = () => {\n        const data = d3.csvParse(fileReader.result);\n        this.data = data;\n        this.x = Object.keys(data[0])[0];\n        this.y = Object.keys(data[0])[1];\n        this.renderChart();\n      };\n      fileReader.readAsText(this.file);\n    },\n    renderChart() {\n      const margin = { top: 10, right: 30, bottom: 30, left: 60 };\n      const width = 500 - margin.left - margin.right;\n      const height = 300 - margin.top - margin.bottom;\n\n      const svg = d3\n        .select(this.$refs.chart)\n        .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n      const xScale = d3\n        .scaleLinear()\n        .domain([\n          d3.min(this.data, d => Number(d[this.x])),\n          d3.max(this.data, d => Number(d[this.x])),\n        ])\n        .range([0, width]);\n\n      const yScale = d3\n        .scaleLinear()\n        .domain([\n          d3.min(this.data, d => Number(d[this.y])),\n          d3.max(this.data, d => Number(d[this.y])),\n        ])\n        .range([height, 0]);\n\n      const xAxis = d3.axisBottom(xScale);\n      const yAxis = d3.axisLeft(yScale);\n\n      svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(0, ${height})`)\n        .call(xAxis);\n\n      svg.append(\"g\").call(yAxis);\n\n      svg\n        .selectAll(\"circle\")\n        .data(this.data)\n        .enter()\n        .append(\"circle\")\n        .attr(\"cx\", d => xScale(Number(d[this.x])))\n        .attr(\"cy\", d => yScale(Number(d[this.y])))\n        .attr(\"r\", 5);\n    },\n  },\n};\n\n </script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}