{"ast":null,"code":"import { geoAzimuthalEqualAreaRaw as azimuthalEqualAreaRaw, geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { asin, cos, sin } from \"./math.js\";\nexport function hammerRaw(A, B) {\n  if (arguments.length < 2) B = A;\n  if (B === 1) return azimuthalEqualAreaRaw;\n  if (B === Infinity) return hammerQuarticAuthalicRaw;\n  function forward(lambda, phi) {\n    var coordinates = azimuthalEqualAreaRaw(lambda / B, phi);\n    coordinates[0] *= A;\n    return coordinates;\n  }\n  forward.invert = function (x, y) {\n    var coordinates = azimuthalEqualAreaRaw.invert(x / A, y);\n    coordinates[0] *= B;\n    return coordinates;\n  };\n  return forward;\n}\nfunction hammerQuarticAuthalicRaw(lambda, phi) {\n  return [lambda * cos(phi) / cos(phi /= 2), 2 * sin(phi)];\n}\nhammerQuarticAuthalicRaw.invert = function (x, y) {\n  var phi = 2 * asin(y / 2);\n  return [x * cos(phi / 2) / cos(phi), phi];\n};\nexport default function () {\n  var B = 2,\n    m = projectionMutator(hammerRaw),\n    p = m(B);\n  p.coefficient = function (_) {\n    if (!arguments.length) return B;\n    return m(B = +_);\n  };\n  return p.scale(169.529);\n}","map":{"version":3,"names":["geoAzimuthalEqualAreaRaw","azimuthalEqualAreaRaw","geoProjectionMutator","projectionMutator","asin","cos","sin","hammerRaw","A","B","arguments","length","Infinity","hammerQuarticAuthalicRaw","forward","lambda","phi","coordinates","invert","x","y","m","p","coefficient","_","scale"],"sources":["C:/Users/sanik/Downloads/capstone/MoHSES-Scenario-User-Interface/node_modules/d3-geo-projection/src/hammer.js"],"sourcesContent":["import {geoAzimuthalEqualAreaRaw as azimuthalEqualAreaRaw, geoProjectionMutator as projectionMutator} from \"d3-geo\";\r\nimport {asin, cos, sin} from \"./math.js\";\r\n\r\nexport function hammerRaw(A, B) {\r\n  if (arguments.length < 2) B = A;\r\n  if (B === 1) return azimuthalEqualAreaRaw;\r\n  if (B === Infinity) return hammerQuarticAuthalicRaw;\r\n\r\n  function forward(lambda, phi) {\r\n    var coordinates = azimuthalEqualAreaRaw(lambda / B, phi);\r\n    coordinates[0] *= A;\r\n    return coordinates;\r\n  }\r\n\r\n  forward.invert = function(x, y) {\r\n    var coordinates = azimuthalEqualAreaRaw.invert(x / A, y);\r\n    coordinates[0] *= B;\r\n    return coordinates;\r\n  };\r\n\r\n  return forward;\r\n}\r\n\r\nfunction hammerQuarticAuthalicRaw(lambda, phi) {\r\n  return [\r\n    lambda * cos(phi) / cos(phi /= 2),\r\n    2 * sin(phi)\r\n  ];\r\n}\r\n\r\nhammerQuarticAuthalicRaw.invert = function(x, y) {\r\n  var phi = 2 * asin(y / 2);\r\n  return [\r\n    x * cos(phi / 2) / cos(phi),\r\n    phi\r\n  ];\r\n};\r\n\r\nexport default function() {\r\n  var B = 2,\r\n      m = projectionMutator(hammerRaw),\r\n      p = m(B);\r\n\r\n  p.coefficient = function(_) {\r\n    if (!arguments.length) return B;\r\n    return m(B = +_);\r\n  };\r\n\r\n  return p\r\n    .scale(169.529);\r\n}\r\n"],"mappings":"AAAA,SAAQA,wBAAwB,IAAIC,qBAAqB,EAAEC,oBAAoB,IAAIC,iBAAiB,QAAO,QAAQ;AACnH,SAAQC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAO,WAAW;AAExC,OAAO,SAASC,SAAS,CAACC,CAAC,EAAEC,CAAC,EAAE;EAC9B,IAAIC,SAAS,CAACC,MAAM,GAAG,CAAC,EAAEF,CAAC,GAAGD,CAAC;EAC/B,IAAIC,CAAC,KAAK,CAAC,EAAE,OAAOR,qBAAqB;EACzC,IAAIQ,CAAC,KAAKG,QAAQ,EAAE,OAAOC,wBAAwB;EAEnD,SAASC,OAAO,CAACC,MAAM,EAAEC,GAAG,EAAE;IAC5B,IAAIC,WAAW,GAAGhB,qBAAqB,CAACc,MAAM,GAAGN,CAAC,EAAEO,GAAG,CAAC;IACxDC,WAAW,CAAC,CAAC,CAAC,IAAIT,CAAC;IACnB,OAAOS,WAAW;EACpB;EAEAH,OAAO,CAACI,MAAM,GAAG,UAASC,CAAC,EAAEC,CAAC,EAAE;IAC9B,IAAIH,WAAW,GAAGhB,qBAAqB,CAACiB,MAAM,CAACC,CAAC,GAAGX,CAAC,EAAEY,CAAC,CAAC;IACxDH,WAAW,CAAC,CAAC,CAAC,IAAIR,CAAC;IACnB,OAAOQ,WAAW;EACpB,CAAC;EAED,OAAOH,OAAO;AAChB;AAEA,SAASD,wBAAwB,CAACE,MAAM,EAAEC,GAAG,EAAE;EAC7C,OAAO,CACLD,MAAM,GAAGV,GAAG,CAACW,GAAG,CAAC,GAAGX,GAAG,CAACW,GAAG,IAAI,CAAC,CAAC,EACjC,CAAC,GAAGV,GAAG,CAACU,GAAG,CAAC,CACb;AACH;AAEAH,wBAAwB,CAACK,MAAM,GAAG,UAASC,CAAC,EAAEC,CAAC,EAAE;EAC/C,IAAIJ,GAAG,GAAG,CAAC,GAAGZ,IAAI,CAACgB,CAAC,GAAG,CAAC,CAAC;EACzB,OAAO,CACLD,CAAC,GAAGd,GAAG,CAACW,GAAG,GAAG,CAAC,CAAC,GAAGX,GAAG,CAACW,GAAG,CAAC,EAC3BA,GAAG,CACJ;AACH,CAAC;AAED,eAAe,YAAW;EACxB,IAAIP,CAAC,GAAG,CAAC;IACLY,CAAC,GAAGlB,iBAAiB,CAACI,SAAS,CAAC;IAChCe,CAAC,GAAGD,CAAC,CAACZ,CAAC,CAAC;EAEZa,CAAC,CAACC,WAAW,GAAG,UAASC,CAAC,EAAE;IAC1B,IAAI,CAACd,SAAS,CAACC,MAAM,EAAE,OAAOF,CAAC;IAC/B,OAAOY,CAAC,CAACZ,CAAC,GAAG,CAACe,CAAC,CAAC;EAClB,CAAC;EAED,OAAOF,CAAC,CACLG,KAAK,CAAC,OAAO,CAAC;AACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}