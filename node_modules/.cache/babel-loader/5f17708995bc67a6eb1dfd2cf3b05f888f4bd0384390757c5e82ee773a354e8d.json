{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, mergeProps as _mergeProps } from \"vue\";\nimport _imports_0 from '@/assets/crest_logo.jpg';\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"14px\"\n  }\n}, \"This tool is designed to simplify the process of generating BioGears Scenario XML files. First, input patient information and healthy vitals to define a BioGears patient. Then configure injuries to define a specific patient scenario and click Submit. This will locally download BioGears-compatible Patient and Scenario XML files, which can then be inputted into BioGears via command line. After running BioGears with this file, user will have a MoHSES-compatible state file with data on the simulated injured patient's vitals.\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text-h4\"\n}, \"BioGears Guide\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, \"After generating the Custom Patient and Scenario files using the BioGears Scenario Creation Tool tab, users must run BioGears with the files in order to generate a MoHSES-compatible state file. The following are instructions on how to run BioGears: \", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"https://github.com/BioGearsEngine/core\"\n}, \"codebase\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"pre\", null, \"git clone https://github.com/BioGearsEngine/core.git \", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"https://github.com/BioGearsEngine/core/wiki/Build-Instructions\"\n}, \"Github Wiki\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"b\", null, \"For MacOS (M1/M2 chip): \", -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"pre\", null, \"/bin/bash -c \\\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\\\" \", -1 /* HOISTED */);\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"pre\", null, \"echo 'eval \\\"$(/opt/homebrew/bin/brew shellenv)\\\"' >> ~/.zprofile \", -1 /* HOISTED */);\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"pre\", null, \"eval \\\"$(/opt/homebrew/bin/brew shellenv)\\\"  \", -1 /* HOISTED */);\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"pre\", null, \"  brew install wget\\n  brew install git\\n  brew install ninja\\n  brew  install g++\\n  brew  install gcc\\n  brew  install eigen\\n  brew  install xerces-c\\n  brew  install xsd\\n  brew install cmake\\n\", -1 /* HOISTED */);\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"pre\", null, \"  cd ~/Desktop/biogears\\n  cd core\\n  mkdir build; cd build\\n  cmake -G \\\"Ninja\\\" -DCMAKE_INSTALL_PREFIX=~/Desktop/BiogearsInstall -DBiogears_BUILD_HOWTOS=ON ..\\n  ninja bg-cli\\n              \", -1 /* HOISTED */);\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"b\", null, \"For Windows:\", -1 /* HOISTED */);\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"i\", null, \"core/build/runtime/Scenarios/Patient\", -1 /* HOISTED */);\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"i\", null, \"core/build/runtime/patients\", -1 /* HOISTED */);\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"i\", null, \"core/build/runtime\", -1 /* HOISTED */);\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"pre\", null, \"../outputs/Release/bin/bg-cli SCENARIO ./Scenarios/Patient/CustomScenario.xml \", -1 /* HOISTED */);\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"i\", null, \"Scenarios/Patient folder\", -1 /* HOISTED */);\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"i\", null, \"core/build/runtime/states\", -1 /* HOISTED */);\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_29 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"20px\"\n  }\n}, \"Please enter patient information:\", -1 /* HOISTED */);\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_31 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_32 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_33 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"20px\"\n  }\n}, [/*#__PURE__*/_createTextVNode(\"Please enter \"), /*#__PURE__*/_createElementVNode(\"b\", null, \"healthy\"), /*#__PURE__*/_createTextVNode(\" patient vitals: \")], -1 /* HOISTED */);\nconst _hoisted_34 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_36 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_37 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"20px\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"b\", null, \"Optional:\"), /*#__PURE__*/_createTextVNode(\" Please enter environment properties: \")], -1 /* HOISTED */);\nconst _hoisted_38 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_39 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_40 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_41 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_42 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_43 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_44 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_45 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"20px\"\n  }\n}, \"Please enter a title and brief description for this patient scenario: \", -1 /* HOISTED */);\nconst _hoisted_46 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_47 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"20px\"\n  }\n}, \"Please configure patient injuries and timeline:\", -1 /* HOISTED */);\nconst _hoisted_48 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_49 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_50 = {\n  width: \"550px\",\n  height: \"600px\",\n  viewBox: \"15 0 20 100\",\n  version: \"1.1\",\n  id: \"svg46\",\n  \"sodipodi:docname\": \"human_sanika.svg\",\n  \"inkscape:version\": \"1.2.2 (732a01da63, 2022-12-09)\",\n  \"xmlns:inkscape\": \"http://www.inkscape.org/namespaces/inkscape\",\n  \"xmlns:sodipodi\": \"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  \"xmlns:svg\": \"http://www.w3.org/2000/svg\"\n};\nconst _hoisted_51 = /*#__PURE__*/_createElementVNode(\"defs\", {\n  id: \"defs50\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_52 = [\"fill\"];\nconst _hoisted_53 = [\"fill\"];\nconst _hoisted_54 = [\"fill\"];\nconst _hoisted_55 = [\"fill\"];\nconst _hoisted_56 = [\"fill\"];\nconst _hoisted_57 = [\"fill\"];\nconst _hoisted_58 = [\"fill\"];\nconst _hoisted_59 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_60 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_61 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_toolbar_title = _resolveComponent(\"v-toolbar-title\");\n  const _component_v_toolbar = _resolveComponent(\"v-toolbar\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_tab = _resolveComponent(\"v-tab\");\n  const _component_v_tabs = _resolveComponent(\"v-tabs\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_list_item_title = _resolveComponent(\"v-list-item-title\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_window_item = _resolveComponent(\"v-window-item\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_select = _resolveComponent(\"v-select\");\n  const _component_v_slider = _resolveComponent(\"v-slider\");\n  const _component_v_autocomplete = _resolveComponent(\"v-autocomplete\");\n  const _component_v_combobox = _resolveComponent(\"v-combobox\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_dialog = _resolveComponent(\"v-dialog\");\n  const _component_v_window = _resolveComponent(\"v-window\");\n  const _component_v_main = _resolveComponent(\"v-main\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_v_toolbar, {\n    color: \"#3c2d70\",\n    style: {\n      \"color\": \"white\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_toolbar_title, null, {\n      default: _withCtx(() => [_createTextVNode(\"BioGears Scenario Creation Tool\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }), _createVNode(_component_v_tabs, {\n    large: \"\",\n    modelValue: _ctx.tab,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.tab = $event),\n    color: \"#3c2d70\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_tab, {\n      value: \"home\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_icon, {\n        start: \"\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" mdi-home \")]),\n        _: 1 /* STABLE */\n      }), _createTextVNode(\" About this page \")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_tab, {\n      value: \"option-1\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_icon, {\n        start: \"\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" mdi-account \")]),\n        _: 1 /* STABLE */\n      }), _createTextVNode(\" Patient Information \")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_tab, {\n      value: \"option-2\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_icon, {\n        start: \"\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" mdi-access-point \")]),\n        _: 1 /* STABLE */\n      }), _createTextVNode(\" Patient Vitals \")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_tab, {\n      value: \"option-3\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_icon, {\n        start: \"\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" mdi-access-point \")]),\n        _: 1 /* STABLE */\n      }), _createTextVNode(\" Environment Properties \")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_tab, {\n      value: \"option-4\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_icon, {\n        start: \"\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" mdi-list-status \")]),\n        _: 1 /* STABLE */\n      }), _createTextVNode(\" Configure Patient Scenario \")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_main, {\n    class: \"bg-grey-lighten-3\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_container, null, {\n      default: _withCtx(() => [_createVNode(_component_v_window, {\n        modelValue: _ctx.tab,\n        \"onUpdate:modelValue\": _cache[54] || (_cache[54] = $event => _ctx.tab = $event),\n        class: \"mt-n12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_form, {\n          ref: \"form\",\n          modelValue: _ctx.valid,\n          \"onUpdate:modelValue\": _cache[53] || (_cache[53] = $event => _ctx.valid = $event),\n          \"lazy-validation\": \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_window_item, {\n            value: \"home\"\n          }, {\n            default: _withCtx(() => [_createCommentVNode(\" <v-card class=\\\"bg-grey-lighten-3\\\" flat> \"), _createVNode(_component_v_card, {\n              color: \"white\",\n              flat: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_card_title, {\n                class: \"text-center\",\n                style: {\n                  \"font-size\": \"36px\"\n                }\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"Welcome to the BioGears Scenario Creation Tool!\")]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_container, {\n                fluid: \"\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_row, {\n                  align: \"center\",\n                  justify: \"center\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_v_col, {\n                    cols: \"12\"\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_v_img, {\n                      src: _imports_0,\n                      alt: \"Your image\",\n                      class: \"mx-auto\",\n                      width: \"40%\",\n                      height: \"40%\"\n                    })]),\n                    _: 1 /* STABLE */\n                  })]),\n\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_card_text, null, {\n                default: _withCtx(() => [_hoisted_1]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_card, {\n                flat: \"\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n                  default: _withCtx(() => [_hoisted_2, _hoisted_3, _createVNode(_component_v_list, null, {\n                    default: _withCtx(() => [_createVNode(_component_v_list_item, null, {\n                      default: _withCtx(() => [_createVNode(_component_v_list_item_title, {\n                        style: {\n                          \"font-size\": \"21px\"\n                        }\n                      }, {\n                        default: _withCtx(() => [_createTextVNode(\"1. Build BioGears\")]),\n                        _: 1 /* STABLE */\n                      }), _createTextVNode(\"Create a folder in your Desktop titled 'biogears'. In the command line, navigate to this folder. Clone the BioGears \"), _hoisted_4, _createTextVNode(\" to your local computer by running: \"), _hoisted_5, _createTextVNode(\" in command line. Follow the build instructions from the \"), _hoisted_6, _createTextVNode(\" for your operating system (also described below). \"), _hoisted_7, _hoisted_8, _hoisted_9, _hoisted_10, _createTextVNode(\" Install Homebrew using by running: \"), _hoisted_11, _createTextVNode(\" in command line. Add Homebrew to path using: \"), _hoisted_12, _hoisted_13, _createTextVNode(\" Install dependencies using: \"), _hoisted_14, _createTextVNode(\" Assuming the BioGears repository was cloned in the biogears folder on Desktop, run the following commands to build BioGears: \"), _hoisted_15, _hoisted_16, _createTextVNode(), _hoisted_17, _createTextVNode(\" put instructions here \")]),\n                      _: 1 /* STABLE */\n                    }), _createVNode(_component_v_list_item, null, {\n                      default: _withCtx(() => [_createVNode(_component_v_list_item_title, {\n                        style: {\n                          \"font-size\": \"21px\"\n                        }\n                      }, {\n                        default: _withCtx(() => [_createTextVNode(\"2. Move downloaded files to proper directories\")]),\n                        _: 1 /* STABLE */\n                      }), _createTextVNode(\" After clicking Submit in the BioGears Scenario Creation Tool tab, two files should be downloaded - CustomScenario.xml and CustomPatient.xml. Within the BioGears directory folder, move CustomScenario.xml to the \"), _hoisted_18, _createTextVNode(\" folder. Also within the BioGears directory folder, move CustomPatient.xml to the \"), _hoisted_19, _createTextVNode(\" folder. \")]),\n                      _: 1 /* STABLE */\n                    }), _createVNode(_component_v_list_item, null, {\n                      default: _withCtx(() => [_createVNode(_component_v_list_item_title, {\n                        style: {\n                          \"font-size\": \"21px\"\n                        }\n                      }, {\n                        default: _withCtx(() => [_createTextVNode(\"3. Run BioGears executable in command line\")]),\n                        _: 1 /* STABLE */\n                      }), _createTextVNode(\"Open command line and within the BioGears directory, navigate to \"), _hoisted_20, _createTextVNode(\". Run the BioGears executable by running this command: \"), _hoisted_21, _createTextVNode(), _hoisted_22, _createTextVNode(\" This may take a couple minutes to run. After BioGears has finished running, within the \"), _hoisted_23, _createTextVNode(\", there should be CustomScenario.log and CustomScenario.csv files. The csv file can be inputted into the BioGears Plotting Tool Tab to visualize the simulated physiological variables over time. \"), _hoisted_24, _createTextVNode(\" Most importantly, under the \"), _hoisted_25, _createTextVNode(\" folder, a new file called CustomBioGearsState.xml will be created, which is the MoHSES-compatible state file that can be used to generate the MoHSES Scenario file. \")]),\n                      _: 1 /* STABLE */\n                    })]),\n\n                    _: 1 /* STABLE */\n                  })]),\n\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[1] || (_cache[1] = $event => $options.nextTab('option-1')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-right\"\n                })]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_26, _hoisted_27, _hoisted_28]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_window_item, {\n            value: \"option-1\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              flat: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n                default: _withCtx(() => [_hoisted_29, _hoisted_30, _createVNode(_component_v_text_field, {\n                  modelValue: _ctx.patient_props['Name'],\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.patient_props['Name'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Name\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_select, {\n                  modelValue: _ctx.patient_props['Sex'],\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.patient_props['Sex'] = $event),\n                  items: _ctx.genders,\n                  rules: [v => !!v || 'Sex is required'],\n                  label: \"Sex\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"rules\"]), _createVNode(_component_v_slider, {\n                  modelValue: _ctx.patient_props['age'],\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.patient_props['age'] = $event),\n                  label: \"Age\",\n                  class: \"align-center\",\n                  max: _ctx.age_max,\n                  min: _ctx.age_min,\n                  step: 1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_props['age'],\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.patient_props['age'] = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    suffix: \"years\",\n                    style: {\n                      \"width\": \"180px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\"]), _createVNode(_component_v_slider, {\n                  modelValue: _ctx.patient_props['height'],\n                  \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => _ctx.patient_props['height'] = $event),\n                  label: \"Height\",\n                  class: \"align-center\",\n                  max: _ctx.height_max,\n                  min: _ctx.height_min,\n                  step: 0.1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_props['height'],\n                    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.patient_props['height'] = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    style: {\n                      \"width\": \"90px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_select, {\n                    modelValue: _ctx.height_unit,\n                    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.height_unit = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    items: _ctx.height_units,\n                    style: {\n                      \"width\": \"90px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"items\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\", \"step\"]), _createVNode(_component_v_slider, {\n                  modelValue: _ctx.patient_props['weight'],\n                  \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => _ctx.patient_props['weight'] = $event),\n                  label: \"Weight\",\n                  class: \"align-center\",\n                  max: _ctx.weight_max,\n                  min: _ctx.weight_min,\n                  step: 0.1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_props['weight'],\n                    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => _ctx.patient_props['weight'] = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    style: {\n                      \"width\": \"90px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_select, {\n                    modelValue: _ctx.weight_unit,\n                    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => _ctx.weight_unit = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    items: _ctx.weight_units,\n                    style: {\n                      \"width\": \"90px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"items\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\", \"step\"])]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_31, _createVNode(_component_v_row, {\n              justify: \"center\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[12] || (_cache[12] = $event => $options.nextTab('home')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-left\"\n                })]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[13] || (_cache[13] = $event => $options.nextTab('option-2')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-right\"\n                })]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_32]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_window_item, {\n            value: \"option-2\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              flat: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n                default: _withCtx(() => [_hoisted_33, _hoisted_34, _createVNode(_component_v_select, {\n                  modelValue: _ctx.patient_vitals['BloodTypeABO'],\n                  \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => _ctx.patient_vitals['BloodTypeABO'] = $event),\n                  items: _ctx.blood_types,\n                  label: \"Blood Type\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"items\"]), _createVNode(_component_v_select, {\n                  modelValue: _ctx.patient_vitals['BloodTypeRh'],\n                  \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => _ctx.patient_vitals['BloodTypeRh'] = $event),\n                  items: _ctx.rh,\n                  label: \"Rh\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"items\"]), _createCommentVNode(\" <v-text-field\\n                v-model=\\\"patient_vitals['mean_arterial_pressure']\\\"\\n                label=\\\"Mean Arterial Pressure (mmHg)\\\"\\n              ></v-text-field> \"), _createVNode(_component_v_slider, {\n                  modelValue: _ctx.patient_vitals['DiastolicArterialPressureBaseline'],\n                  \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => _ctx.patient_vitals['DiastolicArterialPressureBaseline'] = $event),\n                  label: \"Diastolic Arterial Pressure (mmHg)\",\n                  max: \"80\",\n                  min: \"60\",\n                  step: \"0.5\",\n                  required: \"\"\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_vitals['DiastolicArterialPressureBaseline'],\n                    \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => _ctx.patient_vitals['DiastolicArterialPressureBaseline'] = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    suffix: \"mmHg\",\n                    style: {\n                      \"width\": \"180px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_slider, {\n                  modelValue: _ctx.patient_vitals['SystolicArterialPressureBaseline'],\n                  \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => _ctx.patient_vitals['SystolicArterialPressureBaseline'] = $event),\n                  label: \"Systolic Arterial Pressure (mmHg)\",\n                  max: \"120\",\n                  min: \"90\",\n                  step: \"0.5\",\n                  required: \"\"\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_vitals['SystolicArterialPressureBaseline'],\n                    \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => _ctx.patient_vitals['SystolicArterialPressureBaseline'] = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    suffix: \"mmHg\",\n                    style: {\n                      \"width\": \"180px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_slider, {\n                  modelValue: _ctx.patient_vitals['HeartRateBaseline'],\n                  \"onUpdate:modelValue\": _cache[21] || (_cache[21] = $event => _ctx.patient_vitals['HeartRateBaseline'] = $event),\n                  label: \"Heart Rate\",\n                  class: \"align-center\",\n                  max: _ctx.heart_rate_max,\n                  min: _ctx.heart_rate_min,\n                  step: 1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_vitals['HeartRateBaseline'],\n                    \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => _ctx.patient_vitals['HeartRateBaseline'] = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    suffix: \"bpm\",\n                    style: {\n                      \"width\": \"180px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\"]), _createVNode(_component_v_slider, {\n                  modelValue: _ctx.patient_vitals['RespirationRateBaseline'],\n                  \"onUpdate:modelValue\": _cache[23] || (_cache[23] = $event => _ctx.patient_vitals['RespirationRateBaseline'] = $event),\n                  label: \"Respiratory Rate\",\n                  class: \"align-center\",\n                  max: _ctx.resp_rate_max,\n                  min: _ctx.resp_rate_min,\n                  step: 1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_vitals['RespirationRateBaseline'],\n                    \"onUpdate:modelValue\": _cache[22] || (_cache[22] = $event => _ctx.patient_vitals['RespirationRateBaseline'] = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    suffix: \"/min\",\n                    style: {\n                      \"width\": \"180px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\"])]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_35, _createVNode(_component_v_row, {\n              justify: \"center\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[24] || (_cache[24] = $event => $options.nextTab('option-1')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-left\"\n                })]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[25] || (_cache[25] = $event => $options.nextTab('option-3')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-right\"\n                })]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_36]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_window_item, {\n            value: \"option-3\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              flat: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n                default: _withCtx(() => [_hoisted_37, _hoisted_38, _createVNode(_component_v_text_field, {\n                  modelValue: _ctx.date,\n                  \"onUpdate:modelValue\": _cache[26] || (_cache[26] = $event => _ctx.date = $event),\n                  type: \"date\",\n                  label: \"Date\"\n                }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_row, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_col, {\n                    cols: \"6\"\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                      modelValue: _ctx.lat,\n                      \"onUpdate:modelValue\": _cache[27] || (_cache[27] = $event => _ctx.lat = $event),\n                      label: \"Latitude\"\n                    }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_v_col, {\n                    cols: \"6\"\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                      modelValue: _ctx.lon,\n                      \"onUpdate:modelValue\": _cache[28] || (_cache[28] = $event => _ctx.lon = $event),\n                      label: \"Longitude\"\n                    }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                    _: 1 /* STABLE */\n                  })]),\n\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_btn, {\n                  onClick: $options.pullEnvironmentData,\n                  color: \"#3c2d70\",\n                  style: {\n                    \"color\": \"white\"\n                  }\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\"Generate Environment Data\")]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"onClick\"]), _hoisted_39, _hoisted_40, _ctx.weatherData ? (_openBlock(), _createBlock(_component_v_slider, {\n                  key: 0,\n                  modelValue: _ctx.environment_props['temperature'],\n                  \"onUpdate:modelValue\": _cache[30] || (_cache[30] = $event => _ctx.environment_props['temperature'] = $event),\n                  label: \"Temperature\",\n                  clearable: \"\",\n                  class: \"align-center\",\n                  max: _ctx.temperature_max,\n                  min: _ctx.temperature_min,\n                  step: 0.1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.environment_props['temperature'],\n                    \"onUpdate:modelValue\": _cache[29] || (_cache[29] = $event => _ctx.environment_props['temperature'] = $event),\n                    \"hide-details\": \"\",\n                    clearable: \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    suffix: \"Celsius\",\n                    style: {\n                      \"width\": \"180px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\", \"step\"])) : _createCommentVNode(\"v-if\", true), _ctx.weatherData ? (_openBlock(), _createBlock(_component_v_slider, {\n                  key: 1,\n                  modelValue: _ctx.environment_props['pressure'],\n                  \"onUpdate:modelValue\": _cache[32] || (_cache[32] = $event => _ctx.environment_props['pressure'] = $event),\n                  label: \"Pressure\",\n                  clearable: \"\",\n                  class: \"align-center\",\n                  max: _ctx.pressure_max,\n                  min: _ctx.pressure_min,\n                  step: 0.1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.environment_props['pressure'],\n                    \"onUpdate:modelValue\": _cache[31] || (_cache[31] = $event => _ctx.environment_props['pressure'] = $event),\n                    \"hide-details\": \"\",\n                    clearable: \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    suffix: \"mmHg\",\n                    style: {\n                      \"width\": \"180px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\", \"step\"])) : _createCommentVNode(\"v-if\", true), _ctx.weatherData ? (_openBlock(), _createBlock(_component_v_slider, {\n                  key: 2,\n                  modelValue: _ctx.environment_props['humidity'],\n                  \"onUpdate:modelValue\": _cache[34] || (_cache[34] = $event => _ctx.environment_props['humidity'] = $event),\n                  label: \"Relative Humidity\",\n                  clearable: \"\",\n                  class: \"align-center\",\n                  max: 100,\n                  min: 0,\n                  step: 0.1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.environment_props['humidity'],\n                    \"onUpdate:modelValue\": _cache[33] || (_cache[33] = $event => _ctx.environment_props['humidity'] = $event),\n                    \"hide-details\": \"\",\n                    clearable: \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    suffix: \"%\",\n                    style: {\n                      \"width\": \"180px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"step\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_v_row, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_col, {\n                    cols: \"8\"\n                  }, {\n                    default: _withCtx(() => [_ctx.weatherData ? (_openBlock(), _createBlock(_component_v_text_field, {\n                      key: 0,\n                      modelValue: _ctx.environment_props['cityName'],\n                      \"onUpdate:modelValue\": _cache[35] || (_cache[35] = $event => _ctx.environment_props['cityName'] = $event),\n                      label: \"City\"\n                    }, null, 8 /* PROPS */, [\"modelValue\"])) : _createCommentVNode(\"v-if\", true)]),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_v_col, {\n                    cols: \"4\"\n                  }, {\n                    default: _withCtx(() => [_ctx.weatherData ? (_openBlock(), _createBlock(_component_v_text_field, {\n                      key: 0,\n                      modelValue: _ctx.environment_props['state'],\n                      \"onUpdate:modelValue\": _cache[36] || (_cache[36] = $event => _ctx.environment_props['state'] = $event),\n                      label: \"State\"\n                    }, null, 8 /* PROPS */, [\"modelValue\"])) : _createCommentVNode(\"v-if\", true)]),\n                    _: 1 /* STABLE */\n                  })]),\n\n                  _: 1 /* STABLE */\n                }), _hoisted_41, _hoisted_42]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_43, _createVNode(_component_v_row, {\n              justify: \"center\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[37] || (_cache[37] = $event => $options.nextTab('option-2')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-left\"\n                })]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[38] || (_cache[38] = $event => $options.nextTab('option-4')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-right\"\n                })]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_44]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_window_item, {\n            value: \"option-4\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              flat: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n                default: _withCtx(() => [_hoisted_45, _hoisted_46, _createVNode(_component_v_text_field, {\n                  modelValue: _ctx.scenario_props['Name'],\n                  \"onUpdate:modelValue\": _cache[39] || (_cache[39] = $event => _ctx.scenario_props['Name'] = $event),\n                  label: \"Scenario Name\"\n                }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n                  modelValue: _ctx.scenario_props['Description'],\n                  \"onUpdate:modelValue\": _cache[40] || (_cache[40] = $event => _ctx.scenario_props['Description'] = $event),\n                  label: \"Scenario Brief Description\"\n                }, null, 8 /* PROPS */, [\"modelValue\"]), _hoisted_47, _hoisted_48, _hoisted_49, _createVNode(_component_v_row, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_col, {\n                    cols: \"12\",\n                    sm: \"8\",\n                    md: \"6\",\n                    class: \"my-content\"\n                  }, {\n                    default: _withCtx(() => [(_openBlock(), _createElementBlock(\"svg\", _hoisted_50, [_hoisted_51, _createElementVNode(\"path\", {\n                      fill: _ctx.colors['Chest'],\n                      id: \"Chest\",\n                      d: \"m 2.4651865,21.528509 -1.72941989,3.09103 -1.89346001,0.94785 1.15295001,0.90662 0.90586,2.63773 2.09966989,0.86537 3.34636,-1.655 -0.83462,-6.50527 z m 8.9862405,0 1.72942,3.09103 1.89346,0.94785 -1.15295,0.90662 -0.90604,2.63773 -2.09968,0.86537 -3.3452405,-1.655 0.83425,-6.50527 z\"\n                    }, null, 8 /* PROPS */, _hoisted_52), _createElementVNode(\"path\", {\n                      fill: _ctx.colors['Abdomen'],\n                      id: \"Abdomen\",\n                      d: \"m 3.5133365,30.595379 3.11202,-1.40603 -0.0937,2.27965 -2.80138,1.4364 z m -1.93508,1.6685 1.29355,0.72139 -0.14997,-1.70899 z m 1.05303,-1.637 -2.47930989,-1.03259 0.93360999,2.52148 z m -1.5316399,1.73729 1.6900499,1.03372 0.28871,2.06743 -1.64881,-1.07515 z m 2.9114199,1.10421 0.0623,1.62387 2.30327,-0.49961 0.12448,-2.21703 z m 0.15561,2.40432 -0.0309,1.99844 2.20973,0.59353 0.0311,-3.1227 z m -2.6546,-0.98516 1.48384,1.0339 0.20622,2.10905 -1.64975,-1.32355 z m 5.23795,14.47521 -0.60647,-5.91209 -0.015,-3.84879 -2.18479,-1.07533 -0.24746,7.03017 z m 0.41581,-5.7e-4 0.60628,-5.91209 0.0154,-3.84915 2.18404,-1.07515 0.2474605,7.03017 z m -4.00588,-10.21155 -1.81341,-1.36479 -0.15748,1.83347 -1.28567989,2.37432 1.98044989,2.73595 1.03109,0.16554 0.37119,-3.88721 z m 7.2429405,-8.55562 -3.1120205,-1.40604 0.0937,2.27965 2.8011905,1.43603 z m 1.93471,1.66849 -1.29355,0.7212 0.14997,-1.70898 z m -1.05303,-1.63718 2.47968,-1.03241 -0.9336,2.52093 z m 1.53164,1.73729 -1.69005,1.03372 -0.28871,2.0678 1.64975,-1.07533 z m -2.9114305,1.10421 -0.0622,1.62387 -2.30308,-0.49961 -0.12448,-2.21722 z m -0.1556,2.4045 0.0311,1.99844 -2.20953,0.59391 -0.0311,-3.1227 z m 2.6545905,-0.98535 -1.48383,1.03372 -0.20622,2.10905 1.64862,-1.32355 z m -1.64787,4.26366 1.81341,-1.36479 0.15748,1.83347 1.28642,2.37338 -1.98044,2.73652 -1.03109,0.16554 -0.37026,-3.88816 z\"\n                    }, null, 8 /* PROPS */, _hoisted_53), _createElementVNode(\"path\", {\n                      fill: _ctx.colors['Pelvis'],\n                      id: \"Pelvis\",\n                      d: \"m 0.73979661,43.812429 v 4.21363 l 2.94516989,5.8253 1.86028,5.78349 -0.19366,-4.0072 z m 3.24886989,13.42559 0.0647,0.15485 1.21294,2.90207 -0.78307,7.18803 -1.23618,-0.66102 1.0714,-6.69273 z m 1.52977,-7.75493 0.0221,-0.0277 -0.14866,-0.37945 -3.10172,-3.40449 -0.23283,-0.0825 2.05918,5.32009 z m -1.17263,2.01833 1.27705,3.29948 0.42631,-4.04862 -0.25196,-0.64303 z m 4.05219,-2.01795 -0.0221,-0.0281 0.14867,-0.37926 3.1017105,-3.40449 0.23246,-0.0825 -2.0584305,5.3199 z m 1.17263,2.01795 -1.27706,3.29948 -0.42631,-4.04843 0.25197,-0.64303 z m 3.6065705,-7.6888 v 4.21363 l -2.94574,5.82511 -1.8602705,5.78349 0.19365,-4.0072 z m -3.2494405,13.42596 -0.0649,0.15467 -1.21294,2.90207 0.78325,7.18803 1.2361905,-0.66122 -1.0714005,-6.69272 z\"\n                    }, null, 8 /* PROPS */, _hoisted_54), _createElementVNode(\"path\", {\n                      fill: _ctx.colors['Head'],\n                      id: \"Head\",\n                      d: \"m 39.271427,10.801559 0.44208,-0.14964 0.16111,0.16427 1.48163,4.04751 2.32401,1.45118 2.39971,-1.52387 0.97577,-3.68969 0.52752,-0.55908 0.23367,0.0981 0.24198,-3.3446699 -2.03129,-2.31103 -2.84509,-0.51629 -2.20422,0.52915 -1.93631,2.63077 z m -28.40863,0.34495 0.0203,-2.2074699 -3.9668905,-2.7637 -3.74099,2.23559 -0.006,2.6352799 -0.60741,0.0403 0.27408,1.82447 0.97635,0.33932 0.44244,2.18029 1.82222,2.06556 2.03518,-0.0607 1.79223,-1.94408 0.3595705,-2.24066 0.97616,-0.33932 0.25159,-1.78416 z m -8.0771905,-0.34495 -0.0482,-2.5908499 4.20648,-2.46806 4.4276905,2.95361 -0.0405,1.9440799 0.24197,-3.3446699 -2.0312905,-2.31103 -2.84508,-0.51629 -2.20423,0.52915 -1.9363,2.63077 z\"\n                    }, null, 8 /* PROPS */, _hoisted_55), _createElementVNode(\"path\", {\n                      fill: _ctx.colors['Neck'],\n                      id: \"Neck\",\n                      d: \"m 43.483667,16.548089 -2.35767,-1.55045 -1.47119,-3.95143 -0.60741,0.0403 0.27409,1.82447 0.97635,0.33932 0.7613,2.21572 0.33017,1.06849 0.0895,2.14894 1.16448,0.008 0.10563,-0.70833 0.54716,-0.0606 z m 1.01793,1.47595 0.23768,0.64982 1.38107,-0.004 0.01,-2.38784 0.25971,-0.79061 0.57215,-2.1698 0.76359,-0.41018 0.25158,-1.78416 -0.62859,0.0193 -1.08488,3.89981 -2.39725,1.46684 0.2768,1.48507 z m -40.0829605,-1.67052 1.64975,2.35202 0.74426,2.62159 -1.73486,-1.38354 -0.86649,-2.97104 z m 5.08047,0 -1.64975,2.35202 -0.74538,2.62234 1.73486,-1.38354 0.86649,-2.97104 z\"\n                    }, null, 8 /* PROPS */, _hoisted_56), _createElementVNode(\"path\", {\n                      fill: _ctx.colors['Extremities'],\n                      id: \"Extremities\",\n                      d: \"m 45.133277,68.516999 1.20605,3.01461 -0.70737,0.26558 -0.89755,3.51771 0.55802,-4.01191 z m 5.08496,-3.15003 -0.63355,1.8609 -0.16813,2.03261 -0.61313,1.93117 0.90584,-0.0851 0.28534,2.15982 z m -4.3014,6.58834 -1.27664,4.99697 0.28984,3.02284 0.67869,10.06546 1.66325,0.63506 3.504,-11.96959 -1.24986,-7.17525 z m -0.54053,20.8287 -0.85194,1.3581 -0.37189,0.79238 0.15589,1.21774 0.76983,0.74446 1.51186,0.12543 1.12989,-0.29192 0.24225,-0.95894 -0.80765,-1.30405 0.22563,-0.85987 -0.29679,-0.84153 0.0194,-1.81524 -1.53568,-0.54817 z m 1.19598,0.4675 -0.15943,1.25776 0.6023,0.97431 m 0.54436,0.29544 -1.06474,0.40084 -1.55326,-0.65137 m 3.56525,-39.90247 -3.97962,-1.70224 -0.56389,0.27131 -0.0528,1.79746 -0.075,4.64669 1.97837,6.04282 -0.47612,1.41403 1.42813,3.29446 1.7661,-0.30111 0.50079,-2.11605 0.1695,-1.75674 2.42102,-8.15763 0.009,-3.68308 z m 4.26465,-23.93238 -0.32785,-1.05121 -1.27383,-2.05489 1.38708,-2.96476 2.28579,0.91634 1.83971,1.74245 0.53937,1.78549 -0.26073,4.30868 z m 2.64394,15.3417 1.51839,0.0828 0.78033,-0.65476 1.16673,2.18281 0.79187,3.34623 -0.49843,0.21064 -0.55144,-2.21453 -0.50541,0.24292 0.30356,2.5012 -0.62882,0.23021 -0.36124,-2.50014 -0.56203,0.16666 0.16765,2.77019 -0.77603,0.30634 -0.19719,-2.87245 -0.45732,-0.0278 -0.22215,2.64829 -0.66539,0.24928 0.0254,-4.56692 -0.3374,-0.20146 -1.38845,1.65469 -0.32098,-0.35041 0.76973,-2.03928 z m 0.97685,-0.1799 1.43335,-0.74932 0.29002,-7.01054 c 0,0 -0.65,-2.77789 -0.64401,-3.06126 l -0.61212,-1.21783 -3.98124,-2.57566 1.0222,1.93525 -0.38967,4.82212 1.8218,7.69308 z m -13.45979,-5.10285 0.14418,2.97292 1.15984,-0.0241 0.048,-2.96488 2.80867,-0.81981 2.34029,-0.7541 1.34121,3.73319 -4.77886,1.36455 -2.33301,1.2158 -2.37536,-1.2333 -5.45663,-1.37716 1.51961,-3.95743 z m -7.0756,2.37946 5.48374,1.86457 2.27386,1.3378 2.74195,-1.74412 4.51804,-1.28077 0.90009,2.29721 0.675,3.4346 -0.81272,5.02838 -2.82636,0.16819 -4.11256,-1.67581 -1.00814,0.39118 -0.95849,-0.39888 -4.44053,1.94411 -2.77023,-0.51478 -0.95181,-6.15325 0.36754,-2.7864 z m 6.4333,24.38495 -1.20605,3.01461 0.70738,0.26558 0.89754,3.51771 -0.55801,-4.01191 z m -5.08496,-3.15003 0.63355,1.8609 0.16813,2.03261 0.61314,1.93117 -0.90585,-0.0851 -0.28534,2.15982 z m 4.3014,6.58834 1.27664,4.99697 -0.28984,3.02284 -0.67869,10.06546 -1.66325,0.63506 -3.50399,-11.96959 1.24985,-7.17525 z m 0.54053,20.8287 0.85194,1.3581 0.37189,0.79238 -0.15588,1.21774 -0.76984,0.74446 -1.51185,0.12543 -1.1299,-0.29192 -0.24225,-0.95894 0.80765,-1.30405 -0.22562,-0.85987 0.29679,-0.84153 -0.0194,-1.81524 1.53568,-0.54817 z m -1.19598,0.4675 0.15943,1.25776 -0.6023,0.97431 m -0.54436,0.29544 1.06474,0.40084 1.55326,-0.65137 m -4.19331,-39.53466 4.55099,-2.03879 0.63802,0.23079 0.0353,1.80672 0.075,4.64669 -1.97837,6.04282 0.47612,1.41403 -1.42812,3.29446 -1.76611,-0.30111 -0.50079,-2.11605 -0.1695,-1.75674 -2.42102,-8.15763 -0.34279,-3.64687 z m -3.98895,-24.48137 0.4297,-1.4164 1.30458,-1.68577 -1.39393,-2.96155 -2.28367,0.92162 -1.83567,1.7467 -0.53524,1.78673 0.27068,4.30806 z m -2.46869,15.35539 -1.5182,0.0863 -0.78184,-0.65295 -1.16168,2.1855 -0.78414,3.34805 0.49892,0.20949 0.54632,-2.2158 0.50597,0.24175 -0.29779,2.5019 0.62936,0.22875 0.35546,-2.50096 0.56242,0.16536 -0.16126,2.77057 0.77674,0.30455 0.19056,-2.87291 0.45724,-0.0289 0.22827,2.64778 0.66597,0.24774 -0.0359,-4.56685 0.33693,-0.20224 1.39227,1.65147 0.32017,-0.35115 -0.77444,-2.03749 z m -0.97726,-0.17765 -1.43509,-0.746 -0.30622,-7.00985 c 0,0 0.64359,-2.77938 0.63694,-3.06274 l 0.6093,-1.21924 3.62552,-2.56583 -0.68276,1.9919 0.41561,4.74788 -1.80402,7.69727 z m -12.59945,1.31596 1.5198,0.0506 0.76631,-0.67111 1.21262,2.15766 0.86245,3.32873 -0.49386,0.22113 -0.59815,-2.20238 -0.50016,0.25356 0.35639,2.49422 -0.62382,0.24345 -0.41402,-2.49194 -0.55839,0.17851 0.2262,2.76603 -0.76938,0.32268 -0.25788,-2.86764 -0.4578,-0.0181 -0.16611,2.6524 -0.65997,0.26329 -0.0712,-4.56643 -0.34158,-0.19428 -1.35316,1.68368 -0.32832,-0.34355 0.72644,-2.0551 z m 1.18497,-16.19302 -0.005,3.09419 0.57959,1.91184 0.54538,-2.41185 z m -23.9347704,16.19302 -1.5198,0.0506 -0.76631,-0.67112 -1.21262,2.15767 -0.86245,3.32873 0.49386,0.22113 0.59815,-2.20238 0.50016,0.25356 -0.35639,2.49422 0.62382,0.24345 0.41402,-2.49194 0.55839,0.17851 -0.2262,2.76603 0.76938,0.32268 0.25788,-2.86764 0.4578,-0.0181 0.16611,2.65239 0.65997,0.2633 0.0712,-4.56643 0.34158,-0.19428 1.35316,1.68367 0.32832,-0.34354 -0.72644,-2.0551 z m -1.18497,-16.19302 0.005,3.09419 -0.57959,1.91184 -0.54539,-2.41185 z m 7.0789299,37.41425 -0.12448,1.12295 0.87118,1.08171 0.29058,1.70599 0.58116,0.24933 0.49774,-2.57866 0.33182,-0.91486 -0.29058,-0.58247 z m 3.85854,0.0832 -0.62241,1.74685 -1.32767,2.57867 0.33182,2.37095 0.95423,-2.66209 0.78832,-1.4964 z m -4.97867989,-2.37058 0.95422989,5.11609 -0.62239989,-0.33313 -0.49793,1.6638 z m 4.27340989,7.94395 -0.29058,0.91486 -0.62241,3.86828 -0.0829,5.15733 0.87174,5.03304 -0.0418,-6.44714 0.91298,-2.57848 0.1243,-2.82837 z m -1.99151,2.32914 0.20735,7.73637 1.65968,6.23904 -1.80497,-0.85299 -3.00797989,-10.83584 1.03728,-6.82095 z m 2.98717,15.09818 -0.12448,3.45228 -0.29058,1.20637 h -0.87118 l -0.24877,-0.83181 -0.29059,-0.0416 0.0623,0.83181 -1.09934,-0.33333 -0.29058,-0.16629 -1.2448,-0.27033 -0.0412,-0.97747 1.2031899,-2.03781 0.82975,-1.04009 2.03294,-0.83181 z m -6.16386989,-37.46914 0.15504,4.75053 2.40262989,6.60968 -0.73638,1.90021 -2.3640099,-8.34435 z m 0.58117,-11.60768 0.15503,4.00684 -1.31754001,7.93154 -0.61978,-6.40308 z m 0.38769,5.1223 2.75150989,6.07239 0.61997,4.87425 -1.16232,6.85771 -2.51904989,-6.98163 -0.15504,-7.18801 z m 12.16631039,20.87063 0.1243,1.12295 -0.87118,1.08171 -0.29058,1.70599 -0.58116,0.24933 -0.49774,-2.57866 -0.33182,-0.91486 0.29058,-0.58247 z m -3.8585305,0.0832 0.6224,1.74685 1.3273005,2.57867 -0.33182,2.37095 -0.9542305,-2.66209 -0.78738,-1.49734 z m 4.9781105,-2.37039 -0.95423,5.11609 0.62241,-0.33295 0.49773,1.66381 z m -4.2728405,7.94394 0.29058,0.91486 0.6224005,3.8681 0.0829,5.15733 -0.8713605,5.03304 0.0412,-6.44714 -0.91242,-2.57848 -0.12561,-2.82837 z m 1.9915005,2.32915 -0.20753,7.73637 -1.6594905,6.23904 1.8047805,-0.853 3.00816,-10.83583 -1.03727,-6.82095 z m -2.9869805,15.09817 0.1243,3.45228 0.28983,1.20638 h 0.87136 l 0.24897,-0.83181 0.2905805,-0.0416 -0.0624,0.83181 1.09914,-0.33332 0.29058,-0.16629 1.24444,-0.27033 0.0416,-0.97748 -1.20319,-2.03743 -0.82974,-1.0399 -2.0329405,-0.83181 z m 6.1631205,-37.46932 -0.15504,4.75091 -2.40263,6.60949 0.7362,1.90021 2.36401,-8.34435 z m -0.58154,-11.60825 -0.15485,4.00722 1.31793,7.93154 0.61977,-6.40308 z m -0.38731,5.12268 -2.75152,6.07258 -0.62015,4.87425 1.16232,6.85771 2.51886,-6.98144 0.15504,-7.18764 z m -17.8749004,-10.94443 -1.30083,10.28927 1.10778,0.01 1.89387,-7.99609 -0.19174,-4.53719 z m -1.21978,-1.94971 0.58728,2.58635 -1.11875,9.15614 -0.55849,-0.21663 -0.2304,-6.77018 z m 0.71916,-0.2047 0.33838,1.70499 1.81931,-2.54418 0.66289,-1.26895 z m 2.8527,-2.6096 c 0.0259,-0.0144 0.0536,-0.0254 0.0824,-0.0324 l 1.48332001,-4.95503 -1.00455001,-2.08428 -1.65509,1.74532 -2.23034,6.67667 -0.0415,0.93739 c 1.06528,-0.84215 2.18961,-1.60679 3.36433,-2.28803 z m -1.6945,-5.75654 -1.64891,6.43421 0.36468,-4.92266 z m 21.7225804,10.52055 1.30083,10.28927 -1.10778,0.01 -1.89387,-7.99609 0.19174,-4.53719 z m 1.21978,-1.94971 -0.58729,2.58635 1.11876,9.15614 0.55849,-0.21663 0.2304,-6.77018 z m -0.55354,-0.2047 -0.33838,1.70499 -1.81932,-2.54418 -0.6629,-1.26895 z m -2.85271,-2.6096 c -0.0259,-0.0144 -0.0536,-0.0254 -0.0824,-0.0324 l -1.48333,-4.95503 1.00456,-2.08428 1.65511,1.74532 2.23034,6.67667 0.0415,0.93739 c -1.06528,-0.84215 -2.18962,-1.60679 -3.36434,-2.28803 z m 1.6945,-5.75654 1.64893,6.43421 -0.36469,-4.92266 z m -13.8386705,-9.20021 -3.55745989,1.97916 -0.72653,-0.35074 z m 0.107,0.43288 0.37119,1.73073 -2.18459,0.53561 -1.40114989,-0.49436 z m -3.98148989,1.97595 -0.75814,-0.41 -2.40806001,1.66799 -1.17364,1.50707 -0.62662,1.56259 0.0464,3.70195 1.3284,-1.72153 -0.0407,-2.59376 0.48843,-0.5005 c 0,0 3.09777001,-3.19057 3.14370001,-3.214 z m 0.2409,0.10873 c 0.002,0.0525 -3.32987001,3.54733 -3.32987001,3.54733 l -0.10067,3.10396 1.15426,-1.97782 2.22547001,-0.94804 1.56574989,-2.88481 z m 10.05660039,-2.51756 3.55748,1.97916 0.72653,-0.35074 z m -0.107,0.43288 -0.3711905,1.73073 2.1846005,0.53561 1.40116,-0.49436 z m 3.98151,1.97595 0.75814,-0.41 2.40806,1.66799 1.17364,1.50707 0.62662,1.5626 -0.0464,3.70194 -1.3284,-1.72153 0.0407,-2.59376 -0.48842,-0.50049 c 0,0 -3.09778,-3.19058 -3.14371,-3.21401 z m -0.2409,0.10873 c -10e-4,0.0525 3.32987,3.54733 3.32987,3.54733 l 0.10067,3.10396 -1.15426,-1.97782 -2.22547,-0.94804 -1.56576,-2.88481 z\"\n                    }, null, 8 /* PROPS */, _hoisted_57), _createElementVNode(\"path\", {\n                      fill: _ctx.colors['Back'],\n                      id: \"Back\",\n                      d: \"m 40.739147,19.072339 0.063,-2.62462 -0.71441,1.15181 -4.37994,1.49796 4.97857,8.36746 1.83043,5.08188 -0.21949,-13.55362 z m -7.42423,1.95717 -1.57473,1.56517 -0.81404,2.06905 -0.38603,2.52859 1.83679,-1.23927 2.76223,-1.15538 1.84691,3.4342 1.13679,5.49715 0.0767,5.8593 4.07066,1.10938 -0.10355,-7.94098 -1.94107,-4.90022 -5.04395,-8.19334 z m 13.23814,-1.85796 -0.063,-2.62463 0.71441,1.15181 4.37994,1.49796 -4.97857,8.36746 -1.83043,5.08189 0.21949,-13.55362 z m 7.42423,1.95716 1.57473,1.56518 0.81404,2.06904 0.0384,2.52859 -1.48921,-1.23926 -2.76223,-1.15539 -1.84691,3.4342 -1.13679,5.49715 -0.0767,5.8593 -4.07066,1.10938 0.10355,-7.94098 1.94107,-4.90021 5.04395,-8.19335 z m -11.12961,-1.764514 0.53876,25.33066 0.48967,-0.0297 0.65658,-25.3387 -0.28147,-0.84188 -1.25059,-4.9e-4 z\"\n                    }, null, 8 /* PROPS */, _hoisted_58)]))]),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_v_col, null, {\n                    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.action, (exp, index) => {\n                      return _openBlock(), _createElementBlock(\"div\", {\n                        key: index\n                      }, [_createVNode(_component_v_select, {\n                        modelValue: exp.region,\n                        \"onUpdate:modelValue\": $event => exp.region = $event,\n                        label: \"Select Body Region\",\n                        items: _ctx.body_regions,\n                        onChange: $options.changeColors()\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"items\", \"onChange\"]), _createVNode(_component_v_autocomplete, {\n                        modelValue: exp.type,\n                        \"onUpdate:modelValue\": $event => exp.type = $event,\n                        label: \"Select Injury Type\",\n                        items: _ctx.patient_body[exp.region]\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"items\"]), _createVNode(_component_v_row, null, {\n                        default: _withCtx(() => [_createVNode(_component_v_col, null, {\n                          default: _withCtx(() => [exp.type === 'Tension Pneumothorax' ? (_openBlock(), _createBlock(_component_v_select, {\n                            key: 0,\n                            modelValue: exp.side,\n                            \"onUpdate:modelValue\": $event => exp.side = $event,\n                            label: \"Select side\",\n                            items: _ctx.sides,\n                            style: {\n                              \"width\": \"200px\"\n                            },\n                            class: \"align-left\"\n                          }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"items\"])) : _createCommentVNode(\"v-if\", true)]),\n                          _: 2 /* DYNAMIC */\n                        }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_col, null, {\n                          default: _withCtx(() => [exp.type === 'Tension Pneumothorax' ? (_openBlock(), _createBlock(_component_v_select, {\n                            key: 0,\n                            modelValue: exp.openclose,\n                            \"onUpdate:modelValue\": $event => exp.openclose = $event,\n                            label: \"Open or Closed\",\n                            items: _ctx.open_closed,\n                            class: \"align-right\",\n                            style: {\n                              \"width\": \"200px\"\n                            }\n                          }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"items\"])) : _createCommentVNode(\"v-if\", true)]),\n                          _: 2 /* DYNAMIC */\n                        }, 1024 /* DYNAMIC_SLOTS */)]),\n\n                        _: 2 /* DYNAMIC */\n                      }, 1024 /* DYNAMIC_SLOTS */), exp.type === 'Hemorrhage' ? (_openBlock(), _createBlock(_component_v_select, {\n                        key: 0,\n                        modelValue: exp.compartment,\n                        \"onUpdate:modelValue\": $event => exp.compartment = $event,\n                        label: \"Select compartment\",\n                        items: _ctx.hemorrhage_regions[exp.region]\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"items\"])) : _createCommentVNode(\"v-if\", true), exp.type === 'Hemorrhage' ? (_openBlock(), _createBlock(_component_v_text_field, {\n                        key: 1,\n                        modelValue: exp.hemrate,\n                        \"onUpdate:modelValue\": $event => exp.hemrate = $event,\n                        label: \"Initial Rate\",\n                        suffix: \"mL/min\"\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])) : _createCommentVNode(\"v-if\", true), exp.type === 'Brain Injury' ? (_openBlock(), _createBlock(_component_v_select, {\n                        key: 2,\n                        modelValue: exp.braininjurytype,\n                        \"onUpdate:modelValue\": $event => exp.braininjurytype = $event,\n                        label: \"Select type\",\n                        items: _ctx.brain_injury_types\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"items\"])) : _createCommentVNode(\"v-if\", true), exp.type === 'Burn Wound' ? (_openBlock(), _createBlock(_component_v_text_field, {\n                        key: 3,\n                        modelValue: exp.burnsurfacearea,\n                        \"onUpdate:modelValue\": $event => exp.burnsurfacearea = $event,\n                        label: \"Enter Fraction of Total Body Surface Area Affected\",\n                        hint: \"Enter a decimal between 0 and 1.\"\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])) : _createCommentVNode(\"v-if\", true), exp.type != 'Hemorrhage' && exp.type != 'Burn Wound' && exp.type != 'Cardiac Arrest' ? (_openBlock(), _createBlock(_component_v_slider, {\n                        key: 4,\n                        modelValue: exp.severity,\n                        \"onUpdate:modelValue\": $event => exp.severity = $event,\n                        label: \"Severity\",\n                        class: \"align-center\",\n                        max: _ctx.sev_max,\n                        min: _ctx.sev_min,\n                        step: 0.1\n                      }, {\n                        append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                          modelValue: exp.severity,\n                          \"onUpdate:modelValue\": $event => exp.severity = $event,\n                          \"hide-details\": \"\",\n                          \"single-line\": \"\",\n                          density: \"compact\",\n                          style: {\n                            \"width\": \"90px\"\n                          }\n                        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])]),\n                        _: 2 /* DYNAMIC */\n                      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\", \"max\", \"min\", \"step\"])) : _createCommentVNode(\"v-if\", true)]);\n                    }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_v_btn, {\n                      onClick: _cache[41] || (_cache[41] = $event => $options.removeAction(-1))\n                    }, {\n                      default: _withCtx(() => [_createTextVNode(\"Remove Injury\")]),\n                      _: 1 /* STABLE */\n                    }), _createVNode(_component_v_btn, {\n                      onClick: $options.addAction\n                    }, {\n                      default: _withCtx(() => [_createTextVNode(\"Add Another Injury\")]),\n                      _: 1 /* STABLE */\n                    }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_form, {\n                      ref: \"form\",\n                      modelValue: _ctx.valid,\n                      \"onUpdate:modelValue\": _cache[42] || (_cache[42] = $event => _ctx.valid = $event),\n                      \"lazy-validation\": \"\"\n                    }, {\n                      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.name, (item, index) => {\n                        return _openBlock(), _createBlock(_component_v_combobox, {\n                          key: index,\n                          label: Object.keys(item)[0],\n                          items: _ctx.patient_body[Object.keys(item)[0]],\n                          modelValue: item[Object.keys(item)[0]],\n                          \"onUpdate:modelValue\": $event => item[Object.keys(item)[0]] = $event,\n                          multiple: \"\",\n                          chips: \"\"\n                        }, null, 8 /* PROPS */, [\"label\", \"items\", \"modelValue\", \"onUpdate:modelValue\"]);\n                      }), 128 /* KEYED_FRAGMENT */))]),\n\n                      _: 1 /* STABLE */\n                    }, 8 /* PROPS */, [\"modelValue\"])]),\n                    _: 1 /* STABLE */\n                  })]),\n\n                  _: 1 /* STABLE */\n                }), _hoisted_59, _createVNode(_component_v_slider, {\n                  modelValue: _ctx.action_time,\n                  \"onUpdate:modelValue\": _cache[45] || (_cache[45] = $event => _ctx.action_time = $event),\n                  label: \"Medical Responder Time to Scene\",\n                  class: \"align-center\",\n                  max: _ctx.time_max,\n                  min: _ctx.time_min,\n                  step: 0.5\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.action_time,\n                    \"onUpdate:modelValue\": _cache[43] || (_cache[43] = $event => _ctx.action_time = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    items: _ctx.time_units,\n                    style: {\n                      \"width\": \"90px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"items\"]), _createVNode(_component_v_select, {\n                    modelValue: _ctx.action_unit,\n                    \"onUpdate:modelValue\": _cache[44] || (_cache[44] = $event => _ctx.action_unit = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    items: _ctx.time_units,\n                    style: {\n                      \"width\": \"90px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"items\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\", \"step\"]), _createCommentVNode(\" <v-row>\\n                <v-col cols=\\\"auto\\\"> \"), _createVNode(_component_v_dialog, {\n                  modelValue: _ctx.dialog1,\n                  \"onUpdate:modelValue\": _cache[48] || (_cache[48] = $event => _ctx.dialog1 = $event),\n                  persistent: \"\",\n                  width: \"auto\"\n                }, {\n                  activator: _withCtx(({\n                    props\n                  }) => [_createVNode(_component_v_btn, _mergeProps({\n                    color: \"success\"\n                  }, props), {\n                    default: _withCtx(() => [_createTextVNode(\" Submit \")]),\n                    _: 2 /* DYNAMIC */\n                  }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */)]),\n\n                  default: _withCtx(() => [_createVNode(_component_v_card, null, {\n                    default: _withCtx(() => [_createVNode(_component_v_card_title, {\n                      class: \"text-h5\"\n                    }, {\n                      default: _withCtx(() => [_createTextVNode(\" Submission Confirmation \")]),\n                      _: 1 /* STABLE */\n                    }), _createVNode(_component_v_card_text, null, {\n                      default: _withCtx(() => [_createTextVNode(\"Are you sure you would like to submit your form?\")]),\n                      _: 1 /* STABLE */\n                    }), _createVNode(_component_v_card_actions, null, {\n                      default: _withCtx(() => [_createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n                        color: \"green-darken-1\",\n                        variant: \"text\",\n                        onClick: _cache[46] || (_cache[46] = $event => _ctx.dialog1 = false)\n                      }, {\n                        default: _withCtx(() => [_createTextVNode(\" Dismiss \")]),\n                        _: 1 /* STABLE */\n                      }), _createVNode(_component_v_btn, {\n                        disabled: !_ctx.valid,\n                        color: \"success\",\n                        class: \"mr-4\",\n                        onClick: _cache[47] || (_cache[47] = $event => {\n                          $options.saveBiogearsFiles();\n                          _ctx.dialog1 = false;\n                        })\n                      }, {\n                        default: _withCtx(() => [_createTextVNode(\" Submit \")]),\n                        _: 1 /* STABLE */\n                      }, 8 /* PROPS */, [\"disabled\"])]),\n                      _: 1 /* STABLE */\n                    })]),\n\n                    _: 1 /* STABLE */\n                  })]),\n\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_spacer), _createVNode(_component_v_dialog, {\n                  modelValue: _ctx.dialog,\n                  \"onUpdate:modelValue\": _cache[51] || (_cache[51] = $event => _ctx.dialog = $event),\n                  persistent: \"\",\n                  width: \"auto\"\n                }, {\n                  activator: _withCtx(({\n                    props\n                  }) => [_createVNode(_component_v_btn, _mergeProps({\n                    color: \"error\"\n                  }, props), {\n                    default: _withCtx(() => [_createTextVNode(\" Reset Form \")]),\n                    _: 2 /* DYNAMIC */\n                  }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */)]),\n\n                  default: _withCtx(() => [_createVNode(_component_v_card, null, {\n                    default: _withCtx(() => [_createVNode(_component_v_card_title, {\n                      class: \"text-h5\"\n                    }, {\n                      default: _withCtx(() => [_createTextVNode(\" Reset Confirmation \")]),\n                      _: 1 /* STABLE */\n                    }), _createVNode(_component_v_card_text, null, {\n                      default: _withCtx(() => [_createTextVNode(\"Are you sure you would like to reset your form?\")]),\n                      _: 1 /* STABLE */\n                    }), _createVNode(_component_v_card_actions, null, {\n                      default: _withCtx(() => [_createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n                        color: \"green-darken-1\",\n                        variant: \"text\",\n                        onClick: _cache[49] || (_cache[49] = $event => _ctx.dialog = false)\n                      }, {\n                        default: _withCtx(() => [_createTextVNode(\" Dismiss \")]),\n                        _: 1 /* STABLE */\n                      }), _createVNode(_component_v_btn, {\n                        color: \"error\",\n                        class: \"mr-4\",\n                        onClick: _cache[50] || (_cache[50] = $event => {\n                          $options.reset();\n                          _ctx.dialog = false;\n                        })\n                      }, {\n                        default: _withCtx(() => [_createTextVNode(\" Reset Form \")]),\n                        _: 1 /* STABLE */\n                      })]),\n\n                      _: 1 /* STABLE */\n                    })]),\n\n                    _: 1 /* STABLE */\n                  })]),\n\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createCommentVNode(\" </v-col> \\n              </v-row> \")]),\n              _: 1 /* STABLE */\n            }), _hoisted_60, _createVNode(_component_v_row, {\n              class: \"justify-center\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[52] || (_cache[52] = $event => $options.nextTab('option-3')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-left\"\n                })]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_61]),\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":"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","names":["_imports_0","_createElementVNode","style","class","href","width","height","viewBox","version","id","xmlns","_createVNode","_component_v_toolbar","color","_component_v_toolbar_title","_component_v_tabs","large","_ctx","_component_v_tab","value","_component_v_icon","start","_component_v_main","_component_v_container","_component_v_window","_component_v_form","ref","_component_v_window_item","_createCommentVNode","_component_v_card","flat","_component_v_card_title","fluid","_component_v_row","align","justify","_component_v_col","cols","_component_v_img","src","alt","_component_v_card_text","_hoisted_1","_hoisted_2","_hoisted_3","_component_v_list","_component_v_list_item","_component_v_list_item_title","_hoisted_8","_hoisted_9","_hoisted_13","_hoisted_16","_hoisted_17","_hoisted_22","_component_v_btn","onClick","$options","density","icon","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_component_v_text_field","rules","label","required","_component_v_select","items","v","_component_v_slider","max","min","step","append","type","suffix","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_createBlock","clearable","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","sm","md","_createElementBlock","_hoisted_50","_hoisted_51","fill","d","_Fragment","exp","index","key","region","onChange","_component_v_autocomplete","side","openclose","compartment","hemrate","braininjurytype","burnsurfacearea","hint","severity","item","_component_v_combobox","Object","keys","multiple","chips","_hoisted_59","_component_v_dialog","persistent","activator","props","_mergeProps","_component_v_card_actions","_component_v_spacer","variant","disabled","_hoisted_60","_hoisted_61"],"sourceRoot":"","sources":["/Users/stlp/Desktop/Spring 2023/BIOEN 405/User Interface/MoHSES-Scenario-User-Interface/src/views/BioGearsView.vue"],"sourcesContent":["<template>\n\t<v-toolbar color=\"#3c2d70\" style=\"color: white\">\n\t\t<v-toolbar-title>BioGears Scenario Creation Tool</v-toolbar-title>\n\t</v-toolbar>\n\t<v-tabs large v-model=\"tab\" color=\"#3c2d70\">\n\t\t<v-tab value=\"home\">\n\t\t\t<v-icon start> mdi-home </v-icon> About this page </v-tab>\n\t\t<v-tab value=\"option-1\">\n\t\t\t<v-icon start> mdi-account </v-icon> Patient Information </v-tab>\n\t\t<v-tab value=\"option-2\">\n\t\t\t<v-icon start> mdi-access-point </v-icon> Patient Vitals </v-tab>\n\t\t<v-tab value=\"option-3\">\n\t\t\t<v-icon start> mdi-access-point </v-icon> Environment Properties </v-tab>\n\t\t<v-tab value=\"option-4\">\n\t\t\t<v-icon start> mdi-list-status </v-icon> Configure Patient Scenario </v-tab>\n\t</v-tabs>\n\t<v-main class=\"bg-grey-lighten-3\">\n\t\t<v-container>\n\t\t\t<v-window v-model=\"tab\" class=\"mt-n12\">\n\t\t\t\t<v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n\t\t\t\t\t<v-window-item value=\"home\">\n\t\t\t\t\t\t<!-- <v-card class=\"bg-grey-lighten-3\" flat> -->\n              <v-card color=\"white\" flat>\n\t\t\t\t\t\t\t<v-card-title class=\"text-center\" style=\"font-size: 36px\">Welcome to the BioGears Scenario Creation Tool!</v-card-title>\n\t\t\t\t\t\t\t<v-container fluid>\n\t\t\t\t\t\t\t\t<v-row align=\"center\" justify=\"center\">\n\t\t\t\t\t\t\t\t\t<v-col cols=\"12\">\n\t\t\t\t\t\t\t\t\t\t<v-img src=\"@/assets/crest_logo.jpg\" alt=\"Your image\" class=\"mx-auto\" width=\"40%\" height=\"40%\" /> </v-col>\n\t\t\t\t\t\t\t\t</v-row>\n\t\t\t\t\t\t\t</v-container>\n\t\t\t\t\t\t\t<v-card-text>\n\t\t\t\t\t\t\t\t<p style=\"font-size: 14px\">This tool is designed to simplify the process of generating BioGears Scenario XML files. First, input patient information and healthy vitals to define a BioGears patient. Then configure injuries to define a specific patient scenario and click Submit. This will locally download BioGears-compatible Patient and Scenario XML files, which can then be inputted into BioGears via command line. After running BioGears with this file, user will have a MoHSES-compatible state file with data on the simulated injured patient's vitals.</p>\n\t\t\t\t\t\t\t</v-card-text>\n\t\t\t\t\t\t\t<v-card flat>\n                <v-card-text>\n      \n            <div class=\"text-h4\">BioGears Guide</div>\n            <p>After generating the Custom Patient and Scenario files using the BioGears Scenario Creation Tool tab, users must run BioGears with the files in order to generate\n              a MoHSES-compatible state file. The following are instructions on how to run BioGears:\n            </p>\n            <v-list>\n              <v-list-item > <v-list-item-title style=\"font-size: 21px\">1. Build BioGears</v-list-item-title>Create a folder in your Desktop titled 'biogears'. In the command line, navigate to this folder. Clone the BioGears <a href=\"https://github.com/BioGearsEngine/core\">codebase</a> to your local computer by running:\n                <pre>git clone https://github.com/BioGearsEngine/core.git </pre> in command line.\n                Follow the build instructions from the <a href=\"https://github.com/BioGearsEngine/core/wiki/Build-Instructions\">Github Wiki</a> for your operating system (also described below).\n               \n                <br>\n                <br>\n                <b>For MacOS (M1/M2 chip): </b><br>\n                Install Homebrew using by running: <pre>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\" </pre> in command line.\n                Add Homebrew to path using: <pre>echo 'eval \"$(/opt/homebrew/bin/brew shellenv)\"' >> ~/.zprofile </pre>\n                <pre>eval \"$(/opt/homebrew/bin/brew shellenv)\"  </pre>\n                Install dependencies using:\n <pre>  brew install wget\n  brew install git\n  brew install ninja\n  brew  install g++\n  brew  install gcc\n  brew  install eigen\n  brew  install xerces-c\n  brew  install xsd\n  brew install cmake\n</pre>\n              Assuming the BioGears repository was cloned in the biogears folder on Desktop, run the following commands to build BioGears:\n              <pre>\n  cd ~/Desktop/biogears\n  cd core\n  mkdir build; cd build\n  cmake -G \"Ninja\" -DCMAKE_INSTALL_PREFIX=~/Desktop/BiogearsInstall -DBiogears_BUILD_HOWTOS=ON ..\n  ninja bg-cli\n              </pre>\n      <b>For Windows:</b> <br>\n      put instructions here\n              </v-list-item>\n              <v-list-item> <v-list-item-title style=\"font-size: 21px\">2. Move downloaded files to proper directories</v-list-item-title> After clicking Submit in the BioGears Scenario Creation Tool tab, two files should be downloaded - CustomScenario.xml and CustomPatient.xml.\n                Within the BioGears directory folder, move CustomScenario.xml to the <i>core/build/runtime/Scenarios/Patient</i> folder. Also within the BioGears directory folder,\n                move CustomPatient.xml to the <i>core/build/runtime/patients</i> folder.\n              </v-list-item>\n\n              <v-list-item> <v-list-item-title style=\"font-size: 21px\">3. Run BioGears executable in command line</v-list-item-title>Open command line and within the BioGears directory, navigate to <i>core/build/runtime</i>. \n                Run the BioGears executable by running this command: <br> <pre>../outputs/Release/bin/bg-cli SCENARIO ./Scenarios/Patient/CustomScenario.xml </pre>\n                \n                This may take a couple minutes to run. After BioGears has finished running, within the <i>Scenarios/Patient folder</i>, there should be CustomScenario.log and CustomScenario.csv files.\n                The csv file can be inputted into the BioGears Plotting Tool Tab to visualize the simulated physiological variables over time. \n                <br>\n                Most importantly, under the <i>core/build/runtime/states</i> folder, a new file called CustomBioGearsState.xml will be created, which is the MoHSES-compatible state file \n                that can be used to generate the MoHSES Scenario file.\n              </v-list-item>\n            </v-list>\n             </v-card-text>\n            </v-card>\n\t\t\t\t\t\t\t<v-col cols=\"auto\">\n\t\t\t\t\t\t\t\t<v-btn @click=\"nextTab('option-1')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\n\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t</v-card>\n\t\t\t\t\t\t<br>\n\t\t\t\t\t\t<br>\n\t\t\t\t\t\t<br> </v-window-item>\n\t\t\t\t\t\t<v-window-item value=\"option-1\">\n            <v-card flat>\n              <v-card-text>\n                <p style=\"font-size: 20px\">Please enter patient information:</p>\n                <br>\n                <v-text-field\n                v-model=\"patient_props['Name']\"\n                :rules=\"nameRules\"\n                label=\"Name\"\n                required>\n                </v-text-field>\n\n                <v-select\n                  v-model=\"patient_props['Sex']\"\n                  :items=\"genders\"\n                  :rules=\"[v => !!v || 'Sex is required']\"\n                  label=\"Sex\"\n                  required\n                ></v-select>\n\n                <v-slider v-model=\"patient_props['age']\" label=\"Age\" class=\"align-center\" :max=\"age_max\" :min=\"age_min\" :step=\"1\">\n                            <template v-slot:append>\n                               <v-text-field v-model=\"patient_props['age']\" hide-details single-line density=\"compact\" type=\"number\" suffix=\"years\" style=\"width: 180px\"></v-text-field>\n                            </template>\n                         </v-slider>\n                         <v-slider v-model=\"patient_props['height']\" label=\"Height\" class=\"align-center\" :max=\"height_max\" :min=\"height_min\" :step=\"0.1\">\n                            <template v-slot:append>\n                               <v-text-field v-model=\"patient_props['height']\" hide-details single-line density=\"compact\" type=\"number\" style=\"width: 90px\"></v-text-field>\n                               <v-select v-model=\"height_unit\" hide-details single-line density=\"compact\" :items=\"height_units\" style=\"width: 90px\"></v-select>\n                            </template>\n                         </v-slider>\n                         <v-slider v-model=\"patient_props['weight']\" label=\"Weight\" class=\"align-center\" :max=\"weight_max\" :min=\"weight_min\" :step=\"0.1\">\n                            <template v-slot:append>\n                               <v-text-field v-model=\"patient_props['weight']\" hide-details single-line density=\"compact\" type=\"number\" style=\"width: 90px\"></v-text-field>\n                               <v-select v-model=\"weight_unit\" hide-details single-line density=\"compact\" :items=\"weight_units\" style=\"width: 90px\"></v-select>\n                            </template>\n                         </v-slider>\n              </v-card-text>\n            </v-card>\n            <br>\n            <v-row justify=\"center\">\n              <v-col cols=\"auto\">\n                <v-btn @click=\"nextTab('home')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\n              </v-col>\n              <v-col cols=\"auto\">\n                <v-btn @click=\"nextTab('option-2')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\n              </v-col>\n            </v-row>\n            <br>\n          </v-window-item>\n\n        <v-window-item value=\"option-2\">\n          <v-card flat>\n            <v-card-text>\n              <p style=\"font-size: 20px\">Please enter <b>healthy</b>  patient vitals: </p>\n              <br>\n\n              <v-select\n                v-model=\"patient_vitals['BloodTypeABO']\"\n                :items=\"blood_types\"\n                label=\"Blood Type\"\n              ></v-select>\n\n              <v-select\n                v-model=\"patient_vitals['BloodTypeRh']\"\n                :items=\"rh\"\n                label=\"Rh\"\n              ></v-select>\n\n              <!-- <v-text-field\n                v-model=\"patient_vitals['mean_arterial_pressure']\"\n                label=\"Mean Arterial Pressure (mmHg)\"\n              ></v-text-field> -->\n              \n              <v-slider\n                v-model=\"patient_vitals['DiastolicArterialPressureBaseline']\"\n                label=\"Diastolic Arterial Pressure (mmHg)\"\n\t\t\t\tmax=\"80\"\n\t\t\t\tmin=\"60\"\n\t\t\t\tstep=\"0.5\"\n                required\n              ><template v-slot:append>\n                  <v-text-field\n                    v-model=\"patient_vitals['DiastolicArterialPressureBaseline']\"\n                    hide-details single-line density=\"compact\" type=\"number\" suffix=\"mmHg\" style=\"width: 180px\"\n                  ></v-text-field>\n                </template></v-slider>\n\n              <v-slider\n                v-model=\"patient_vitals['SystolicArterialPressureBaseline']\"\n                label=\"Systolic Arterial Pressure (mmHg)\"\n\t\t\t\tmax=\"120\"\n\t\t\t\tmin=\"90\"\n\t\t\t\tstep=\"0.5\"\n                required\n              ><template v-slot:append>\n                  <v-text-field\n                    v-model=\"patient_vitals['SystolicArterialPressureBaseline']\"\n                    hide-details single-line density=\"compact\" type=\"number\" suffix=\"mmHg\" style=\"width: 180px\"\n                  ></v-text-field>\n                </template></v-slider>\n\n              <v-slider\n                v-model=\"patient_vitals['HeartRateBaseline']\"\n                label=\"Heart Rate\"\n                class=\"align-center\"\n                :max=\"heart_rate_max\"\n                :min=\"heart_rate_min\"\n                :step=\"1\"\n              ><template v-slot:append>\n                  <v-text-field\n                    v-model=\"patient_vitals['HeartRateBaseline']\"\n                    hide-details single-line density=\"compact\" type=\"number\" suffix=\"bpm\" style=\"width: 180px\"\n                  ></v-text-field>\n                </template>\n              </v-slider>\n              <v-slider\n                v-model=\"patient_vitals['RespirationRateBaseline']\"\n                label=\"Respiratory Rate\"\n                class=\"align-center\"\n                :max=\"resp_rate_max\"\n                :min=\"resp_rate_min\"\n                :step=\"1\"\n              >\n                <template v-slot:append>\n                  <v-text-field\n                    v-model=\"patient_vitals['RespirationRateBaseline']\"\n                    hide-details single-line density=\"compact\" type=\"number\" suffix=\"/min\" style=\"width: 180px\"\n                  ></v-text-field>\n                </template>\n              </v-slider>\n\n\n\n            </v-card-text> \n          </v-card>\n          <br>\n          <v-row justify=\"center\">\n            <v-col cols=\"auto\">\n              <v-btn @click=\"nextTab('option-1')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\n            </v-col>\n            <v-col cols=\"auto\">\n              <v-btn @click=\"nextTab('option-3')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\n            </v-col>\n          </v-row>\n          <br>\n        </v-window-item>\n\t\t\t\t\t\t\t\t<v-window-item value=\"option-3\">\n\t\t\t\t\t\t<v-card flat>\n\t\t\t\t\t\t\t<v-card-text>\n\t\t\t\t\t\t\t\t<p style=\"font-size: 20px\"><b>Optional:</b> Please enter environment properties: </p>\n\t\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t\t<v-text-field v-model=\"date\" type=\"date\" label=\"Date\"></v-text-field>\n\t\t\t\t\t\t\t\t<v-row>\n\t\t\t\t\t\t\t\t\t<v-col cols=\"6\">\n\t\t\t\t\t\t\t\t\t<v-text-field v-model=\"lat\" label=\"Latitude\"></v-text-field>\n\t\t\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t\t\t\t<v-col cols=\"6\">\n\t\t\t\t\t\t\t\t\t<v-text-field v-model=\"lon\" label=\"Longitude\"></v-text-field>\n\t\t\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t\t\t</v-row>\n\t\t\t\t\t\t\t\t<v-btn @click=\"pullEnvironmentData\" color=\"#3c2d70\" style=\"color: white\">Generate Environment Data</v-btn>\n\t\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t\t<v-slider v-if=\"weatherData\" v-model=\"environment_props['temperature']\" label=\"Temperature\" clearable class=\"align-center\" :max=\"temperature_max\" :min=\"temperature_min\" :step=\"0.1\">\n\t\t\t\t\t\t\t\t\t<template v-slot:append>\n\t\t\t\t\t\t\t\t\t\t<v-text-field v-model=\"environment_props['temperature']\" hide-details clearable single-line density=\"compact\" type=\"number\" suffix=\"Celsius\" style=\"width: 180px\"></v-text-field>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t</v-slider>\n\t\t\t\t\t\t\t\t<v-slider v-if=\"weatherData\" v-model=\"environment_props['pressure']\" label=\"Pressure\" clearable class=\"align-center\" :max=\"pressure_max\" :min=\"pressure_min\" :step=\"0.1\">\n\t\t\t\t\t\t\t\t\t<template v-slot:append>\n\t\t\t\t\t\t\t\t\t\t<v-text-field v-model=\"environment_props['pressure']\" hide-details clearable single-line density=\"compact\" type=\"number\" suffix=\"mmHg\" style=\"width: 180px\"></v-text-field>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t</v-slider>\n\t\t\t\t\t\t\t\t<v-slider v-if=\"weatherData\" v-model=\"environment_props['humidity']\" label=\"Relative Humidity\" clearable class=\"align-center\" :max=\"100\" :min=\"0\" :step=\"0.1\">\n\t\t\t\t\t\t\t\t\t<template v-slot:append>\n\t\t\t\t\t\t\t\t\t\t<v-text-field v-model=\"environment_props['humidity']\" hide-details clearable single-line density=\"compact\" type=\"number\" suffix=\"%\" style=\"width: 180px\"></v-text-field>\n\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t</v-slider>\n\t\t\t\t\t\t\t\t<v-row>\n\t\t\t\t\t\t\t\t\t<v-col cols=\"8\">\n\t\t\t\t\t\t\t\t\t<v-text-field v-if=\"weatherData\" v-model=\"environment_props['cityName']\" label=\"City\"></v-text-field>\n\t\t\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t\t\t\t<v-col cols=\"4\">\n\t\t\t\t\t\t\t\t\t<v-text-field v-if=\"weatherData\" v-model=\"environment_props['state']\" label=\"State\"></v-text-field>\n\t\t\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t\t\t</v-row>\n\t\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t</v-card-text>\n\t\t\t\t\t\t</v-card>\n\t\t\t\t\t\t<br>\n\t\t\t\t\t\t<v-row justify=\"center\">\n\t\t\t\t\t\t\t<v-col cols=\"auto\">\n\t\t\t\t\t\t\t\t<v-btn @click=\"nextTab('option-2')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\n\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t\t<v-col cols=\"auto\">\n\t\t\t\t\t\t\t\t<v-btn @click=\"nextTab('option-4')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\n\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t</v-row>\n\t\t\t\t\t\t<br> </v-window-item>\n\t\t\t\t\t\t<v-window-item value=\"option-4\">\n          <v-card flat>\n            <v-card-text>\n            <p style=\"font-size: 20px\">Please enter a title and brief description for this patient scenario: </p>\n            <br>\n            <v-text-field v-model=\"scenario_props['Name']\" label=\"Scenario Name\"> </v-text-field>\n            <v-text-field v-model=\"scenario_props['Description']\" label=\"Scenario Brief Description\"> </v-text-field>\n            <p style=\"font-size: 20px\">Please configure patient injuries and timeline:</p>\n            <br>\n            <br>\n            <v-row>\n              <v-col cols=\"12\" sm=\"8\" md=\"6\" class=\"my-content\">\n\n                <svg\n                  width=\"550px\"\n                  height=\"600px\"\n                  viewBox=\"15 0 20 100\"\n                  version=\"1.1\"\n                  id=\"svg46\"\n                  sodipodi:docname=\"human_sanika.svg\"\n                  inkscape:version=\"1.2.2 (732a01da63, 2022-12-09)\"\n                  xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n                  xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  xmlns:svg=\"http://www.w3.org/2000/svg\">\n                  <defs\n                    id=\"defs50\" />\n                  <path\n\t\t\t\t:fill=\"colors['Chest']\"\n                    id=\"Chest\"\n                    d=\"m 2.4651865,21.528509 -1.72941989,3.09103 -1.89346001,0.94785 1.15295001,0.90662 0.90586,2.63773 2.09966989,0.86537 3.34636,-1.655 -0.83462,-6.50527 z m 8.9862405,0 1.72942,3.09103 1.89346,0.94785 -1.15295,0.90662 -0.90604,2.63773 -2.09968,0.86537 -3.3452405,-1.655 0.83425,-6.50527 z\"\n                    />\n                  <path\n                    :fill=\"colors['Abdomen']\"\n                    id=\"Abdomen\"\n                    d=\"m 3.5133365,30.595379 3.11202,-1.40603 -0.0937,2.27965 -2.80138,1.4364 z m -1.93508,1.6685 1.29355,0.72139 -0.14997,-1.70899 z m 1.05303,-1.637 -2.47930989,-1.03259 0.93360999,2.52148 z m -1.5316399,1.73729 1.6900499,1.03372 0.28871,2.06743 -1.64881,-1.07515 z m 2.9114199,1.10421 0.0623,1.62387 2.30327,-0.49961 0.12448,-2.21703 z m 0.15561,2.40432 -0.0309,1.99844 2.20973,0.59353 0.0311,-3.1227 z m -2.6546,-0.98516 1.48384,1.0339 0.20622,2.10905 -1.64975,-1.32355 z m 5.23795,14.47521 -0.60647,-5.91209 -0.015,-3.84879 -2.18479,-1.07533 -0.24746,7.03017 z m 0.41581,-5.7e-4 0.60628,-5.91209 0.0154,-3.84915 2.18404,-1.07515 0.2474605,7.03017 z m -4.00588,-10.21155 -1.81341,-1.36479 -0.15748,1.83347 -1.28567989,2.37432 1.98044989,2.73595 1.03109,0.16554 0.37119,-3.88721 z m 7.2429405,-8.55562 -3.1120205,-1.40604 0.0937,2.27965 2.8011905,1.43603 z m 1.93471,1.66849 -1.29355,0.7212 0.14997,-1.70898 z m -1.05303,-1.63718 2.47968,-1.03241 -0.9336,2.52093 z m 1.53164,1.73729 -1.69005,1.03372 -0.28871,2.0678 1.64975,-1.07533 z m -2.9114305,1.10421 -0.0622,1.62387 -2.30308,-0.49961 -0.12448,-2.21722 z m -0.1556,2.4045 0.0311,1.99844 -2.20953,0.59391 -0.0311,-3.1227 z m 2.6545905,-0.98535 -1.48383,1.03372 -0.20622,2.10905 1.64862,-1.32355 z m -1.64787,4.26366 1.81341,-1.36479 0.15748,1.83347 1.28642,2.37338 -1.98044,2.73652 -1.03109,0.16554 -0.37026,-3.88816 z\"/>\n                  <path\n                    :fill=\"colors['Pelvis']\"\n                    id=\"Pelvis\"\n                    d=\"m 0.73979661,43.812429 v 4.21363 l 2.94516989,5.8253 1.86028,5.78349 -0.19366,-4.0072 z m 3.24886989,13.42559 0.0647,0.15485 1.21294,2.90207 -0.78307,7.18803 -1.23618,-0.66102 1.0714,-6.69273 z m 1.52977,-7.75493 0.0221,-0.0277 -0.14866,-0.37945 -3.10172,-3.40449 -0.23283,-0.0825 2.05918,5.32009 z m -1.17263,2.01833 1.27705,3.29948 0.42631,-4.04862 -0.25196,-0.64303 z m 4.05219,-2.01795 -0.0221,-0.0281 0.14867,-0.37926 3.1017105,-3.40449 0.23246,-0.0825 -2.0584305,5.3199 z m 1.17263,2.01795 -1.27706,3.29948 -0.42631,-4.04843 0.25197,-0.64303 z m 3.6065705,-7.6888 v 4.21363 l -2.94574,5.82511 -1.8602705,5.78349 0.19365,-4.0072 z m -3.2494405,13.42596 -0.0649,0.15467 -1.21294,2.90207 0.78325,7.18803 1.2361905,-0.66122 -1.0714005,-6.69272 z\"\n                    />\n                  <path\n                    :fill=\"colors['Head']\"\n                    id=\"Head\"\n                    d=\"m 39.271427,10.801559 0.44208,-0.14964 0.16111,0.16427 1.48163,4.04751 2.32401,1.45118 2.39971,-1.52387 0.97577,-3.68969 0.52752,-0.55908 0.23367,0.0981 0.24198,-3.3446699 -2.03129,-2.31103 -2.84509,-0.51629 -2.20422,0.52915 -1.93631,2.63077 z m -28.40863,0.34495 0.0203,-2.2074699 -3.9668905,-2.7637 -3.74099,2.23559 -0.006,2.6352799 -0.60741,0.0403 0.27408,1.82447 0.97635,0.33932 0.44244,2.18029 1.82222,2.06556 2.03518,-0.0607 1.79223,-1.94408 0.3595705,-2.24066 0.97616,-0.33932 0.25159,-1.78416 z m -8.0771905,-0.34495 -0.0482,-2.5908499 4.20648,-2.46806 4.4276905,2.95361 -0.0405,1.9440799 0.24197,-3.3446699 -2.0312905,-2.31103 -2.84508,-0.51629 -2.20423,0.52915 -1.9363,2.63077 z\" />\n                  <path\n                    :fill=\"colors['Neck']\"\n                    id=\"Neck\"\n                    d=\"m 43.483667,16.548089 -2.35767,-1.55045 -1.47119,-3.95143 -0.60741,0.0403 0.27409,1.82447 0.97635,0.33932 0.7613,2.21572 0.33017,1.06849 0.0895,2.14894 1.16448,0.008 0.10563,-0.70833 0.54716,-0.0606 z m 1.01793,1.47595 0.23768,0.64982 1.38107,-0.004 0.01,-2.38784 0.25971,-0.79061 0.57215,-2.1698 0.76359,-0.41018 0.25158,-1.78416 -0.62859,0.0193 -1.08488,3.89981 -2.39725,1.46684 0.2768,1.48507 z m -40.0829605,-1.67052 1.64975,2.35202 0.74426,2.62159 -1.73486,-1.38354 -0.86649,-2.97104 z m 5.08047,0 -1.64975,2.35202 -0.74538,2.62234 1.73486,-1.38354 0.86649,-2.97104 z\"\n                    />\n                  <path\n                    :fill=\"colors['Extremities']\"\n                    id=\"Extremities\"\n                    d=\"m 45.133277,68.516999 1.20605,3.01461 -0.70737,0.26558 -0.89755,3.51771 0.55802,-4.01191 z m 5.08496,-3.15003 -0.63355,1.8609 -0.16813,2.03261 -0.61313,1.93117 0.90584,-0.0851 0.28534,2.15982 z m -4.3014,6.58834 -1.27664,4.99697 0.28984,3.02284 0.67869,10.06546 1.66325,0.63506 3.504,-11.96959 -1.24986,-7.17525 z m -0.54053,20.8287 -0.85194,1.3581 -0.37189,0.79238 0.15589,1.21774 0.76983,0.74446 1.51186,0.12543 1.12989,-0.29192 0.24225,-0.95894 -0.80765,-1.30405 0.22563,-0.85987 -0.29679,-0.84153 0.0194,-1.81524 -1.53568,-0.54817 z m 1.19598,0.4675 -0.15943,1.25776 0.6023,0.97431 m 0.54436,0.29544 -1.06474,0.40084 -1.55326,-0.65137 m 3.56525,-39.90247 -3.97962,-1.70224 -0.56389,0.27131 -0.0528,1.79746 -0.075,4.64669 1.97837,6.04282 -0.47612,1.41403 1.42813,3.29446 1.7661,-0.30111 0.50079,-2.11605 0.1695,-1.75674 2.42102,-8.15763 0.009,-3.68308 z m 4.26465,-23.93238 -0.32785,-1.05121 -1.27383,-2.05489 1.38708,-2.96476 2.28579,0.91634 1.83971,1.74245 0.53937,1.78549 -0.26073,4.30868 z m 2.64394,15.3417 1.51839,0.0828 0.78033,-0.65476 1.16673,2.18281 0.79187,3.34623 -0.49843,0.21064 -0.55144,-2.21453 -0.50541,0.24292 0.30356,2.5012 -0.62882,0.23021 -0.36124,-2.50014 -0.56203,0.16666 0.16765,2.77019 -0.77603,0.30634 -0.19719,-2.87245 -0.45732,-0.0278 -0.22215,2.64829 -0.66539,0.24928 0.0254,-4.56692 -0.3374,-0.20146 -1.38845,1.65469 -0.32098,-0.35041 0.76973,-2.03928 z m 0.97685,-0.1799 1.43335,-0.74932 0.29002,-7.01054 c 0,0 -0.65,-2.77789 -0.64401,-3.06126 l -0.61212,-1.21783 -3.98124,-2.57566 1.0222,1.93525 -0.38967,4.82212 1.8218,7.69308 z m -13.45979,-5.10285 0.14418,2.97292 1.15984,-0.0241 0.048,-2.96488 2.80867,-0.81981 2.34029,-0.7541 1.34121,3.73319 -4.77886,1.36455 -2.33301,1.2158 -2.37536,-1.2333 -5.45663,-1.37716 1.51961,-3.95743 z m -7.0756,2.37946 5.48374,1.86457 2.27386,1.3378 2.74195,-1.74412 4.51804,-1.28077 0.90009,2.29721 0.675,3.4346 -0.81272,5.02838 -2.82636,0.16819 -4.11256,-1.67581 -1.00814,0.39118 -0.95849,-0.39888 -4.44053,1.94411 -2.77023,-0.51478 -0.95181,-6.15325 0.36754,-2.7864 z m 6.4333,24.38495 -1.20605,3.01461 0.70738,0.26558 0.89754,3.51771 -0.55801,-4.01191 z m -5.08496,-3.15003 0.63355,1.8609 0.16813,2.03261 0.61314,1.93117 -0.90585,-0.0851 -0.28534,2.15982 z m 4.3014,6.58834 1.27664,4.99697 -0.28984,3.02284 -0.67869,10.06546 -1.66325,0.63506 -3.50399,-11.96959 1.24985,-7.17525 z m 0.54053,20.8287 0.85194,1.3581 0.37189,0.79238 -0.15588,1.21774 -0.76984,0.74446 -1.51185,0.12543 -1.1299,-0.29192 -0.24225,-0.95894 0.80765,-1.30405 -0.22562,-0.85987 0.29679,-0.84153 -0.0194,-1.81524 1.53568,-0.54817 z m -1.19598,0.4675 0.15943,1.25776 -0.6023,0.97431 m -0.54436,0.29544 1.06474,0.40084 1.55326,-0.65137 m -4.19331,-39.53466 4.55099,-2.03879 0.63802,0.23079 0.0353,1.80672 0.075,4.64669 -1.97837,6.04282 0.47612,1.41403 -1.42812,3.29446 -1.76611,-0.30111 -0.50079,-2.11605 -0.1695,-1.75674 -2.42102,-8.15763 -0.34279,-3.64687 z m -3.98895,-24.48137 0.4297,-1.4164 1.30458,-1.68577 -1.39393,-2.96155 -2.28367,0.92162 -1.83567,1.7467 -0.53524,1.78673 0.27068,4.30806 z m -2.46869,15.35539 -1.5182,0.0863 -0.78184,-0.65295 -1.16168,2.1855 -0.78414,3.34805 0.49892,0.20949 0.54632,-2.2158 0.50597,0.24175 -0.29779,2.5019 0.62936,0.22875 0.35546,-2.50096 0.56242,0.16536 -0.16126,2.77057 0.77674,0.30455 0.19056,-2.87291 0.45724,-0.0289 0.22827,2.64778 0.66597,0.24774 -0.0359,-4.56685 0.33693,-0.20224 1.39227,1.65147 0.32017,-0.35115 -0.77444,-2.03749 z m -0.97726,-0.17765 -1.43509,-0.746 -0.30622,-7.00985 c 0,0 0.64359,-2.77938 0.63694,-3.06274 l 0.6093,-1.21924 3.62552,-2.56583 -0.68276,1.9919 0.41561,4.74788 -1.80402,7.69727 z m -12.59945,1.31596 1.5198,0.0506 0.76631,-0.67111 1.21262,2.15766 0.86245,3.32873 -0.49386,0.22113 -0.59815,-2.20238 -0.50016,0.25356 0.35639,2.49422 -0.62382,0.24345 -0.41402,-2.49194 -0.55839,0.17851 0.2262,2.76603 -0.76938,0.32268 -0.25788,-2.86764 -0.4578,-0.0181 -0.16611,2.6524 -0.65997,0.26329 -0.0712,-4.56643 -0.34158,-0.19428 -1.35316,1.68368 -0.32832,-0.34355 0.72644,-2.0551 z m 1.18497,-16.19302 -0.005,3.09419 0.57959,1.91184 0.54538,-2.41185 z m -23.9347704,16.19302 -1.5198,0.0506 -0.76631,-0.67112 -1.21262,2.15767 -0.86245,3.32873 0.49386,0.22113 0.59815,-2.20238 0.50016,0.25356 -0.35639,2.49422 0.62382,0.24345 0.41402,-2.49194 0.55839,0.17851 -0.2262,2.76603 0.76938,0.32268 0.25788,-2.86764 0.4578,-0.0181 0.16611,2.65239 0.65997,0.2633 0.0712,-4.56643 0.34158,-0.19428 1.35316,1.68367 0.32832,-0.34354 -0.72644,-2.0551 z m -1.18497,-16.19302 0.005,3.09419 -0.57959,1.91184 -0.54539,-2.41185 z m 7.0789299,37.41425 -0.12448,1.12295 0.87118,1.08171 0.29058,1.70599 0.58116,0.24933 0.49774,-2.57866 0.33182,-0.91486 -0.29058,-0.58247 z m 3.85854,0.0832 -0.62241,1.74685 -1.32767,2.57867 0.33182,2.37095 0.95423,-2.66209 0.78832,-1.4964 z m -4.97867989,-2.37058 0.95422989,5.11609 -0.62239989,-0.33313 -0.49793,1.6638 z m 4.27340989,7.94395 -0.29058,0.91486 -0.62241,3.86828 -0.0829,5.15733 0.87174,5.03304 -0.0418,-6.44714 0.91298,-2.57848 0.1243,-2.82837 z m -1.99151,2.32914 0.20735,7.73637 1.65968,6.23904 -1.80497,-0.85299 -3.00797989,-10.83584 1.03728,-6.82095 z m 2.98717,15.09818 -0.12448,3.45228 -0.29058,1.20637 h -0.87118 l -0.24877,-0.83181 -0.29059,-0.0416 0.0623,0.83181 -1.09934,-0.33333 -0.29058,-0.16629 -1.2448,-0.27033 -0.0412,-0.97747 1.2031899,-2.03781 0.82975,-1.04009 2.03294,-0.83181 z m -6.16386989,-37.46914 0.15504,4.75053 2.40262989,6.60968 -0.73638,1.90021 -2.3640099,-8.34435 z m 0.58117,-11.60768 0.15503,4.00684 -1.31754001,7.93154 -0.61978,-6.40308 z m 0.38769,5.1223 2.75150989,6.07239 0.61997,4.87425 -1.16232,6.85771 -2.51904989,-6.98163 -0.15504,-7.18801 z m 12.16631039,20.87063 0.1243,1.12295 -0.87118,1.08171 -0.29058,1.70599 -0.58116,0.24933 -0.49774,-2.57866 -0.33182,-0.91486 0.29058,-0.58247 z m -3.8585305,0.0832 0.6224,1.74685 1.3273005,2.57867 -0.33182,2.37095 -0.9542305,-2.66209 -0.78738,-1.49734 z m 4.9781105,-2.37039 -0.95423,5.11609 0.62241,-0.33295 0.49773,1.66381 z m -4.2728405,7.94394 0.29058,0.91486 0.6224005,3.8681 0.0829,5.15733 -0.8713605,5.03304 0.0412,-6.44714 -0.91242,-2.57848 -0.12561,-2.82837 z m 1.9915005,2.32915 -0.20753,7.73637 -1.6594905,6.23904 1.8047805,-0.853 3.00816,-10.83583 -1.03727,-6.82095 z m -2.9869805,15.09817 0.1243,3.45228 0.28983,1.20638 h 0.87136 l 0.24897,-0.83181 0.2905805,-0.0416 -0.0624,0.83181 1.09914,-0.33332 0.29058,-0.16629 1.24444,-0.27033 0.0416,-0.97748 -1.20319,-2.03743 -0.82974,-1.0399 -2.0329405,-0.83181 z m 6.1631205,-37.46932 -0.15504,4.75091 -2.40263,6.60949 0.7362,1.90021 2.36401,-8.34435 z m -0.58154,-11.60825 -0.15485,4.00722 1.31793,7.93154 0.61977,-6.40308 z m -0.38731,5.12268 -2.75152,6.07258 -0.62015,4.87425 1.16232,6.85771 2.51886,-6.98144 0.15504,-7.18764 z m -17.8749004,-10.94443 -1.30083,10.28927 1.10778,0.01 1.89387,-7.99609 -0.19174,-4.53719 z m -1.21978,-1.94971 0.58728,2.58635 -1.11875,9.15614 -0.55849,-0.21663 -0.2304,-6.77018 z m 0.71916,-0.2047 0.33838,1.70499 1.81931,-2.54418 0.66289,-1.26895 z m 2.8527,-2.6096 c 0.0259,-0.0144 0.0536,-0.0254 0.0824,-0.0324 l 1.48332001,-4.95503 -1.00455001,-2.08428 -1.65509,1.74532 -2.23034,6.67667 -0.0415,0.93739 c 1.06528,-0.84215 2.18961,-1.60679 3.36433,-2.28803 z m -1.6945,-5.75654 -1.64891,6.43421 0.36468,-4.92266 z m 21.7225804,10.52055 1.30083,10.28927 -1.10778,0.01 -1.89387,-7.99609 0.19174,-4.53719 z m 1.21978,-1.94971 -0.58729,2.58635 1.11876,9.15614 0.55849,-0.21663 0.2304,-6.77018 z m -0.55354,-0.2047 -0.33838,1.70499 -1.81932,-2.54418 -0.6629,-1.26895 z m -2.85271,-2.6096 c -0.0259,-0.0144 -0.0536,-0.0254 -0.0824,-0.0324 l -1.48333,-4.95503 1.00456,-2.08428 1.65511,1.74532 2.23034,6.67667 0.0415,0.93739 c -1.06528,-0.84215 -2.18962,-1.60679 -3.36434,-2.28803 z m 1.6945,-5.75654 1.64893,6.43421 -0.36469,-4.92266 z m -13.8386705,-9.20021 -3.55745989,1.97916 -0.72653,-0.35074 z m 0.107,0.43288 0.37119,1.73073 -2.18459,0.53561 -1.40114989,-0.49436 z m -3.98148989,1.97595 -0.75814,-0.41 -2.40806001,1.66799 -1.17364,1.50707 -0.62662,1.56259 0.0464,3.70195 1.3284,-1.72153 -0.0407,-2.59376 0.48843,-0.5005 c 0,0 3.09777001,-3.19057 3.14370001,-3.214 z m 0.2409,0.10873 c 0.002,0.0525 -3.32987001,3.54733 -3.32987001,3.54733 l -0.10067,3.10396 1.15426,-1.97782 2.22547001,-0.94804 1.56574989,-2.88481 z m 10.05660039,-2.51756 3.55748,1.97916 0.72653,-0.35074 z m -0.107,0.43288 -0.3711905,1.73073 2.1846005,0.53561 1.40116,-0.49436 z m 3.98151,1.97595 0.75814,-0.41 2.40806,1.66799 1.17364,1.50707 0.62662,1.5626 -0.0464,3.70194 -1.3284,-1.72153 0.0407,-2.59376 -0.48842,-0.50049 c 0,0 -3.09778,-3.19058 -3.14371,-3.21401 z m -0.2409,0.10873 c -10e-4,0.0525 3.32987,3.54733 3.32987,3.54733 l 0.10067,3.10396 -1.15426,-1.97782 -2.22547,-0.94804 -1.56576,-2.88481 z\"\n                    />\n                  <path\n                    :fill=\"colors['Back']\"\n                    id=\"Back\"\n                    d=\"m 40.739147,19.072339 0.063,-2.62462 -0.71441,1.15181 -4.37994,1.49796 4.97857,8.36746 1.83043,5.08188 -0.21949,-13.55362 z m -7.42423,1.95717 -1.57473,1.56517 -0.81404,2.06905 -0.38603,2.52859 1.83679,-1.23927 2.76223,-1.15538 1.84691,3.4342 1.13679,5.49715 0.0767,5.8593 4.07066,1.10938 -0.10355,-7.94098 -1.94107,-4.90022 -5.04395,-8.19334 z m 13.23814,-1.85796 -0.063,-2.62463 0.71441,1.15181 4.37994,1.49796 -4.97857,8.36746 -1.83043,5.08189 0.21949,-13.55362 z m 7.42423,1.95716 1.57473,1.56518 0.81404,2.06904 0.0384,2.52859 -1.48921,-1.23926 -2.76223,-1.15539 -1.84691,3.4342 -1.13679,5.49715 -0.0767,5.8593 -4.07066,1.10938 0.10355,-7.94098 1.94107,-4.90021 5.04395,-8.19335 z m -11.12961,-1.764514 0.53876,25.33066 0.48967,-0.0297 0.65658,-25.3387 -0.28147,-0.84188 -1.25059,-4.9e-4 z\" />\n                </svg>\n              </v-col>\n\n              <v-col>\n                <div v-for=\"(exp, index) in action\" :key=\"index\">\n                  <v-select v-model=\"exp.region\" label=\"Select Body Region\" :items=\"body_regions\"  :onChange=\"changeColors()\"></v-select>\n                  <v-autocomplete v-model=\"exp.type\" label=\"Select Injury Type\" :items=\"patient_body[exp.region]\"></v-autocomplete>\n                  <v-row>\n                    <v-col>\n                      <v-select v-if=\"exp.type==='Tension Pneumothorax'\" v-model=\"exp.side\" label=\"Select side\" :items=\"sides\" style=\"width: 200px\" class=\"align-left\"></v-select>\n                    </v-col>\n                    <v-col>\n                      <v-select v-if=\"exp.type==='Tension Pneumothorax'\" v-model=\"exp.openclose\" label=\"Open or Closed\" :items=\"open_closed\" class=\"align-right\" style=\"width: 200px\"></v-select>\n                    </v-col>\n                  </v-row>\n                  <v-select v-if=\"exp.type==='Hemorrhage'\" v-model=exp.compartment label=\"Select compartment\" :items=\"hemorrhage_regions[exp.region]\"></v-select>\n                  <v-text-field v-if=\"exp.type==='Hemorrhage'\" v-model=\"exp.hemrate\" label=\"Initial Rate\" suffix=\"mL/min\"></v-text-field>\n                  <v-select v-if=\"exp.type==='Brain Injury'\" v-model=exp.braininjurytype label=\"Select type\" :items=\"brain_injury_types\"></v-select>\n                  <v-text-field v-if=\"exp.type==='Burn Wound'\" v-model=exp.burnsurfacearea label=\"Enter Fraction of Total Body Surface Area Affected\" hint=\"Enter a decimal between 0 and 1.\"></v-text-field>\n                  <v-slider v-if=\"(exp.type!='Hemorrhage') && (exp.type!='Burn Wound') && (exp.type!='Cardiac Arrest')\" v-model=\"exp.severity\" label=\"Severity\" class=\"align-center\" :max=\"sev_max\" :min=\"sev_min\" :step=\"0.1\">\n                    <template v-slot:append>\n                      <v-text-field v-model=\"exp.severity\" hide-details single-line density=\"compact\" style=\"width: 90px\"></v-text-field>\n                    </template>\n                  </v-slider>\n                </div>\n                <v-btn @click=\"removeAction(-1)\">Remove Injury</v-btn>\n                <v-btn @click=\"addAction\">Add Another Injury</v-btn>\n                <v-form\n                  ref=\"form\"\n                  v-model=\"valid\"\n                  lazy-validation\n                  >\n                    <v-combobox v-for=\"(item, index) in name\"\n                      :key=\"index\"\n                      :label=\"Object.keys(item)[0]\"\n                      :items='patient_body[Object.keys(item)[0]]'\n                      v-model=\"item[Object.keys(item)[0]]\" \n                      multiple\n                      chips      \n                  ></v-combobox>\n                </v-form>\n              </v-col>\n            </v-row>\n            <br>\n            <v-slider v-model=\"action_time\" label=\"Medical Responder Time to Scene\" class=\"align-center\" :max=\"time_max\" :min=\"time_min\" :step=\"0.5\">\n                            <template v-slot:append>\n                              <v-text-field v-model=\"action_time\" hide-details single-line density=\"compact\" :items=\"time_units\" style=\"width: 90px\"></v-text-field>\n                              <v-select v-model=\"action_unit\" hide-details single-line density=\"compact\" :items=\"time_units\" style=\"width: 90px\"></v-select>\n                            </template>\n                         </v-slider>\n        \n\n                <!-- <v-row>\n                <v-col cols=\"auto\"> -->\n                  <v-dialog\n      v-model=\"dialog1\"\n      persistent\n      width=\"auto\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"success\"\n          v-bind=\"props\"\n        >\n          Submit\n        </v-btn>\n      </template>\n      <v-card>\n        <v-card-title class=\"text-h5\">\n          Submission Confirmation\n        </v-card-title>\n        <v-card-text>Are you sure you would like to submit your form?</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"green-darken-1\"\n            variant=\"text\"\n            @click=\"dialog1 = false\"\n          >\n            Dismiss\n          </v-btn>\n          <v-btn :disabled=\"!valid\" color=\"success\" class=\"mr-4\" @click=\"saveBiogearsFiles(); dialog1=false\"> Submit </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-spacer></v-spacer>\n    <v-dialog\n      v-model=\"dialog\"\n      persistent\n      width=\"auto\"\n    >\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          color=\"error\"\n          v-bind=\"props\"\n        >\n          Reset Form\n        </v-btn>\n      </template>\n      <v-card>\n        <v-card-title class=\"text-h5\">\n          Reset Confirmation\n        </v-card-title>\n        <v-card-text>Are you sure you would like to reset your form?</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn\n            color=\"green-darken-1\"\n            variant=\"text\"\n            @click=\"dialog = false\"\n          >\n            Dismiss\n          </v-btn>\n          <v-btn color=\"error\" class=\"mr-4\" @click=\"reset(); dialog=false\"> Reset Form </v-btn>\n          </v-card-actions>\n          </v-card>\n          </v-dialog>\n              </v-card-text>\n              <!-- </v-col> \n              </v-row> -->\n            </v-card>  \n            <br>\n            <v-row class=\"justify-center\">\n                <v-col cols=\"auto\">\n                    <v-btn @click=\"nextTab('option-3')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\n                </v-col>\n                </v-row>\n                <br>   \n        </v-window-item>\n\t\t\t\t</v-form>\n\t\t\t</v-window>\n\t\t</v-container>\n\t</v-main>\n</template>\n<script>\nimport xmlbuilder from 'xmlbuilder'\nexport default {\n\tdata: () => ({\n\t\tenvironment_props: {\n\t\t\t\"temperature\": null,\n\t\t\t\"pressure\": null,\n\t\t\t\"humidity\": null,\n\t\t\t\"state\": null,\n\t\t\t\"cityName\": null,\n\t\t},\n\t\ttemperature_min: 0,\n\t\ttemperature_max: 100,\n\t\tpressure_min: 0,\n\t\tpressure_max: 1000,\n\t\tweatherData: null,\n\t\tlat: null,\n\t\tlon: null,\n\t\tdate: null,\n\t\tdialog1: null,\n\t\tdialog: null,\n\t\tage_min: 18,\n      age_max: 65,\n      core_temp_min: 0,\n      core_temp_max: 70,\n      heart_rate_min: 50,\n      heart_rate_max: 109,\n      resp_rate_min: 12,\n      resp_rate_max: 20,\n      height_min: 55,\n      height_max: 190,\n      height_units: ['cm', 'in'],\n      height_unit: 'cm',\n      weight_min: 20,\n      weight_max: 250,\n      weight_units: ['kg', 'lb'],\n      weight_unit: 'kg',\n      time_min: 0,\n      time_max: 60,\n      action_time: 0,\n      action_unit: 'min',\n      sev_min: 0,\n      sev_max: 1,\n      med_options: ['A', 'B', 'C'],\n      tab: 'home',\n      name: [],\n      sides: ['Left', 'Right'],\n      open_closed: ['Open', 'Closed'],\n      drawer: false,\n      valid: true,\n      expanded: [0],\n      scenario_file_name: [],\n      action: [\n        { region: [],\n          type: [],\n        },\n      ],\n\t\tcolors: {\n\t\t'Head':'blue',\n        'Neck': 'black', \n        'Chest': 'black', \n        'Back':'black',\n        'Abdomen':'black', \n        'Pelvis':'black',\n        'Extremities':'black',\n\t\t},\n      patient_props: {\n        \"Name\": [],\n        \"Sex\": [],\n        \"age\": 44,\n        \"weight\": 65,\n        \"height\": 170\n        \n      },\n      patient_vitals: {\n        \"BloodTypeABO\": 'AB',\n        \"BloodTypeRh\": 'Positive',\n        \"HeartRateBaseline\": 72,\n        \"RespirationRateBaseline\": 14,\n        \"DiastolicArterialPressureBaseline\": 73.5,\n        \"SystolicArterialPressureBaseline\":114\n      },\n      scenario_props: {\n        'Name': [],\n        'Description': [],\n      },\n      genders: [\n        'Male',\n        'Female'\n      ],\n      patient_body: {\n        'Head':['Hemorrhage', 'Brain Injury', 'Acute Stress', 'Burn Wound'],\n        'Neck':['Airway Obstruction', 'Apnea', 'Burn Wound'], \n        'Chest':['Asthma Attack', 'Acute Respiratory Distress', 'Bronchoconstriction', 'Cardiac Arrest', 'Tension Pneumothorax', 'Burn Wound', 'Hemorrhage'], \n        'Back':['Burn Wound'],\n        'Abdomen':['Burn Wound'], \n        'Pelvis':['Burn Wound'],\n        'Extremities':['Burn Wound', 'Hemorrhage'],\n      },\n      hemorrhage_regions: {\n        'Head': ['Brain'],\n        'Chest': ['Aorta', 'Myocardium', 'Vena Cava', 'Lung'],\n        'Abdomen': ['Spleen', 'Liver', 'LeftKidney', 'RightKidney', 'Splanchnic', 'SmallIntestine', 'LargeIntestine'],\n        'Extremities': ['LeftArm', 'RightArm', 'LeftLeg', 'RightLeg']\n    },\n    brain_injury_types: [\n      'Diffuse',\n      'LeftFocal',\n      'RightFocal'\n    ],\n      body_regions: [\n        'Head',\n        'Neck', \n        'Chest', \n        'Back',\n        'Abdomen', \n        'Pelvis',\n        'Extremities']\n      ,\n      blood_types: [\n        'A',\n        'B',\n        'AB',\n        'O'\n      ],\n      rh: [\n        'Positive',\n        'Negative'\n      ],\n      time_units: [\n        's',\n        'min',\n        'hr'\n      ]\n\t}),\n\tmethods: {\n\t\tchangeColors() {\n\t\t\tconst selected_regions = []\n\t\t\tfor (var actions in this.action) {\n\t\t\t\tselected_regions.push(this.action[actions]['region'])\n\t\t\t}\n\t\t\tconsole.log(selected_regions)\n\t\t\t\tfor (let region of this.body_regions) {\n\t\t\t\t\tif (selected_regions.includes(region)) {\n\t\t\t\t\t\tthis.colors[region] = 'red';\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.colors[region] = 'black';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t},\n\t\tnextTab(id) {\n\t\t\t\tthis.tab = id;\n\t\t\t},\n\t\t\taddAction() {\n\t\t\t\tthis.action.push({\n\t\t\t\t\tregion: '',\n\t\t\t\t\ttype: '',\n\t\t\t\t\tseverity: ''\n\t\t\t\t});\n\t\t\t},\n\t\t\tremoveAction(index) {\n\t\t\t\tthis.action.splice(index, 1);\n\t\t\t},\n\t\t\tvalidate() {\n\t\t\t\tthis.$refs.form.validate()\n\t\t\t},\n\t\t\treset() {\n\t\t\t\tthis.$refs.form.reset()\n\t\t\t},\n\t\t\tpathClicked(id) {\n\t\t\t\tlet pathElement = document.getElementById(id);\n\t\t\t\tif(this.name.some(x => Object.keys(x).includes(id))) {\n\t\t\t\t\tthis.name = this.name.filter(x => !Object.keys(x).includes(id));\n\t\t\t\t} else {\n\t\t\t\t\tthis.name.push({\n\t\t\t\t\t\t[id]: ''\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif(pathElement.classList.contains(\"active\")) {\n\t\t\t\t\tpathElement.classList.remove(\"active\");\n\t\t\t\t} else {\n\t\t\t\t\tpathElement.classList.add(\"active\");\n\t\t\t\t}\n\t\t\t},\n\n      saveEnvXML() {\n\t\t\tconst xml = xmlbuilder.create('EnvironmentalConditions', {\n\t\t\t\tencoding: 'UTF-8',\n\t\t\t\tstandalone: 'no'\n\t\t\t})\t\n\t\t\txml.att({'xmlns':\"uri:/mil/tatrc/physiology/datamodel\",\n\t\t\t'contentVersion':\"Biogears_7.5.0+85\",\n\t\t\t'xmlns:xsi':\"http://www.w3.org/2001/XMLSchema-instance\",\n\t\t\t'xsi:schemaLocation':\"uri:/mil/tatrc/physiology/datamodel BioGearsDataModel.xsd\"})\t\n\t\t\t\n\t\t\txml.ele('Name', this.environment_props['name'])\n\t\t\txml.ele('SurroundingType', 'Air')\n\t\t\tconst airvel = xml.ele('AirVelocity')\n\t\t\tairvel.att({'readOnly': 'false', 'unit': 'm/s', 'value':0.1})\n\t\t\tconst ambTemp = xml.ele('AmbientTemperature')\n\t\t\tambTemp.att({'readOnly': 'false', 'unit':'degC', 'value': this.environment_props['temperature']})\n\t\t\tconst atmPress = xml.ele('AtmosphericPressure')\n\t\t\tatmPress.att({'readOnly': 'false', 'unit':'mmHg', 'value': this.environment_props['pressure']})\n\t\t\tconst clotRes = xml.ele('ClothingResistance')\n\t\t\tclotRes.att({'readOnly': 'false', 'unit': 'clo', 'value': 0.5})\n\t\t\tconst emiss = xml.ele('Emissivity')\n\t\t\temiss.att({'readOnly': 'false', 'value': 0.95})\n\t\t\tconst mrt = xml.ele('MeanRadiantTemperature')\n\t\t\tmrt.att({'readOnly': 'false', 'unit': 'degC', 'value': 22})\n\t\t\tconst relHum = xml.ele('RelativeHumidity')\n\t\t\trelHum.att({'readOnly': 'false', 'unit':'', 'value': this.environment_props['humidity']/100})\n\t\t\tconst rat = xml.ele('RespirationAmbientTemperature')\n\t\t\trat.att({'readOnly': 'false', 'unit': 'degC', 'value': 22})\n\t\t\tconst nitrogen = xml.ele('AmbientGas')\n\t\t\tnitrogen.att('Name', 'Nitrogen')\n\t\t\tconst fa1 = nitrogen.ele('FractionAmount')\n\t\t\tfa1.att({'readOnly': 'false', 'value': 0.7896})\n\t\t\tconst oxygen = xml.ele('AmbientGas')\n\t\t\toxygen.att('Name', 'Oxygen')\n\t\t\tconst fa2 = oxygen.ele('FractionAmount')\n\t\t\tfa2.att({'readOnly': 'false', 'value': 0.21})\n\t\t\tconst co2 = xml.ele('AmbientGas')\n\t\t\tco2.att('Name', 'CarbonDioxide')\n\t\t\tconst fa3 = co2.ele('FractionAmount')\n\t\t\tfa3.att({'readOnly': 'false', 'value': 0.0004})\n\n\t\t\n\t\t\tvar xmlString = xml.end({\n            pretty: true\n          });\n          const blob = new Blob([xmlString], {\n            type: 'text/xml'\n          })\n          const link = document.createElement('a')\n          link.href = URL.createObjectURL(blob)\n          link.download = 'CustomEnvironment.xml'\n          link.click()\t\n\t\t},\n\n\t\t\tsaveStateXML() {\n\t\t\t\tconst xml = xmlbuilder.create('Patient', {\n\t\t\t\t\tencoding: 'UTF-8',\n\t\t\t\t\tstandalone: \"yes\"\n\t\t\t\t})\n\t\t\t\txml.att({\n\t\t\t\t\t'xmlns': \"uri:/mil/tatrc/physiology/datamodel\",\n\t\t\t\t\t'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n\t\t\t\t\t'contentVersion': \"BioGears_7.5\"\n\t\t\t\t})\n\t\t\t\tfor(var key1 in this.patient_props) {\n\t\t\t\t\tif(key1 == 'age') {\n\t\t\t\t\t\tconst Age = xml.ele('Age')\n\t\t\t\t\t\tAge.att('value', this.patient_props[key1])\n\t\t\t\t\t\tAge.att('units', 'yr')\n\t\t\t\t\t} else if (key1 == 'height') {\n\t\t\t\t\t\tconst Height = xml.ele('Height')\n\t\t\t\t\t\tHeight.att('readOnly', 'false')\n\t\t\t\t\t\tHeight.att('value', this.patient_props[key1])\n\t\t\t\t\t\tHeight.att('unit', this.height_unit)\n\t\t\t\t\t} else if (key1 == 'weight') {\n\t\t\t\t\t\tconst Weight = xml.ele('Weight')\n\t\t\t\t\t\tWeight.att('readOnly', 'false')\n\t\t\t\t\t\tWeight.att('value', this.patient_props[key1])\n\t\t\t\t\t\tWeight.att('unit', this.weight_unit)\n\t\t\t\t\t} else {\n\t\t\t\t\t\txml.ele(key1, this.patient_props[key1])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(var key2 in this.patient_vitals) {\n\t\t\t\t\tif(key2 == 'BloodTypeRh') {\n\t\t\t\t\t\tif(this.patient_vitals[key2] == 'Positive') {\n\t\t\t\t\t\t\txml.ele(key2, 'true')\n\t\t\t\t\t\t} else if(this.patient_vitals[key2] == 'Negative') {\n\t\t\t\t\t\t\txml.ele(key2, 'false')\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if(key2 == 'DiastolicArterialPressureBaseline') {\n\t\t\t\t\t\tconst DiastolicArterialPressureBaseline = xml.ele('DiastolicArterialPressureBaseline')\n\t\t\t\t\t\tDiastolicArterialPressureBaseline.att('value', this.patient_vitals[key2])\n\t\t\t\t\t\tDiastolicArterialPressureBaseline.att('units', 'mmHg')\n\t\t\t\t\t} else if(key2 == 'SystolicArterialPressureBaseline') {\n\t\t\t\t\t\tconst SystolicArterialPressureBaseline = xml.ele('SystolicArterialPressureBaseline')\n\t\t\t\t\t\tSystolicArterialPressureBaseline.att('value', this.patient_vitals[key2])\n\t\t\t\t\t\tSystolicArterialPressureBaseline.att('units', 'mmHg')\n\t\t\t\t\t} else if(key2 == 'HeartRateBaseline') {\n\t\t\t\t\t\tconst HeartRate = xml.ele('HeartRateBaseline')\n\t\t\t\t\t\tHeartRate.att('value', this.patient_vitals[key2])\n\t\t\t\t\t\tHeartRate.att('units', '1/min')\n\t\t\t\t\t} else if(key2 == 'RespirationRateBaseline') {\n\t\t\t\t\t\tconst RespRate = xml.ele('RespirationRateBaseline')\n\t\t\t\t\t\tRespRate.att('value', this.patient_vitals[key2])\n\t\t\t\t\t\tRespRate.att('units', '1/min')\n\t\t\t\t\t} else {\n\t\t\t\t\t\txml.ele(key2, this.patient_vitals[key2])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar xmlString = xml.end({\n\t\t\t\t\tpretty: true\n\t\t\t\t});\n\t\t\t\tconst blob = new Blob([xmlString], {\n\t\t\t\t\ttype: 'text/xml'\n\t\t\t\t})\n\t\t\t\tconst link = document.createElement('a')\n\t\t\t\tlink.href = URL.createObjectURL(blob)\n\t\t\t\tlink.download = 'patientdata.xml'\n\t\t\t\tlink.click()\n\t\t\t},\n\t\t\tsaveScenarioXML() {\n\t\t\t\tconst xml = xmlbuilder.create('Scenario', {\n\t\t\t\t\tencoding: 'UTF-8',\n\t\t\t\t\tstandalone: \"yes\"\n\t\t\t\t})\n\t\t\t\txml.att({\n\t\t\t\t\t'xmlns': \"uri:/mil/tatrc/physiology/datamodel\",\n\t\t\t\t\t'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n\t\t\t\t\t'contentVersion': \"BioGears_7.5\"\n\t\t\t\t})\n\t\t\t\tfor(var key1 in this.scenario_props) {\n\t\t\t\t\txml.ele(key1, this.scenario_props[key1])\n\t\t\t\t}\n\t\t\t\tconst InitialParams = xml.ele('InitialParameters')\n\t\t\t\tInitialParams.ele('PatientFile', 'patientdata.xml')\n\t\t\t\tconst data_req = xml.ele('DataRequests')\n\t\t\t\tdata_req.att('SamplesPerSecond', 50)\n\t\t\t\tconst map = data_req.ele('DataRequest')\n\t\t\t\tmap.att('xsi:type', 'PhysiologyDataRequestData')\n\t\t\t\tmap.att('Name', 'MeanArterialPressure')\n\t\t\t\tmap.att('Unit', 'mmHg')\n\t\t\t\tmap.att('Precision', 1)\n\t\t\t\tconst sap = data_req.ele('DataRequest')\n\t\t\t\tsap.att('xsi:type', 'PhysiologyDataRequestData')\n\t\t\t\tsap.att('Name', 'SystolicArterialPressure')\n\t\t\t\tsap.att('Unit', 'mmHg')\n\t\t\t\tsap.att('Precision', 0)\n\t\t\t\tconst dap = data_req.ele('DataRequest')\n\t\t\t\tdap.att('xsi:type', 'PhysiologyDataRequestData')\n\t\t\t\tdap.att('Name', 'DiastolicArterialPressure')\n\t\t\t\tdap.att('Unit', 'mmHg')\n\t\t\t\tdap.att('Precision', 1)\n\t\t\t\tconst co = data_req.ele('DataRequest')\n\t\t\t\tco.att('xsi:type', 'PhysiologyDataRequestData')\n\t\t\t\tco.att('Name', 'CardiacOutput')\n\t\t\t\tco.att('Unit', 'L/min')\n\t\t\t\tco.att('Precision', 2)\n\t\t\t\tconst cvp = data_req.ele('DataRequest')\n\t\t\t\tcvp.att('xsi:type', 'PhysiologyDataRequestData')\n\t\t\t\tcvp.att('Name', 'CentralVenousPressure')\n\t\t\t\tcvp.att('Unit', 'mmHg')\n\t\t\t\tcvp.att('Precision', 2)\n\t\t\t\tconst hr = data_req.ele('DataRequest')\n\t\t\t\thr.att('xsi:type', 'PhysiologyDataRequestData')\n\t\t\t\thr.att('Name', 'HeartRate')\n\t\t\t\thr.att('Unit', '')\n\t\t\t\thr.att('Precision', 2)\n\t\t\t\tconst tv = data_req.ele('DataRequest')\n\t\t\t\ttv.att('xsi:type', 'PhysiologyDataRequestData')\n\t\t\t\ttv.att('Name', 'TidalVolume')\n\t\t\t\ttv.att('Unit', 'mL')\n\t\t\t\ttv.att('Precision', 3)\n\t\t\t\tconst rr = data_req.ele('DataRequest')\n\t\t\t\trr.att('xsi:type', 'PhysiologyDataRequestData')\n\t\t\t\trr.att('Name', 'RespirationRate')\n\t\t\t\trr.att('Unit', '1/min')\n\t\t\t\trr.att('Precision', 2)\n\t\t\t\tconst oxsat = data_req.ele('DataRequest')\n\t\t\t\toxsat.att('xsi:type', 'PhysiologyDataRequestData')\n\t\t\t\toxsat.att('Name', 'OxygenSaturation')\n\t\t\t\toxsat.att('Unit', 'unitless')\n\t\t\t\toxsat.att('Precision', 3)\n\t\t\t\tconst ct = data_req.ele('DataRequest')\n\t\t\t\tct.att('xsi:type', 'PhysiologyDataRequestData')\n\t\t\t\tct.att('Name', 'CoreTemperature')\n\t\t\t\tct.att('Unit', 'degC')\n\t\t\t\tct.att('Precision', 1)\n\t\t\t\tfor(var item2 in this.action) {\n\t\t\t\t\tconst act = xml.ele('Action')\n\t\t\t\t\tif(this.action[item2]['type'] == 'Tension Pneumothorax') {\n\t\t\t\t\t\tact.att('xsi:type', 'TensionPneumothoraxData')\n\t\t\t\t\t\tact.att('Type', this.action[item2]['openclose'])\n\t\t\t\t\t\tact.att('Side', this.action[item2]['side'])\n\t\t\t\t\t\tconst sev = act.ele('Severity')\n\t\t\t\t\t\tsev.att('value', this.action[item2]['severity'])\n\t\t\t\t\t} else if(this.action[item2]['type'] == 'Hemorrhage') {\n\t\t\t\t\t\tact.att('xsi:type', 'HemorrhageData')\n\t\t\t\t\t\tact.att('Compartment', this.action[item2]['compartment'])\n\t\t\t\t\t\tconst initrate = act.ele('InitialRate')\n\t\t\t\t\t\tinitrate.att('value', this.action[item2]['hemrate'])\n\t\t\t\t\t\tinitrate.att('unit', 'mL/min')\n\t\t\t\t\t} else {\n\t\t\t\t\t\tact.att('xsi:type', this.action[item2]['type'])\n\t\t\t\t\t\tconst sev = act.ele('Severity')\n\t\t\t\t\t\tsev.att('value', this.action[item2]['severity'])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst time_act = xml.ele('Action')\n\t\t\t\ttime_act.att('xsi:type', 'AdvanceTimeData')\n\t\t\t\tconst time = time_act.ele('Time')\n\t\t\t\ttime.att('value', this.action_time)\n\t\t\t\ttime.att('unit', this.action_unit)\n\t\t\t\tvar xmlString = xml.end({\n\t\t\t\t\tpretty: true\n\t\t\t\t});\n\t\t\t\tconst blob = new Blob([xmlString], {\n\t\t\t\t\ttype: 'text/xml'\n\t\t\t\t})\n\t\t\t\tconst link = document.createElement('a')\n\t\t\t\tlink.href = URL.createObjectURL(blob)\n\t\t\t\tlink.download = 'biogearsscenario.xml'\n\t\t\t\tlink.click()\n\t\t\t},\n\t\t\tsaveBiogearsFiles() {\n          this.saveStateXML()\n          this.saveScenarioXML()\n\t\tif ((this.environment_props['name'])!=null && (this.environment_props['temperature']!=null) && (this.environment_props['pressure']!=null)) {\n\t\tthis.saveEnvXML()\n\t\t}\n\t\t},\n\t\t\tasync pullEnvironmentData() {\n    const fetch = require('node-fetch'); // Only needed in Node.js environment\n    var apiKey = '7a72fefa61ba4a84959231957230205'; // Replace with your Weather API key\n    console.log(this.date);\n    try {\n        const response = await fetch(`http://api.weatherapi.com/v1/history.json?key=${apiKey}&q=${this.lat},${this.lon}&dt=${this.date}`);\n        const data = await response.json();\n        // Extract location information\n        const location = data.location;\n        this.environment_props['cityName'] = location.name;\n\t\tthis.environment_props['state'] = location.region;\n        if (data.forecast && data.forecast.forecastday && data.forecast.forecastday.length > 0) {\n            this.weatherData = data.forecast.forecastday[0].day;\n            this.environment_props['temperature'] = this.weatherData.avgtemp_c;\n            this.environment_props['humidity'] = this.weatherData.avghumidity;\n            console.log(`Temperature: ${this.environment_props['temperature']} °C`);\n            console.log(`Relative Humidity: ${this.environment_props['humidity']} %`);\n            console.log(data.forecast.forecastday[0].hour)\n\t\t\t// Calculate the sum of all pressure fields using the reduce() method\n\t\t\tconst sum = data.forecast.forecastday[0].hour.reduce((accumulator, currentObj) => {\n\t\t\treturn accumulator + currentObj.pressure_mb;\n\t\t\t}, 0);\n\t\t\t// Calculate the average by dividing the sum by the length of the dataArray\n\t\t\tthis.environment_props['pressure'] = sum / data.forecast.forecastday[0].hour.length / 1.33322;\n        } else {\n            console.log('No weather data found for the given location and date.');\n        }\n    } catch (error) {\n        console.error('Error fetching weather data:', error);\n    }\n},\n\n\t\t},\n}\n</script>\n<style>\n.my-content {\n\tmargin-top: -50px;\n\t/* Adjust the top margin */\n\t/* padding-left: 16px; Adjust the left padding */\n}\n\n@media (hover: hover) {\n\tsvg:hover {\n\t\tcursor: pointer;\n\t}\n\tsvg path:hover {\n\t\topacity: 0.8;\n\t}\n}\n\n#HeadNeck.active {\n\tfill: rgb(255, 0, 0);\n}\n\n#Chest.active {\n\tfill: rgb(163, 0, 0);\n}\n\n#Extremities.active {\n\tfill: rgb(89, 0, 0);\n}\n\n#Back.active {\n\tfill: rgb(255, 138, 138);\n}\n\n#AbdomenPelvis.active {\n\tfill: rgb(255, 135, 37);\n}\n\n.active {\n\tfill: #0004ff;\n}\n\n.noClick {\n\tpointer-events: none;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}