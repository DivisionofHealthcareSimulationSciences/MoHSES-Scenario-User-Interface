{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data: () => ({\n    chosenFile: null,\n    data: null,\n    columnData: []\n  }),\n  methods: {\n    importFile() {\n      if (this.chosenFile === null) {\n        this.data = \"No File Chosen\";\n      } else {\n        var reader = new FileReader();\n        var file = this.chosenFile[0];\n        // Use the javascript reader object to load the contents\n        // of the file in the v-model prop\n        reader.readAsText(file);\n        reader.onload = () => {\n          this.data = reader.result;\n          this.columnData = [];\n          const rows = this.data.split('\\n');\n          for (let i = 0; i < rows.length; i++) {\n            const columns = rows[i].split(',');\n            const columnValues = [];\n            for (let j = 0; j < columns.length; j++) {\n              this.columnValues.push(column[j]);\n            }\n          }\n          console.log(this.columnData);\n        };\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAqBA,eAAe;EACTA,IAAI,EAAE,OAAO;IACXC,UAAU,EAAE,IAAI;IAChBD,IAAI,EAAE,IAAI;IACVE,UAAU,EAAC;EACb,CAAC,CAAC;EACFC,OAAO,EAAE;IACPC,UAAU,GAAG;MAEf,IAAI,IAAI,CAACH,UAAS,KAAM,IAAI,EAAE;QAC5B,IAAI,CAACD,IAAG,GAAI,gBAAe;MAC7B,OAAO;QACL,IAAIK,MAAK,GAAI,IAAIC,UAAU,EAAE;QAC7B,IAAIC,IAAG,GAAI,IAAI,CAACN,UAAU,CAAC,CAAC;QAC5B;QACA;QACAI,MAAM,CAACG,UAAU,CAACD,IAAI,CAAC;QACvBF,MAAM,CAACI,MAAK,GAAI,MAAM;UACtB,IAAI,CAACT,IAAG,GAAIK,MAAM,CAACK,MAAM;UACzB,IAAI,CAACR,UAAS,GAAI,EAAE;UACpB,MAAMS,IAAG,GAAI,IAAI,CAACX,IAAI,CAACY,KAAK,CAAC,IAAI;UACjC,KAAK,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACF,IAAI,CAACG,MAAM,EAACD,CAAC,EAAE,EAAE;YAC7B,MAAME,OAAM,GAAIJ,IAAI,CAACE,CAAC,CAAC,CAACD,KAAK,CAAC,GAAG,CAAC;YAClC,MAAMI,YAAW,GAAI,EAAC;YACtB,KAAK,IAAIC,IAAG,CAAC,EAAEA,CAAC,GAACF,OAAO,CAACD,MAAM,EAACG,CAAC,EAAE,EAAE;cACjC,IAAI,CAACD,YAAY,CAACE,IAAI,CAACC,MAAM,CAACF,CAAC,CAAC;YACpC;UACJ;UACAG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnB,UAAU;QAC7B;MACF;IACJ;EACE;AACF","names":["data","chosenFile","columnData","methods","importFile","reader","FileReader","file","readAsText","onload","result","rows","split","i","length","columns","columnValues","j","push","column","console","log"],"sourceRoot":"","sources":["/Users/stlp/Desktop/Spring 2023/BIOEN 405/User Interface/MoHSES-Scenario-User-Interface/src/views/PlottingView.vue"],"sourcesContent":["<template>\n    <v-toolbar style=\"color: white\" color=\"#4b0082\">\n      <v-toolbar-title>BioGears Plotting Tool</v-toolbar-title>\n    </v-toolbar>\n    <v-main class=\"bg-grey-lighten-3\">\n      <v-container>\n        <v-card class=\"mt-n12\">\n          <v-card-text>\n            <p style=\"font-size: 20px\">Please upload your .CSV:</p>\n            <br>\n            <v-file-input v-model=\"chosenFile\"></v-file-input>\n            <v-spacer></v-spacer>\n            <v-btn @click=\"importFile\">Import File</v-btn>\n            <p>{{ this.data }}</p>\n        </v-card-text>\n        </v-card>\n      </v-container>\n    </v-main>\n  </template>\n  \n<script>\nexport default {\n      data: () => ({\n        chosenFile: null,\n        data: null,\n        columnData:[],\n      }),\n      methods: {\n        importFile() {\n      \n      if (this.chosenFile === null) {\n        this.data = \"No File Chosen\"\n      } else {\n        var reader = new FileReader();\n        var file = this.chosenFile[0]\n        // Use the javascript reader object to load the contents\n        // of the file in the v-model prop\n        reader.readAsText(file);\n        reader.onload = () => {\n        this.data = reader.result;\n        this.columnData = [];\n        const rows = this.data.split('\\n')\n        for (let i=0; i<rows.length;i++) {\n            const columns = rows[i].split(',');\n            const columnValues = []\n            for (let j =0; j<columns.length;j++) {\n                this.columnValues.push(column[j])\n            }\n        }\n        console.log(this.columnData)\n      }\n    }\n}\n  }\n}\n</script>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}