{"ast":null,"code":"export default {\n  data() {\n    return {\n      file: null\n    };\n  },\n  methods: {\n    handleFileUpload() {\n      if (this.file) {\n        // read file content\n        const reader = new FileReader();\n        reader.onload = () => {\n          const fileContent = reader.result;\n          // do something with the file content\n          console.log(fileContent);\n        };\n        reader.readAsText(this.file);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AA2BA,eAAe;EACbA,IAAI,GAAG;IACL,OAAO;MACLC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgB,GAAG;MACjB,IAAI,IAAI,CAACF,IAAI,EAAE;QACb;QACA,MAAMG,MAAK,GAAI,IAAIC,UAAU,EAAE;QAC/BD,MAAM,CAACE,MAAK,GAAI,MAAM;UACpB,MAAMC,WAAU,GAAIH,MAAM,CAACI,MAAM;UACjC;UACAC,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;QAC1B,CAAC;QACDH,MAAM,CAACO,UAAU,CAAC,IAAI,CAACV,IAAI,CAAC;MAC9B;IACF;EACF;AACF,CAAC","names":["data","file","methods","handleFileUpload","reader","FileReader","onload","fileContent","result","console","log","readAsText"],"sourceRoot":"","sources":["/Users/stlp/Desktop/Spring 2023/BIOEN 405/User Interface/MoHSES-Scenario-User-Interface/src/views/PlottingView.vue"],"sourcesContent":["<template>\n    <v-toolbar style=\"color: white\" color=\"#4b0082\">\n      <v-toolbar-title>BioGears Plotting Tool</v-toolbar-title>\n    </v-toolbar>\n    <v-main class=\"bg-grey-lighten-3\">\n      <v-container>\n        <v-card class=\"mt-n12\">\n          <v-card-text>\n            <p style=\"font-size: 20px\">Please upload your .CSV:</p>\n            <br>\n  <div>\n    <v-file-input\n      v-model=\"file\"\n      accept=\".csv\"\n      label=\"Upload CSV file\"\n      @change=\"handleFileUpload\"\n    ></v-file-input>\n  </div>\n\n\n\n          </v-card-text>\n        </v-card>\n      </v-container>\n    </v-main>\n  </template>\n  <script>\nexport default {\n  data() {\n    return {\n      file: null,\n    };\n  },\n  methods: {\n    handleFileUpload() {\n      if (this.file) {\n        // read file content\n        const reader = new FileReader();\n        reader.onload = () => {\n          const fileContent = reader.result;\n          // do something with the file content\n          console.log(fileContent);\n        };\n        reader.readAsText(this.file);\n      }\n    },\n  },\n};\n\n  </script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}