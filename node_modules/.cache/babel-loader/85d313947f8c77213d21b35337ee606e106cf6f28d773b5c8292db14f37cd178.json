{"ast":null,"code":"import * as d3 from 'd3';\nexport default {\n  name: 'CsvParser',\n  data() {\n    return {\n      file: null,\n      headers: [],\n      rows: []\n    };\n  },\n  methods: {\n    async parseCsv() {\n      const file = this.file;\n      if (!file) {\n        return;\n      }\n      try {\n        const text = await file.text();\n        const csv = d3.csvParse(text);\n        this.headers = Object.keys(csv[0]);\n        this.rows = csv;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AA6BE,OAAO,KAAKA,EAAC,MAAO,IAAI;AAExB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAI,GAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,QAAQ,GAAG;MACf,MAAMJ,IAAG,GAAI,IAAI,CAACA,IAAI;MACtB,IAAI,CAACA,IAAI,EAAE;QACT;MACF;MACA,IAAI;QACF,MAAMK,IAAG,GAAI,MAAML,IAAI,CAACK,IAAI,EAAE;QAC9B,MAAMC,GAAE,GAAIT,EAAE,CAACU,QAAQ,CAACF,IAAI,CAAC;QAC7B,IAAI,CAACJ,OAAM,GAAIO,MAAM,CAACC,IAAI,CAACH,GAAG,CAAC,CAAC,CAAC,CAAC;QAClC,IAAI,CAACJ,IAAG,GAAII,GAAG;MACjB,EAAE,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF;AACF,CAAC","names":["d3","name","data","file","headers","rows","methods","parseCsv","text","csv","csvParse","Object","keys","error","console"],"sourceRoot":"","sources":["/Users/stlp/Desktop/Spring 2023/BIOEN 405/User Interface/MoHSES-Scenario-User-Interface/src/views/PlottingView.vue"],"sourcesContent":["<template>\n    <v-container>\n      <v-file-input\n        accept=\".csv\"\n        v-model=\"file\"\n        label=\"Upload CSV file\"\n        @input=\"parseCsv\"\n        ref=\"\"\n      ></v-file-input>\n      <v-simple-table>\n        <template v-slot:default>\n          <thead>\n            <tr>\n              <th v-for=\"header in headers\" :key=\"header\">{{ header }}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(row, rowIndex) in rows\" :key=\"rowIndex\">\n              <td v-for=\"(value, columnIndex) in row\" :key=\"columnIndex\">\n                {{ value }}\n              </td>\n            </tr>\n          </tbody>\n        </template>\n      </v-simple-table>\n    </v-container>\n  </template>\n  \n  <script>\n  import * as d3 from 'd3';\n  \n  export default {\n    name: 'CsvParser',\n    data() {\n      return {\n        file: null,\n        headers: [],\n        rows: [],\n      };\n    },\n    methods: {\n      async parseCsv() {\n        const file = this.file;\n        if (!file) {\n          return;\n        }\n        try {\n          const text = await file.text();\n          const csv = d3.csvParse(text);\n          this.headers = Object.keys(csv[0]);\n          this.rows = csv;\n        } catch (error) {\n          console.error(error);\n        }\n      },\n    },\n  };\n  </script>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}