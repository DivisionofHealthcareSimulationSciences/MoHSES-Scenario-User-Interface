{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_file_input = _resolveComponent(\"v-file-input\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_v_file_input, {\n    modelValue: $data.file,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.file = $event),\n    accept: \".csv\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_btn, {\n    color: \"primary\",\n    onClick: $options.parseFile\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Parse File\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createElementVNode(\"p\", null, _toDisplayString($data.data), 1 /* TEXT */)]);\n}","map":{"version":3,"mappings":";;;;uBACIA,oBAIM,cAHJC,aAA0DC;gBAAnCC,UAAI;+DAAJA,UAAI;IAAEC,MAAM,EAAC;2CACpCH,aAA4DI;IAArDC,KAAK,EAAC,SAAS;IAAEC,OAAK,EAAEC;;sBAAW,MAAU,kBAAV,YAAU;;kCACpDC,oBAAkB,4BAAXN,UAAI","names":["_createElementBlock","_createVNode","_component_v_file_input","$data","accept","_component_v_btn","color","onClick","$options","_createElementVNode"],"sourceRoot":"","sources":["/Users/stlp/Desktop/Spring 2023/BIOEN 405/User Interface/MoHSES-Scenario-User-Interface/src/views/PlottingView.vue"],"sourcesContent":["<template>\n    <div>\n      <v-file-input v-model=\"file\" accept=\".csv\"></v-file-input>\n      <v-btn color=\"primary\" @click=\"parseFile\">Parse File</v-btn>\n      <p >{{ data }}</p>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        file: null,\n        data: [],\n      };\n    },\n    methods: {\n      parseFile() {\n        if (this.file === null) {\n          this.data = \"No file chosen\";\n          return;\n        }\n        \n        const reader = new FileReader();\n        reader.onload = (event) => {\n          const contents = event.target.result;\n          const rows = contents.split('\\n');\n          const data = [];\n          rows.forEach((row) => {\n            const columns = row.split(',');\n            data.push({\n              column1: columns[0],\n              column2: columns[1],\n              // add more columns as needed\n            });\n          });\n          this.data = data;\n        };\n        reader.readAsText(this.file);\n      },\n    },\n  };\n  </script>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}