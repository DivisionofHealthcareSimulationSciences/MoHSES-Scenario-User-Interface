{"ast":null,"code":"// Generated by CoffeeScript 2.4.1\n(function () {\n  var NodeType, XMLDTDElement, XMLNode;\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType');\n\n  // Represents an attribute\n  module.exports = XMLDTDElement = class XMLDTDElement extends XMLNode {\n    // Initializes a new instance of `XMLDTDElement`\n\n    // `parent` the parent `XMLDocType` element\n    // `name` element name\n    // `value` element content (defaults to #PCDATA)\n    constructor(parent, name, value) {\n      super(parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.ElementDeclaration;\n      this.value = this.stringify.dtdElementValue(value);\n    }\n\n    // Converts the XML fragment to string\n\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n    toString(options) {\n      return this.options.writer.dtdElement(this, this.options.writer.filterOptions(options));\n    }\n  };\n}).call(this);","map":{"version":3,"names":["NodeType","XMLDTDElement","XMLNode","require","module","exports","constructor","parent","name","value","Error","debugInfo","Array","isArray","join","stringify","type","ElementDeclaration","dtdElementValue","toString","options","writer","dtdElement","filterOptions","call"],"sources":["C:/Users/sanik/Downloads/capstone/MoHSES-Scenario-User-Interface/node_modules/xmlbuilder/lib/XMLDTDElement.js"],"sourcesContent":["// Generated by CoffeeScript 2.4.1\r\n(function() {\r\n  var NodeType, XMLDTDElement, XMLNode;\r\n\r\n  XMLNode = require('./XMLNode');\r\n\r\n  NodeType = require('./NodeType');\r\n\r\n  // Represents an attribute\r\n  module.exports = XMLDTDElement = class XMLDTDElement extends XMLNode {\r\n    // Initializes a new instance of `XMLDTDElement`\r\n\r\n    // `parent` the parent `XMLDocType` element\r\n    // `name` element name\r\n    // `value` element content (defaults to #PCDATA)\r\n    constructor(parent, name, value) {\r\n      super(parent);\r\n      if (name == null) {\r\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\r\n      }\r\n      if (!value) {\r\n        value = '(#PCDATA)';\r\n      }\r\n      if (Array.isArray(value)) {\r\n        value = '(' + value.join(',') + ')';\r\n      }\r\n      this.name = this.stringify.name(name);\r\n      this.type = NodeType.ElementDeclaration;\r\n      this.value = this.stringify.dtdElementValue(value);\r\n    }\r\n\r\n    // Converts the XML fragment to string\r\n\r\n    // `options.pretty` pretty prints the result\r\n    // `options.indent` indentation for pretty print\r\n    // `options.offset` how many indentations to add to every line for pretty print\r\n    // `options.newline` newline sequence for pretty print\r\n    toString(options) {\r\n      return this.options.writer.dtdElement(this, this.options.writer.filterOptions(options));\r\n    }\r\n\r\n  };\r\n\r\n}).call(this);\r\n"],"mappings":"AAAA;AACA,CAAC,YAAW;EACV,IAAIA,QAAQ,EAAEC,aAAa,EAAEC,OAAO;EAEpCA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;EAE9BH,QAAQ,GAAGG,OAAO,CAAC,YAAY,CAAC;;EAEhC;EACAC,MAAM,CAACC,OAAO,GAAGJ,aAAa,GAAG,MAAMA,aAAa,SAASC,OAAO,CAAC;IACnE;;IAEA;IACA;IACA;IACAI,WAAW,CAACC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAE;MAC/B,KAAK,CAACF,MAAM,CAAC;MACb,IAAIC,IAAI,IAAI,IAAI,EAAE;QAChB,MAAM,IAAIE,KAAK,CAAC,4BAA4B,GAAG,IAAI,CAACC,SAAS,EAAE,CAAC;MAClE;MACA,IAAI,CAACF,KAAK,EAAE;QACVA,KAAK,GAAG,WAAW;MACrB;MACA,IAAIG,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,EAAE;QACxBA,KAAK,GAAG,GAAG,GAAGA,KAAK,CAACK,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG;MACrC;MACA,IAAI,CAACN,IAAI,GAAG,IAAI,CAACO,SAAS,CAACP,IAAI,CAACA,IAAI,CAAC;MACrC,IAAI,CAACQ,IAAI,GAAGhB,QAAQ,CAACiB,kBAAkB;MACvC,IAAI,CAACR,KAAK,GAAG,IAAI,CAACM,SAAS,CAACG,eAAe,CAACT,KAAK,CAAC;IACpD;;IAEA;;IAEA;IACA;IACA;IACA;IACAU,QAAQ,CAACC,OAAO,EAAE;MAChB,OAAO,IAAI,CAACA,OAAO,CAACC,MAAM,CAACC,UAAU,CAAC,IAAI,EAAE,IAAI,CAACF,OAAO,CAACC,MAAM,CAACE,aAAa,CAACH,OAAO,CAAC,CAAC;IACzF;EAEF,CAAC;AAEH,CAAC,EAAEI,IAAI,CAAC,IAAI,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}