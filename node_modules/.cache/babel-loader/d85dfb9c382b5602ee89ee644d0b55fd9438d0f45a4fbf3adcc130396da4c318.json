{"ast":null,"code":"export default {\n  data: () => ({})\n};","map":{"version":3,"mappings":"AA2HE,eAAe;EACbA,IAAI,EAAE,OAAO,CACb,CAAC;AACH","names":["data"],"sourceRoot":"","sources":["/Users/meganluu/Desktop/Capstone/MoHSES-Scenario-User-Interface/src/views/AboutView.vue"],"sourcesContent":["<template>\n  <v-toolbar style=\"color: white\" color=\"#3c2d70\">\n     <v-toolbar-title>About</v-toolbar-title>\n  </v-toolbar>\n  <v-main class=\"bg-grey-lighten-3\">\n     <v-container>\n        <v-card class=\"mt-n12\">\n           <v-card-text>\n              This is the MoHSES Scenario and State File Design Web Interface developed by Jake Flynn, Sanika Joshi, and Megan Luu for their 2023 Bioengineering Capstone project.\n              This project was developed under the mentorship of Dr. David Hananel, Dr. Rainer Leuschke, and Dr. Austin Baird from the UW CREST Lab. The purpose\n              of this tool is to allow for an accessible, easy-to-use interface for users to design customized patient scenario files that are compatible with the CREST\n              Advanced Modular Manikin (AMM). The process to generate these patient scenario files is two-fold. First, users will use the BioGears Scenario Creation Tool tab to configure a patient and\n              generate a BioGears Scenario XML file. After running this BioGears Scenario file on Biogears, users will have a MoHSES-compatible patient state file, which will be used to generate\n              a MoHSES Scenario file using the MoHSES Scenario Creation tool tab. \n           </v-card-text>\n           <br>\n           <v-row justify=\"center\">\n              <v-card flat>\n                 <v-img\n                    src=\"@/assets/jake.jpeg\"\n                    alt=\"Jake Flynn\"\n                    width=\"350\"\n                    height=\"350\"\n                    ></v-img>\n                 <v-card-title class=\"text-center\">\n                    Jake Flynn\n                    <br>\n                    <a\n                       href=\"https://twitter.com/JakeRFlynn\"\n                       target=\"_blank\"\n                       rel=\"noopener noreferrer\"\n                       >\n                       <v-icon\n                          class=\"mdi mdi-twitter\"\n                          ></v-icon>\n                    </a>\n                    <a\n                       href=\"https://github.com/jakeflynn56\"\n                       target=\"_blank\"\n                       rel=\"noopener noreferrer\"\n                       >\n                       <v-icon\n                          class=\"mdi mdi-github\"\n                          ></v-icon>\n                    </a>\n                    <a\n                       href=\"https://www.linkedin.com/in/jake-flynn/\"\n                       target=\"_blank\"\n                       rel=\"noopener noreferrer\"\n                       >\n                       <v-icon\n                          class=\"mdi mdi-linkedin\"\n                          ></v-icon>\n                    </a>\n                 </v-card-title>\n              </v-card>\n              <v-card flat>\n                 <v-img\n                    src=\"@/assets/megan.png\"\n                    alt=\"Megan Luu\"\n                    width=\"350\"\n                    height=\"350\"\n                    ></v-img>\n                 <v-card-title class=\"text-center\">\n                    Megan Luu\n                    <br>\n                    <a\n                       href=\"https://www.linkedin.com/in/megan-luu-profile/\"\n                       target=\"_blank\"\n                       rel=\"noopener noreferrer\"\n                       >\n                       <v-icon\n                          class=\"mdi mdi-linkedin\"\n                          ></v-icon>\n                    </a>\n                 </v-card-title>\n              </v-card>\n              <v-card flat>\n                 <v-img\n                    src=\"@/assets/sanika.png\"\n                    alt=\"Sanika Joshi\"\n                    width=\"350\"\n                    height=\"350\"\n                    ></v-img>\n                 <v-card-title class=\"text-center\">\n                    Sanika Joshi\n                    <br>\n                    <a\n                       href=\"https://www.linkedin.com/in/sanika-joshi-0b940a194/\"\n                       target=\"_blank\"\n                       rel=\"noopener noreferrer\"\n                       >\n                       <v-icon\n                          class=\"mdi mdi-linkedin\"\n                          ></v-icon>\n                    </a>\n                 </v-card-title>\n              </v-card>\n           </v-row>\n           <br>\n           <br>\n           <v-card-text>\n            <div class=\"text-h5\">BioGears Guide</div>\n            <p>After generating the Custom Patient and Scenario files using the BioGears Scenario Creation Tool tab, users must run BioGears with the files in order to generate\n              a MoHSES-compatible state file. The following are instructions on how to run BioGears:\n            </p>\n            <v-list>\n              <v-list-item title=\"1. Build BioGears\">Clone the BioGears <a href=\"https://github.com/BioGearsEngine/core\">codebase</a> to your local computer.\n                Follow the build instructions from the <a href=\"https://github.com/BioGearsEngine/core/wiki/Build-Instructions\">Github Wiki</a> for your operating system.\n                This will likely involve running some 'brew install' and 'cmake' commands in the command line.\n              </v-list-item>\n              <v-list-item title=\"2. Move downloaded files to proper directories\"> After clicking Submit in the BioGears Scenario Creation Tool tab, two files should be downloaded - CustomScenario.xml and CustomPatient.xml.\n                Within the BioGears directory folder, move CustomScenario.xml to the core/build/runtime/Scenario/Patient folder. Also within the BioGears directory folder,\n                move CustomPatient.xml to the core/build/runtime/patients folder.\n\n              </v-list-item>\n            </v-list>\n           </v-card-text>\n        </v-card>\n     </v-container>\n  </v-main>\n</template>\n<script>\n  export default {\n    data: () => ({\n    })\n  }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}