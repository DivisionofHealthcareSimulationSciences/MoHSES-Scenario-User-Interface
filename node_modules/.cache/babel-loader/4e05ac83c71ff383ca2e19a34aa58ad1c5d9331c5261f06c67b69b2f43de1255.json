{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport xmlbuilder from 'xmlbuilder';\nexport default {\n  data: () => ({\n    drawer: false,\n    valid: true,\n    expanded: [0],\n    capability: [{\n      employer: '',\n      jobTitle: '',\n      startYear: '',\n      endYear: ''\n    }],\n    patient_props: {\n      \"type\": [],\n      \"name\": [],\n      \"title\": [],\n      \"age\": [],\n      \"gender\": [],\n      \"height\": [],\n      \"weight\": []\n    },\n    environment_props: {\n      \"surrounding\": [],\n      \"altitude\": [],\n      \"temperature\": [],\n      \"pressure\": [],\n      \"co2\": [],\n      \"sounds\": [],\n      \"smells\": []\n    },\n    ed_props: {\n      'instruction': [],\n      'narrative': [],\n      'learnerCount': [],\n      'role': [],\n      'setup_checklist': [],\n      'equipment': [],\n      'supplies': [],\n      'duration': [],\n      'scenario_type': [],\n      'assessment_type': [],\n      'learner_group': [],\n      'objectives': [],\n      'task': [],\n      'conditions': [],\n      'exit_criteria': []\n    },\n    nameRules: [v => !!v || 'Name is required'],\n    genders: ['Male', 'Female'],\n    types: ['Medical Doctor', 'Paramedic', 'Nurse']\n  }),\n  methods: {\n    addCapability() {\n      this.capability.push({\n        employer: '',\n        jobTitle: '',\n        startYear: '',\n        endYear: ''\n      });\n    },\n    removeCapability(index) {\n      this.capability.splice(index, 1);\n    },\n    validate() {\n      this.$refs.form.validate();\n    },\n    reset() {\n      this.$refs.form.reset();\n    },\n    saveXML() {\n      const xml = xmlbuilder.create('AMMConfiguration', {\n        encoding: 'UTF-8'\n      });\n      xml.att({\n        'xmlns:xsd': 'http://www.w3.org/2001/XMLSchema',\n        'xmlns:xsi': 'http://www.w3.org/2001/XMLSchema-instance'\n      });\n      const metadata = xml.ele('metadata');\n      for (var key1 in this.patient_props) {\n        if (Array.isArray(this.patient_props[key1])) {\n          for (var item1 in this.patient_props[key1]) {\n            metadata.ele(key1, this.patient_props[key1][item1]);\n          }\n        } else {\n          metadata.ele(key1, this.patient_props[key1]);\n        }\n      }\n      for (var key2 in this.environment_props) {\n        if (Array.isArray(this.environment_props[key2])) {\n          for (var item2 in this.environment_props[key2]) {\n            metadata.ele(key2, this.environment_props[key2][item2]);\n          }\n        } else {\n          metadata.ele(key2, this.environment_props[key2]);\n        }\n      }\n      for (var key3 in this.ed_props) {\n        if (Array.isArray(this.ed_props[key3])) {\n          for (var item3 in this.ed_props[key3]) {\n            metadata.ele(key3, this.ed_props[key3][item3]);\n          }\n        } else {\n          metadata.ele(key3, this.ed_props[key3]);\n        }\n      }\n      var xmlString = xml.end({\n        pretty: true\n      });\n      const blob = new Blob([xmlString], {\n        type: 'text/xml'\n      });\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = 'data.xml';\n      link.click();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["xmlbuilder","data","drawer","valid","expanded","capability","employer","jobTitle","startYear","endYear","patient_props","environment_props","ed_props","nameRules","v","genders","types","methods","addCapability","push","removeCapability","index","splice","validate","$refs","form","reset","saveXML","xml","create","encoding","att","metadata","ele","key1","Array","isArray","item1","key2","item2","key3","item3","xmlString","end","pretty","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","click"],"sourceRoot":"","sources":["/Users/stlp/Desktop/BIOEN 404/User Interface/MoHSES-Scenario-User-Interface/src/views/HomeView.vue"],"sourcesContent":["<template>\n<v-main>\n  <v-row class=\"justify-center\">\n      <v-col cols=\"12\" sm=\"8\" md=\"6\">\n      <!-- v-if=\"type === 'Medical Doctor' || type === 'Paramedic'\" -->\n      <v-form\n        ref=\"form\"\n        v-model=\"valid\"\n        lazy-validation\n      >\n        \n        <v-select\n          v-model=\"patient_props['type']\"\n          :items=\"types\"\n          :rules=\"[v => !!v || 'Type is required']\"\n          label=\"Instructor Type\"\n          required\n        ></v-select>\n\n        <v-expansion-panels v-model=\"expanded\">\n          <v-expansion-panel>\n          <v-expansion-panel-title>\n            Patient Properties\n          </v-expansion-panel-title>\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"patient_props['name']\"\n              :rules=\"nameRules\"\n              label=\"Name\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"patient_props['title']\"\n              :rules=\"nameRules\"\n              label=\"Title or Rank\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"patient_props['age']\"\n              :rules=\"nameRules\"\n              label=\"Age\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-select\n              v-model=\"patient_props['gender']\"\n              :items=\"genders\"\n              :rules=\"[v => !!v || 'Gender is required']\"\n              label=\"Gender\"\n              required\n            ></v-select>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"patient_props['height']\"\n              :rules=\"nameRules\"\n              label=\"Height [cm]\"\n              required\n              ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"patient_props['weight']\"\n              :rules=\"nameRules\"\n              label=\"Weight [kg]\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n          </v-expansion-panel>\n\n          <v-expansion-panel>\n          <v-expansion-panel-title>\n            Environment Properties\n          </v-expansion-panel-title>\n\n          <v-expansion-panel-text>\n            <v-textarea\n              v-model=\"environment_props['surrounding']\"\n              label=\"Surrounding\"\n            ></v-textarea>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"environment_props['altitude']\"\n              :rules=\"nameRules\"\n              label=\"Altitude or Elevation\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"environment_props['temperature']\"\n              :rules=\"nameRules\"\n              label=\"Temperature [C]\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"environment_props['pressure']\"\n              :rules=\"nameRules\"\n              label=\"Pressure [mmHg]\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"environment_props['co2']\"\n              :rules=\"nameRules\"\n              label=\"Ambient CO2 [fraction]\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"environment_props['sounds']\"\n              label=\"Ambient Sounds\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"environment_props['smells']\"\n              label=\"Smells\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          </v-expansion-panel>\n\n          <v-expansion-panel>\n          <v-expansion-panel-title>\n            Educational Encounter Properties\n          </v-expansion-panel-title>\n\n          <v-expansion-panel-text>\n            <v-textarea\n              v-model=\"ed_props['instruction']\"\n              label=\"Instructions\"\n            ></v-textarea>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-textarea\n              v-model=\"ed_props['narrative']\"\n              label=\"Narrative\"\n            ></v-textarea>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['learnerCount']\"\n              label=\"Number of Learners\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['role']\"\n              label=\"Roles\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['setup_checklist']\"\n              label=\"Setup Checklist\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['equipment']\"\n              label=\"Equipment\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['supplies']\"\n              label=\"Supplies\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['duration']\"\n              label=\"Estimated Duration\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['scenario_type']\"\n              label=\"Scenario Type\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['assessment_type']\"\n              label=\"Assessment Type\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['learner_group']\"\n              label=\"Learner Group\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['objectives']\"\n              label=\"Learning Objectives\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['task']\"\n              label=\"Task Descriptions\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['conditions']\"\n              label=\"Performance Conditions\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['exit_criteria']\"\n              label=\"Exit Criteria\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n          </v-expansion-panel>\n\n          <v-expansion-panel>\n          <v-expansion-panel-title>\n            Capabilities\n          </v-expansion-panel-title>\n          <v-expansion-panel-text>\n            <div v-for=\"(exp, index) in capability\" :key=\"index\">\n              <v-checkbox-btn v-model=\"required\"></v-checkbox-btn>\n              <v-text-field v-model=\"exp.employer\" label=\"Employer\"></v-text-field>\n              <v-text-field v-model=\"exp.jobTitle\" label=\"Job Title\"></v-text-field>\n              <v-text-field v-model=\"exp.startYear\" label=\"Start Year\"></v-text-field>\n              <v-text-field v-model=\"exp.endYear\" label=\"End Year\"></v-text-field>\n              <v-btn @click=\"removeCapability(index)\">Remove Capability</v-btn>\n              <br>\n              <br>\n            </div>\n            <v-btn @click=\"addCapability\">Add Capability</v-btn>\n          </v-expansion-panel-text>\n          </v-expansion-panel>\n\n\n        </v-expansion-panels>\n        <br>\n        <br>\n\n\n        <v-btn\n          :disabled=\"!valid\"\n          color=\"success\"\n          class=\"mr-4\"\n          @click=\"saveXML\"\n        >\n          Submit\n        </v-btn>\n\n        <v-btn\n          color=\"error\"\n          class=\"mr-4\"\n          @click=\"reset\"\n        >\n          Reset Form\n        </v-btn>\n\n      </v-form>\n      </v-col>\n      </v-row>\n\n    </v-main>\n</template>\n\n<script>\n  import xmlbuilder from 'xmlbuilder'\n\n  export default {\n    data: () => ({\n      drawer: false,\n      valid: true,\n      expanded: [0],\n      capability: [\n        { employer: '', jobTitle: '', startYear: '', endYear: '' },\n      ],\n      patient_props: {\n        \"type\": [],\n        \"name\": [],\n        \"title\": [],\n        \"age\": [],\n        \"gender\": [],\n        \"height\": [],\n        \"weight\": [],\n      },\n      environment_props: {\n        \"surrounding\": [],\n        \"altitude\":[],\n        \"temperature\":[],\n        \"pressure\":[],\n        \"co2\":[],\n        \"sounds\":[],\n        \"smells\":[]\n      },\n      ed_props: {\n        'instruction':[],\n        'narrative':[],\n        'learnerCount':[],\n        'role':[],\n        'setup_checklist':[],\n        'equipment':[],\n        'supplies':[],\n        'duration':[],\n        'scenario_type':[],\n        'assessment_type':[],\n        'learner_group':[],\n        'objectives':[],\n        'task':[],\n        'conditions':[],\n        'exit_criteria':[]\n      },\n      nameRules: [\n        v => !!v || 'Name is required',\n      ],\n      genders: [\n        'Male',\n        'Female'\n      ],\n      types: [\n        'Medical Doctor',\n        'Paramedic',\n        'Nurse'\n      ],\n    }),\n\n    methods: {\n      addCapability() {\n        this.capability.push({\n          employer: '',\n          jobTitle: '',\n          startYear: '',\n          endYear: '',\n          });\n      },\n      removeCapability(index) {\n        this.capability.splice(index, 1);\n      },\n      validate () {\n        this.$refs.form.validate()\n      },\n      reset () {\n        this.$refs.form.reset()\n      },\n      saveXML () {\n        const xml = xmlbuilder.create('AMMConfiguration', {encoding: 'UTF-8'})\n          xml.att({'xmlns:xsd':'http://www.w3.org/2001/XMLSchema',\n                'xmlns:xsi':'http://www.w3.org/2001/XMLSchema-instance'\n          })\n          const metadata = xml.ele('metadata')\n            for (var key1 in this.patient_props) {\n              if (Array.isArray(this.patient_props[key1])) {\n                for (var item1 in this.patient_props[key1]) {\n                  metadata.ele(key1, this.patient_props[key1][item1])\n                }\n              } else {\n                metadata.ele(key1, this.patient_props[key1])\n              }\n            }\n  \n            for (var key2 in this.environment_props) {\n              if (Array.isArray(this.environment_props[key2])) {\n                for (var item2 in this.environment_props[key2]) {\n                  metadata.ele(key2, this.environment_props[key2][item2])\n                }\n              } else {\n                metadata.ele(key2, this.environment_props[key2])\n              }\n            }\n            for (var key3 in this.ed_props) {\n              if (Array.isArray(this.ed_props[key3])) {\n                for (var item3 in this.ed_props[key3]) {\n                  metadata.ele(key3, this.ed_props[key3][item3])\n                }\n              } else {\n                metadata.ele(key3, this.ed_props[key3])\n              }\n            }\n        var xmlString = xml.end({ pretty: true });\n        const blob = new Blob([xmlString], {type:'text/xml'})\n        const link = document.createElement('a')\n        link.href = URL.createObjectURL(blob)\n        link.download = 'data.xml'\n        link.click()\n      }\n    }\n  }\n  </script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}