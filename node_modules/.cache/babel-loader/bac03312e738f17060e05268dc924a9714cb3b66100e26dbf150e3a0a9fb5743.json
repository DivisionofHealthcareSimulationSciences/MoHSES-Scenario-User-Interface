{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  style: {\n    \"font-size\": \"36px\"\n  }\n}, \"Welcome to the BioGears Scenario Creation Tool!\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"14px\"\n  }\n}, \"This tool is designed to simplify the process of generating BioGears Scenario XML files. First, input patient information and healthy vitals to define a BioGears patient. Then configure injuries to define a specific patient scenario and click Submit. This will locally download BioGears-compatible Patient and Scenario XML files, which can then be inputted into BioGears via command line. After running BioGears with this file, user will have a MoHSES-compatible state file with data on the simulated injured patient's vitals.\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"20px\"\n  }\n}, \"Please enter patient information:\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"20px\"\n  }\n}, [/*#__PURE__*/_createTextVNode(\"Please enter \"), /*#__PURE__*/_createElementVNode(\"b\", null, \"healthy\"), /*#__PURE__*/_createTextVNode(\" patient vitals: \")], -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"20px\"\n  }\n}, \"Please enter a title and brief description for this patient scenario: \", -1 /* HOISTED */);\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"20px\"\n  }\n}, \"Please configure patient injuries and timeline:\", -1 /* HOISTED */);\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  width: \"550px\",\n  height: \"600px\",\n  viewBox: \"15 0 20 100\",\n  version: \"1.1\",\n  id: \"svg46\",\n  \"sodipodi:docname\": \"human_sanika.svg\",\n  \"inkscape:version\": \"1.2.2 (732a01da63, 2022-12-09)\",\n  \"xmlns:inkscape\": \"http://www.inkscape.org/namespaces/inkscape\",\n  \"xmlns:sodipodi\": \"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  \"xmlns:svg\": \"http://www.w3.org/2000/svg\"\n}, [/*#__PURE__*/_createElementVNode(\"defs\", {\n  id: \"defs50\"\n}), /*#__PURE__*/_createElementVNode(\"path\", {\n  id: \"Chest\",\n  d: \"m 2.4651865,21.528509 -1.72941989,3.09103 -1.89346001,0.94785 1.15295001,0.90662 0.90586,2.63773 2.09966989,0.86537 3.34636,-1.655 -0.83462,-6.50527 z m 8.9862405,0 1.72942,3.09103 1.89346,0.94785 -1.15295,0.90662 -0.90604,2.63773 -2.09968,0.86537 -3.3452405,-1.655 0.83425,-6.50527 z\"\n}), /*#__PURE__*/_createElementVNode(\"path\", {\n  id: \"Abdomen\",\n  d: \"m 3.5133365,30.595379 3.11202,-1.40603 -0.0937,2.27965 -2.80138,1.4364 z m -1.93508,1.6685 1.29355,0.72139 -0.14997,-1.70899 z m 1.05303,-1.637 -2.47930989,-1.03259 0.93360999,2.52148 z m -1.5316399,1.73729 1.6900499,1.03372 0.28871,2.06743 -1.64881,-1.07515 z m 2.9114199,1.10421 0.0623,1.62387 2.30327,-0.49961 0.12448,-2.21703 z m 0.15561,2.40432 -0.0309,1.99844 2.20973,0.59353 0.0311,-3.1227 z m -2.6546,-0.98516 1.48384,1.0339 0.20622,2.10905 -1.64975,-1.32355 z m 5.23795,14.47521 -0.60647,-5.91209 -0.015,-3.84879 -2.18479,-1.07533 -0.24746,7.03017 z m 0.41581,-5.7e-4 0.60628,-5.91209 0.0154,-3.84915 2.18404,-1.07515 0.2474605,7.03017 z m -4.00588,-10.21155 -1.81341,-1.36479 -0.15748,1.83347 -1.28567989,2.37432 1.98044989,2.73595 1.03109,0.16554 0.37119,-3.88721 z m 7.2429405,-8.55562 -3.1120205,-1.40604 0.0937,2.27965 2.8011905,1.43603 z m 1.93471,1.66849 -1.29355,0.7212 0.14997,-1.70898 z m -1.05303,-1.63718 2.47968,-1.03241 -0.9336,2.52093 z m 1.53164,1.73729 -1.69005,1.03372 -0.28871,2.0678 1.64975,-1.07533 z m -2.9114305,1.10421 -0.0622,1.62387 -2.30308,-0.49961 -0.12448,-2.21722 z m -0.1556,2.4045 0.0311,1.99844 -2.20953,0.59391 -0.0311,-3.1227 z m 2.6545905,-0.98535 -1.48383,1.03372 -0.20622,2.10905 1.64862,-1.32355 z m -1.64787,4.26366 1.81341,-1.36479 0.15748,1.83347 1.28642,2.37338 -1.98044,2.73652 -1.03109,0.16554 -0.37026,-3.88816 z\"\n}), /*#__PURE__*/_createElementVNode(\"path\", {\n  id: \"Pelvis\",\n  d: \"m 0.73979661,43.812429 v 4.21363 l 2.94516989,5.8253 1.86028,5.78349 -0.19366,-4.0072 z m 3.24886989,13.42559 0.0647,0.15485 1.21294,2.90207 -0.78307,7.18803 -1.23618,-0.66102 1.0714,-6.69273 z m 1.52977,-7.75493 0.0221,-0.0277 -0.14866,-0.37945 -3.10172,-3.40449 -0.23283,-0.0825 2.05918,5.32009 z m -1.17263,2.01833 1.27705,3.29948 0.42631,-4.04862 -0.25196,-0.64303 z m 4.05219,-2.01795 -0.0221,-0.0281 0.14867,-0.37926 3.1017105,-3.40449 0.23246,-0.0825 -2.0584305,5.3199 z m 1.17263,2.01795 -1.27706,3.29948 -0.42631,-4.04843 0.25197,-0.64303 z m 3.6065705,-7.6888 v 4.21363 l -2.94574,5.82511 -1.8602705,5.78349 0.19365,-4.0072 z m -3.2494405,13.42596 -0.0649,0.15467 -1.21294,2.90207 0.78325,7.18803 1.2361905,-0.66122 -1.0714005,-6.69272 z\"\n}), /*#__PURE__*/_createElementVNode(\"path\", {\n  id: \"Head\",\n  d: \"m 39.271427,10.801559 0.44208,-0.14964 0.16111,0.16427 1.48163,4.04751 2.32401,1.45118 2.39971,-1.52387 0.97577,-3.68969 0.52752,-0.55908 0.23367,0.0981 0.24198,-3.3446699 -2.03129,-2.31103 -2.84509,-0.51629 -2.20422,0.52915 -1.93631,2.63077 z m -28.40863,0.34495 0.0203,-2.2074699 -3.9668905,-2.7637 -3.74099,2.23559 -0.006,2.6352799 -0.60741,0.0403 0.27408,1.82447 0.97635,0.33932 0.44244,2.18029 1.82222,2.06556 2.03518,-0.0607 1.79223,-1.94408 0.3595705,-2.24066 0.97616,-0.33932 0.25159,-1.78416 z m -8.0771905,-0.34495 -0.0482,-2.5908499 4.20648,-2.46806 4.4276905,2.95361 -0.0405,1.9440799 0.24197,-3.3446699 -2.0312905,-2.31103 -2.84508,-0.51629 -2.20423,0.52915 -1.9363,2.63077 z\"\n}), /*#__PURE__*/_createElementVNode(\"path\", {\n  id: \"Neck\",\n  d: \"m 43.483667,16.548089 -2.35767,-1.55045 -1.47119,-3.95143 -0.60741,0.0403 0.27409,1.82447 0.97635,0.33932 0.7613,2.21572 0.33017,1.06849 0.0895,2.14894 1.16448,0.008 0.10563,-0.70833 0.54716,-0.0606 z m 1.01793,1.47595 0.23768,0.64982 1.38107,-0.004 0.01,-2.38784 0.25971,-0.79061 0.57215,-2.1698 0.76359,-0.41018 0.25158,-1.78416 -0.62859,0.0193 -1.08488,3.89981 -2.39725,1.46684 0.2768,1.48507 z m -40.0829605,-1.67052 1.64975,2.35202 0.74426,2.62159 -1.73486,-1.38354 -0.86649,-2.97104 z m 5.08047,0 -1.64975,2.35202 -0.74538,2.62234 1.73486,-1.38354 0.86649,-2.97104 z\"\n}), /*#__PURE__*/_createElementVNode(\"path\", {\n  id: \"Extremities\",\n  d: \"m 45.133277,68.516999 1.20605,3.01461 -0.70737,0.26558 -0.89755,3.51771 0.55802,-4.01191 z m 5.08496,-3.15003 -0.63355,1.8609 -0.16813,2.03261 -0.61313,1.93117 0.90584,-0.0851 0.28534,2.15982 z m -4.3014,6.58834 -1.27664,4.99697 0.28984,3.02284 0.67869,10.06546 1.66325,0.63506 3.504,-11.96959 -1.24986,-7.17525 z m -0.54053,20.8287 -0.85194,1.3581 -0.37189,0.79238 0.15589,1.21774 0.76983,0.74446 1.51186,0.12543 1.12989,-0.29192 0.24225,-0.95894 -0.80765,-1.30405 0.22563,-0.85987 -0.29679,-0.84153 0.0194,-1.81524 -1.53568,-0.54817 z m 1.19598,0.4675 -0.15943,1.25776 0.6023,0.97431 m 0.54436,0.29544 -1.06474,0.40084 -1.55326,-0.65137 m 3.56525,-39.90247 -3.97962,-1.70224 -0.56389,0.27131 -0.0528,1.79746 -0.075,4.64669 1.97837,6.04282 -0.47612,1.41403 1.42813,3.29446 1.7661,-0.30111 0.50079,-2.11605 0.1695,-1.75674 2.42102,-8.15763 0.009,-3.68308 z m 4.26465,-23.93238 -0.32785,-1.05121 -1.27383,-2.05489 1.38708,-2.96476 2.28579,0.91634 1.83971,1.74245 0.53937,1.78549 -0.26073,4.30868 z m 2.64394,15.3417 1.51839,0.0828 0.78033,-0.65476 1.16673,2.18281 0.79187,3.34623 -0.49843,0.21064 -0.55144,-2.21453 -0.50541,0.24292 0.30356,2.5012 -0.62882,0.23021 -0.36124,-2.50014 -0.56203,0.16666 0.16765,2.77019 -0.77603,0.30634 -0.19719,-2.87245 -0.45732,-0.0278 -0.22215,2.64829 -0.66539,0.24928 0.0254,-4.56692 -0.3374,-0.20146 -1.38845,1.65469 -0.32098,-0.35041 0.76973,-2.03928 z m 0.97685,-0.1799 1.43335,-0.74932 0.29002,-7.01054 c 0,0 -0.65,-2.77789 -0.64401,-3.06126 l -0.61212,-1.21783 -3.98124,-2.57566 1.0222,1.93525 -0.38967,4.82212 1.8218,7.69308 z m -13.45979,-5.10285 0.14418,2.97292 1.15984,-0.0241 0.048,-2.96488 2.80867,-0.81981 2.34029,-0.7541 1.34121,3.73319 -4.77886,1.36455 -2.33301,1.2158 -2.37536,-1.2333 -5.45663,-1.37716 1.51961,-3.95743 z m -7.0756,2.37946 5.48374,1.86457 2.27386,1.3378 2.74195,-1.74412 4.51804,-1.28077 0.90009,2.29721 0.675,3.4346 -0.81272,5.02838 -2.82636,0.16819 -4.11256,-1.67581 -1.00814,0.39118 -0.95849,-0.39888 -4.44053,1.94411 -2.77023,-0.51478 -0.95181,-6.15325 0.36754,-2.7864 z m 6.4333,24.38495 -1.20605,3.01461 0.70738,0.26558 0.89754,3.51771 -0.55801,-4.01191 z m -5.08496,-3.15003 0.63355,1.8609 0.16813,2.03261 0.61314,1.93117 -0.90585,-0.0851 -0.28534,2.15982 z m 4.3014,6.58834 1.27664,4.99697 -0.28984,3.02284 -0.67869,10.06546 -1.66325,0.63506 -3.50399,-11.96959 1.24985,-7.17525 z m 0.54053,20.8287 0.85194,1.3581 0.37189,0.79238 -0.15588,1.21774 -0.76984,0.74446 -1.51185,0.12543 -1.1299,-0.29192 -0.24225,-0.95894 0.80765,-1.30405 -0.22562,-0.85987 0.29679,-0.84153 -0.0194,-1.81524 1.53568,-0.54817 z m -1.19598,0.4675 0.15943,1.25776 -0.6023,0.97431 m -0.54436,0.29544 1.06474,0.40084 1.55326,-0.65137 m -4.19331,-39.53466 4.55099,-2.03879 0.63802,0.23079 0.0353,1.80672 0.075,4.64669 -1.97837,6.04282 0.47612,1.41403 -1.42812,3.29446 -1.76611,-0.30111 -0.50079,-2.11605 -0.1695,-1.75674 -2.42102,-8.15763 -0.34279,-3.64687 z m -3.98895,-24.48137 0.4297,-1.4164 1.30458,-1.68577 -1.39393,-2.96155 -2.28367,0.92162 -1.83567,1.7467 -0.53524,1.78673 0.27068,4.30806 z m -2.46869,15.35539 -1.5182,0.0863 -0.78184,-0.65295 -1.16168,2.1855 -0.78414,3.34805 0.49892,0.20949 0.54632,-2.2158 0.50597,0.24175 -0.29779,2.5019 0.62936,0.22875 0.35546,-2.50096 0.56242,0.16536 -0.16126,2.77057 0.77674,0.30455 0.19056,-2.87291 0.45724,-0.0289 0.22827,2.64778 0.66597,0.24774 -0.0359,-4.56685 0.33693,-0.20224 1.39227,1.65147 0.32017,-0.35115 -0.77444,-2.03749 z m -0.97726,-0.17765 -1.43509,-0.746 -0.30622,-7.00985 c 0,0 0.64359,-2.77938 0.63694,-3.06274 l 0.6093,-1.21924 3.62552,-2.56583 -0.68276,1.9919 0.41561,4.74788 -1.80402,7.69727 z m -12.59945,1.31596 1.5198,0.0506 0.76631,-0.67111 1.21262,2.15766 0.86245,3.32873 -0.49386,0.22113 -0.59815,-2.20238 -0.50016,0.25356 0.35639,2.49422 -0.62382,0.24345 -0.41402,-2.49194 -0.55839,0.17851 0.2262,2.76603 -0.76938,0.32268 -0.25788,-2.86764 -0.4578,-0.0181 -0.16611,2.6524 -0.65997,0.26329 -0.0712,-4.56643 -0.34158,-0.19428 -1.35316,1.68368 -0.32832,-0.34355 0.72644,-2.0551 z m 1.18497,-16.19302 -0.005,3.09419 0.57959,1.91184 0.54538,-2.41185 z m -23.9347704,16.19302 -1.5198,0.0506 -0.76631,-0.67112 -1.21262,2.15767 -0.86245,3.32873 0.49386,0.22113 0.59815,-2.20238 0.50016,0.25356 -0.35639,2.49422 0.62382,0.24345 0.41402,-2.49194 0.55839,0.17851 -0.2262,2.76603 0.76938,0.32268 0.25788,-2.86764 0.4578,-0.0181 0.16611,2.65239 0.65997,0.2633 0.0712,-4.56643 0.34158,-0.19428 1.35316,1.68367 0.32832,-0.34354 -0.72644,-2.0551 z m -1.18497,-16.19302 0.005,3.09419 -0.57959,1.91184 -0.54539,-2.41185 z m 7.0789299,37.41425 -0.12448,1.12295 0.87118,1.08171 0.29058,1.70599 0.58116,0.24933 0.49774,-2.57866 0.33182,-0.91486 -0.29058,-0.58247 z m 3.85854,0.0832 -0.62241,1.74685 -1.32767,2.57867 0.33182,2.37095 0.95423,-2.66209 0.78832,-1.4964 z m -4.97867989,-2.37058 0.95422989,5.11609 -0.62239989,-0.33313 -0.49793,1.6638 z m 4.27340989,7.94395 -0.29058,0.91486 -0.62241,3.86828 -0.0829,5.15733 0.87174,5.03304 -0.0418,-6.44714 0.91298,-2.57848 0.1243,-2.82837 z m -1.99151,2.32914 0.20735,7.73637 1.65968,6.23904 -1.80497,-0.85299 -3.00797989,-10.83584 1.03728,-6.82095 z m 2.98717,15.09818 -0.12448,3.45228 -0.29058,1.20637 h -0.87118 l -0.24877,-0.83181 -0.29059,-0.0416 0.0623,0.83181 -1.09934,-0.33333 -0.29058,-0.16629 -1.2448,-0.27033 -0.0412,-0.97747 1.2031899,-2.03781 0.82975,-1.04009 2.03294,-0.83181 z m -6.16386989,-37.46914 0.15504,4.75053 2.40262989,6.60968 -0.73638,1.90021 -2.3640099,-8.34435 z m 0.58117,-11.60768 0.15503,4.00684 -1.31754001,7.93154 -0.61978,-6.40308 z m 0.38769,5.1223 2.75150989,6.07239 0.61997,4.87425 -1.16232,6.85771 -2.51904989,-6.98163 -0.15504,-7.18801 z m 12.16631039,20.87063 0.1243,1.12295 -0.87118,1.08171 -0.29058,1.70599 -0.58116,0.24933 -0.49774,-2.57866 -0.33182,-0.91486 0.29058,-0.58247 z m -3.8585305,0.0832 0.6224,1.74685 1.3273005,2.57867 -0.33182,2.37095 -0.9542305,-2.66209 -0.78738,-1.49734 z m 4.9781105,-2.37039 -0.95423,5.11609 0.62241,-0.33295 0.49773,1.66381 z m -4.2728405,7.94394 0.29058,0.91486 0.6224005,3.8681 0.0829,5.15733 -0.8713605,5.03304 0.0412,-6.44714 -0.91242,-2.57848 -0.12561,-2.82837 z m 1.9915005,2.32915 -0.20753,7.73637 -1.6594905,6.23904 1.8047805,-0.853 3.00816,-10.83583 -1.03727,-6.82095 z m -2.9869805,15.09817 0.1243,3.45228 0.28983,1.20638 h 0.87136 l 0.24897,-0.83181 0.2905805,-0.0416 -0.0624,0.83181 1.09914,-0.33332 0.29058,-0.16629 1.24444,-0.27033 0.0416,-0.97748 -1.20319,-2.03743 -0.82974,-1.0399 -2.0329405,-0.83181 z m 6.1631205,-37.46932 -0.15504,4.75091 -2.40263,6.60949 0.7362,1.90021 2.36401,-8.34435 z m -0.58154,-11.60825 -0.15485,4.00722 1.31793,7.93154 0.61977,-6.40308 z m -0.38731,5.12268 -2.75152,6.07258 -0.62015,4.87425 1.16232,6.85771 2.51886,-6.98144 0.15504,-7.18764 z m -17.8749004,-10.94443 -1.30083,10.28927 1.10778,0.01 1.89387,-7.99609 -0.19174,-4.53719 z m -1.21978,-1.94971 0.58728,2.58635 -1.11875,9.15614 -0.55849,-0.21663 -0.2304,-6.77018 z m 0.71916,-0.2047 0.33838,1.70499 1.81931,-2.54418 0.66289,-1.26895 z m 2.8527,-2.6096 c 0.0259,-0.0144 0.0536,-0.0254 0.0824,-0.0324 l 1.48332001,-4.95503 -1.00455001,-2.08428 -1.65509,1.74532 -2.23034,6.67667 -0.0415,0.93739 c 1.06528,-0.84215 2.18961,-1.60679 3.36433,-2.28803 z m -1.6945,-5.75654 -1.64891,6.43421 0.36468,-4.92266 z m 21.7225804,10.52055 1.30083,10.28927 -1.10778,0.01 -1.89387,-7.99609 0.19174,-4.53719 z m 1.21978,-1.94971 -0.58729,2.58635 1.11876,9.15614 0.55849,-0.21663 0.2304,-6.77018 z m -0.55354,-0.2047 -0.33838,1.70499 -1.81932,-2.54418 -0.6629,-1.26895 z m -2.85271,-2.6096 c -0.0259,-0.0144 -0.0536,-0.0254 -0.0824,-0.0324 l -1.48333,-4.95503 1.00456,-2.08428 1.65511,1.74532 2.23034,6.67667 0.0415,0.93739 c -1.06528,-0.84215 -2.18962,-1.60679 -3.36434,-2.28803 z m 1.6945,-5.75654 1.64893,6.43421 -0.36469,-4.92266 z m -13.8386705,-9.20021 -3.55745989,1.97916 -0.72653,-0.35074 z m 0.107,0.43288 0.37119,1.73073 -2.18459,0.53561 -1.40114989,-0.49436 z m -3.98148989,1.97595 -0.75814,-0.41 -2.40806001,1.66799 -1.17364,1.50707 -0.62662,1.56259 0.0464,3.70195 1.3284,-1.72153 -0.0407,-2.59376 0.48843,-0.5005 c 0,0 3.09777001,-3.19057 3.14370001,-3.214 z m 0.2409,0.10873 c 0.002,0.0525 -3.32987001,3.54733 -3.32987001,3.54733 l -0.10067,3.10396 1.15426,-1.97782 2.22547001,-0.94804 1.56574989,-2.88481 z m 10.05660039,-2.51756 3.55748,1.97916 0.72653,-0.35074 z m -0.107,0.43288 -0.3711905,1.73073 2.1846005,0.53561 1.40116,-0.49436 z m 3.98151,1.97595 0.75814,-0.41 2.40806,1.66799 1.17364,1.50707 0.62662,1.5626 -0.0464,3.70194 -1.3284,-1.72153 0.0407,-2.59376 -0.48842,-0.50049 c 0,0 -3.09778,-3.19058 -3.14371,-3.21401 z m -0.2409,0.10873 c -10e-4,0.0525 3.32987,3.54733 3.32987,3.54733 l 0.10067,3.10396 -1.15426,-1.97782 -2.22547,-0.94804 -1.56576,-2.88481 z\"\n}), /*#__PURE__*/_createElementVNode(\"path\", {\n  id: \"Back\",\n  d: \"m 40.739147,19.072339 0.063,-2.62462 -0.71441,1.15181 -4.37994,1.49796 4.97857,8.36746 1.83043,5.08188 -0.21949,-13.55362 z m -7.42423,1.95717 -1.57473,1.56517 -0.81404,2.06905 -0.38603,2.52859 1.83679,-1.23927 2.76223,-1.15538 1.84691,3.4342 1.13679,5.49715 0.0767,5.8593 4.07066,1.10938 -0.10355,-7.94098 -1.94107,-4.90022 -5.04395,-8.19334 z m 13.23814,-1.85796 -0.063,-2.62463 0.71441,1.15181 4.37994,1.49796 -4.97857,8.36746 -1.83043,5.08189 0.21949,-13.55362 z m 7.42423,1.95716 1.57473,1.56518 0.81404,2.06904 0.0384,2.52859 -1.48921,-1.23926 -2.76223,-1.15539 -1.84691,3.4342 -1.13679,5.49715 -0.0767,5.8593 -4.07066,1.10938 0.10355,-7.94098 1.94107,-4.90021 5.04395,-8.19335 z m -11.12961,-1.764514 0.53876,25.33066 0.48967,-0.0297 0.65658,-25.3387 -0.28147,-0.84188 -1.25059,-4.9e-4 z\"\n})], -1 /* HOISTED */);\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_toolbar_title = _resolveComponent(\"v-toolbar-title\");\n  const _component_v_toolbar = _resolveComponent(\"v-toolbar\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_tab = _resolveComponent(\"v-tab\");\n  const _component_v_tabs = _resolveComponent(\"v-tabs\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_window_item = _resolveComponent(\"v-window-item\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_select = _resolveComponent(\"v-select\");\n  const _component_v_slider = _resolveComponent(\"v-slider\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_autocomplete = _resolveComponent(\"v-autocomplete\");\n  const _component_v_combobox = _resolveComponent(\"v-combobox\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_window = _resolveComponent(\"v-window\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_main = _resolveComponent(\"v-main\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_v_toolbar, {\n    color: \"#4b0082\",\n    style: {\n      \"color\": \"white\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_toolbar_title, null, {\n      default: _withCtx(() => [_createTextVNode(\"BioGears Scenario Creation Tool\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" <v-row> \"), _createCommentVNode(\" <v-col cols=\\\"3\\\"> \"), _createVNode(_component_v_tabs, {\n    large: \"\",\n    modelValue: _ctx.tab,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.tab = $event),\n    color: \"#4b0082\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_tab, {\n      value: \"home\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_icon, {\n        start: \"\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" mdi-home \")]),\n        _: 1 /* STABLE */\n      }), _createTextVNode(\" About this page \")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_tab, {\n      value: \"option-1\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_icon, {\n        start: \"\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" mdi-account \")]),\n        _: 1 /* STABLE */\n      }), _createTextVNode(\" Patient Information \")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_tab, {\n      value: \"option-2\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_icon, {\n        start: \"\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" mdi-access-point \")]),\n        _: 1 /* STABLE */\n      }), _createTextVNode(\" Patient Vitals \")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_tab, {\n      value: \"option-3\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_icon, {\n        start: \"\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" mdi-list-status \")]),\n        _: 1 /* STABLE */\n      }), _createTextVNode(\" Configure Patient Scenario \")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" </v-col> \"), _createCommentVNode(\" <v-col cols=\\\"8\\\" class=\\\"my-content\\\">\\n      <v-window v-model=\\\"tab\\\">\\n        <v-main> \"), _createCommentVNode(\" <v-window-item value=\\\"home\\\" :transition=\\\"false\\\" :reverse-transition=\\\"false\\\"> \"), _createVNode(_component_v_main, {\n    class: \"bg-grey-lighten-3\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_container, null, {\n      default: _withCtx(() => [_createVNode(_component_v_window, {\n        modelValue: _ctx.tab,\n        \"onUpdate:modelValue\": _cache[32] || (_cache[32] = $event => _ctx.tab = $event),\n        class: \"mt-n12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_form, {\n          ref: \"form\",\n          modelValue: _ctx.valid,\n          \"onUpdate:modelValue\": _cache[31] || (_cache[31] = $event => _ctx.valid = $event),\n          \"lazy-validation\": \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_window_item, {\n            value: \"home\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              class: \"bg-grey-lighten-3\",\n              flat: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n                default: _withCtx(() => [_hoisted_1, _hoisted_2, _hoisted_3]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _createVNode(_component_v_col, {\n              cols: \"auto\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_btn, {\n                onClick: _cache[1] || (_cache[1] = $event => $options.nextTab('option-1')),\n                density: \"compact\",\n                icon: \"mdi-arrow-right\"\n              })]),\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_window_item, {\n            value: \"option-1\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              flat: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n                default: _withCtx(() => [_hoisted_4, _hoisted_5, _createVNode(_component_v_text_field, {\n                  modelValue: _ctx.patient_props['Name'],\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.patient_props['Name'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Name\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_select, {\n                  modelValue: _ctx.patient_props['Sex'],\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.patient_props['Sex'] = $event),\n                  items: _ctx.genders,\n                  rules: [v => !!v || 'Sex is required'],\n                  label: \"Sex\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"rules\"]), _createVNode(_component_v_slider, {\n                  modelValue: _ctx.patient_props['age'],\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.patient_props['age'] = $event),\n                  label: \"Age\",\n                  class: \"align-center\",\n                  max: _ctx.age_max,\n                  min: _ctx.age_min,\n                  step: 1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_props['age'],\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.patient_props['age'] = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    suffix: \"years\",\n                    style: {\n                      \"width\": \"180px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\"]), _createVNode(_component_v_slider, {\n                  modelValue: _ctx.patient_props['height'],\n                  \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.patient_props['height'] = $event),\n                  label: \"Height\",\n                  class: \"align-center\",\n                  max: _ctx.height_max,\n                  min: _ctx.height_min,\n                  step: 0.1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_props['height'],\n                    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.patient_props['height'] = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    suffix: \"cm\",\n                    style: {\n                      \"width\": \"180px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\", \"step\"]), _createVNode(_component_v_slider, {\n                  modelValue: _ctx.patient_props['weight'],\n                  \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => _ctx.patient_props['weight'] = $event),\n                  label: \"Weight\",\n                  class: \"align-center\",\n                  max: _ctx.weight_max,\n                  min: _ctx.weight_min,\n                  step: 0.1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_props['weight'],\n                    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => _ctx.patient_props['weight'] = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    suffix: \"kg\",\n                    style: {\n                      \"width\": \"180px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\", \"step\"])]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_6, _createVNode(_component_v_row, {\n              justify: \"center\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[10] || (_cache[10] = $event => $options.nextTab('home')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-left\"\n                })]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[11] || (_cache[11] = $event => $options.nextTab('option-2')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-right\"\n                })]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_7]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_window_item, {\n            value: \"option-2\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              flat: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n                default: _withCtx(() => [_hoisted_8, _hoisted_9, _createVNode(_component_v_select, {\n                  modelValue: _ctx.patient_vitals['BloodTypeABO'],\n                  \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => _ctx.patient_vitals['BloodTypeABO'] = $event),\n                  items: _ctx.blood_types,\n                  label: \"Blood Type\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"items\"]), _createVNode(_component_v_select, {\n                  modelValue: _ctx.patient_vitals['BloodTypeRh'],\n                  \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => _ctx.patient_vitals['BloodTypeRh'] = $event),\n                  items: _ctx.rh,\n                  label: \"Rh\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"items\"]), _createCommentVNode(\" <v-text-field\\n                v-model=\\\"patient_vitals['mean_arterial_pressure']\\\"\\n                label=\\\"Mean Arterial Pressure (mmHg)\\\"\\n              ></v-text-field> \"), _createVNode(_component_v_text_field, {\n                  modelValue: _ctx.patient_vitals['SystolicArterialPressureBaseline'],\n                  \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => _ctx.patient_vitals['SystolicArterialPressureBaseline'] = $event),\n                  label: \"Systolic Arterial Pressure (mmHg)\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n                  modelValue: _ctx.patient_vitals['DiastolicArterialPressureBaseline'],\n                  \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => _ctx.patient_vitals['DiastolicArterialPressureBaseline'] = $event),\n                  label: \"Diastolic Arterial Pressure (mmHg)\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_slider, {\n                  modelValue: _ctx.patient_vitals['HeartRateBaseline'],\n                  \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => _ctx.patient_vitals['HeartRateBaseline'] = $event),\n                  label: \"Heart Rate\",\n                  class: \"align-center\",\n                  max: _ctx.heart_rate_max,\n                  min: _ctx.heart_rate_min,\n                  step: 1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_vitals['HeartRateBaseline'],\n                    \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => _ctx.patient_vitals['HeartRateBaseline'] = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    suffix: \"bpm\",\n                    style: {\n                      \"width\": \"180px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\"]), _createVNode(_component_v_slider, {\n                  modelValue: _ctx.patient_vitals['RespirationRateBaseline'],\n                  \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => _ctx.patient_vitals['RespirationRateBaseline'] = $event),\n                  label: \"Respiratory Rate\",\n                  class: \"align-center\",\n                  max: _ctx.resp_rate_max,\n                  min: _ctx.resp_rate_min,\n                  step: 1\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_vitals['RespirationRateBaseline'],\n                    \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => _ctx.patient_vitals['RespirationRateBaseline'] = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    type: \"number\",\n                    suffix: \"/min\",\n                    style: {\n                      \"width\": \"180px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\"])]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_10, _createVNode(_component_v_row, {\n              justify: \"center\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[20] || (_cache[20] = $event => $options.nextTab('option-1')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-left\"\n                })]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[21] || (_cache[21] = $event => $options.nextTab('option-3')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-right\"\n                })]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_11]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_window_item, {\n            value: \"option-3\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              flat: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n                default: _withCtx(() => [_hoisted_12, _hoisted_13, _createVNode(_component_v_text_field, {\n                  modelValue: _ctx.scenario_props['Name'],\n                  \"onUpdate:modelValue\": _cache[22] || (_cache[22] = $event => _ctx.scenario_props['Name'] = $event),\n                  label: \"Scenario Name\"\n                }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n                  modelValue: _ctx.scenario_props['Description'],\n                  \"onUpdate:modelValue\": _cache[23] || (_cache[23] = $event => _ctx.scenario_props['Description'] = $event),\n                  label: \"Scenario Brief Description\"\n                }, null, 8 /* PROPS */, [\"modelValue\"]), _hoisted_14, _hoisted_15, _hoisted_16, _createVNode(_component_v_row, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_col, {\n                    cols: \"12\",\n                    sm: \"8\",\n                    md: \"6\",\n                    class: \"my-content\"\n                  }, {\n                    default: _withCtx(() => [_hoisted_17]),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_v_col, null, {\n                    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.action, (exp, index) => {\n                      return _openBlock(), _createElementBlock(\"div\", {\n                        key: index\n                      }, [_createVNode(_component_v_select, {\n                        modelValue: exp.region,\n                        \"onUpdate:modelValue\": $event => exp.region = $event,\n                        label: \"Select Body Region\",\n                        items: _ctx.body_regions\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"items\"]), _createVNode(_component_v_autocomplete, {\n                        modelValue: exp.type,\n                        \"onUpdate:modelValue\": $event => exp.type = $event,\n                        label: \"Select Injury Type\",\n                        items: _ctx.patient_body[exp.region]\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"items\"]), _createVNode(_component_v_row, null, {\n                        default: _withCtx(() => [_createVNode(_component_v_col, null, {\n                          default: _withCtx(() => [exp.type === 'Tension Pneumothorax' ? (_openBlock(), _createBlock(_component_v_select, {\n                            key: 0,\n                            modelValue: exp.side,\n                            \"onUpdate:modelValue\": $event => exp.side = $event,\n                            label: \"Select side\",\n                            items: _ctx.sides,\n                            style: {\n                              \"width\": \"200px\"\n                            },\n                            class: \"align-left\"\n                          }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"items\"])) : _createCommentVNode(\"v-if\", true)]),\n                          _: 2 /* DYNAMIC */\n                        }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_col, null, {\n                          default: _withCtx(() => [exp.type === 'Tension Pneumothorax' ? (_openBlock(), _createBlock(_component_v_select, {\n                            key: 0,\n                            modelValue: exp.openclose,\n                            \"onUpdate:modelValue\": $event => exp.openclose = $event,\n                            label: \"Open or Closed\",\n                            items: _ctx.open_closed,\n                            class: \"align-right\",\n                            style: {\n                              \"width\": \"200px\"\n                            }\n                          }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"items\"])) : _createCommentVNode(\"v-if\", true)]),\n                          _: 2 /* DYNAMIC */\n                        }, 1024 /* DYNAMIC_SLOTS */)]),\n\n                        _: 2 /* DYNAMIC */\n                      }, 1024 /* DYNAMIC_SLOTS */), exp.type === 'Hemorrhage' ? (_openBlock(), _createBlock(_component_v_select, {\n                        key: 0,\n                        modelValue: exp.compartment,\n                        \"onUpdate:modelValue\": $event => exp.compartment = $event,\n                        label: \"Select compartment\",\n                        items: _ctx.hemorrhage_regions[exp.region]\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"items\"])) : _createCommentVNode(\"v-if\", true), exp.type === 'Hemorrhage' ? (_openBlock(), _createBlock(_component_v_text_field, {\n                        key: 1,\n                        modelValue: exp.hemrate,\n                        \"onUpdate:modelValue\": $event => exp.hemrate = $event,\n                        label: \"Initial Rate\",\n                        suffix: \"mL/min\"\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])) : _createCommentVNode(\"v-if\", true), exp.type != 'Hemorrhage' ? (_openBlock(), _createBlock(_component_v_slider, {\n                        key: 2,\n                        modelValue: exp.severity,\n                        \"onUpdate:modelValue\": $event => exp.severity = $event,\n                        label: \"Severity\",\n                        class: \"align-center\",\n                        max: _ctx.sev_max,\n                        min: _ctx.sev_min,\n                        step: 0.1\n                      }, {\n                        append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                          modelValue: exp.severity,\n                          \"onUpdate:modelValue\": $event => exp.severity = $event,\n                          \"hide-details\": \"\",\n                          \"single-line\": \"\",\n                          density: \"compact\",\n                          style: {\n                            \"width\": \"90px\"\n                          }\n                        }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])]),\n                        _: 2 /* DYNAMIC */\n                      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\", \"max\", \"min\", \"step\"])) : _createCommentVNode(\"v-if\", true)]);\n                    }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_v_btn, {\n                      onClick: _cache[24] || (_cache[24] = $event => $options.removeAction(-1))\n                    }, {\n                      default: _withCtx(() => [_createTextVNode(\"Remove Injury\")]),\n                      _: 1 /* STABLE */\n                    }), _createVNode(_component_v_btn, {\n                      onClick: $options.addAction\n                    }, {\n                      default: _withCtx(() => [_createTextVNode(\"Add Another Injury\")]),\n                      _: 1 /* STABLE */\n                    }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_form, {\n                      ref: \"form\",\n                      modelValue: _ctx.valid,\n                      \"onUpdate:modelValue\": _cache[25] || (_cache[25] = $event => _ctx.valid = $event),\n                      \"lazy-validation\": \"\"\n                    }, {\n                      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.name, (item, index) => {\n                        return _openBlock(), _createBlock(_component_v_combobox, {\n                          key: index,\n                          label: Object.keys(item)[0],\n                          items: _ctx.patient_body[Object.keys(item)[0]],\n                          modelValue: item[Object.keys(item)[0]],\n                          \"onUpdate:modelValue\": $event => item[Object.keys(item)[0]] = $event,\n                          multiple: \"\",\n                          chips: \"\"\n                        }, null, 8 /* PROPS */, [\"label\", \"items\", \"modelValue\", \"onUpdate:modelValue\"]);\n                      }), 128 /* KEYED_FRAGMENT */))]),\n\n                      _: 1 /* STABLE */\n                    }, 8 /* PROPS */, [\"modelValue\"])]),\n                    _: 1 /* STABLE */\n                  })]),\n\n                  _: 1 /* STABLE */\n                }), _hoisted_18, _createVNode(_component_v_slider, {\n                  modelValue: _ctx.action_time,\n                  \"onUpdate:modelValue\": _cache[28] || (_cache[28] = $event => _ctx.action_time = $event),\n                  label: \"Medical Responder Time to Scene\",\n                  class: \"align-center\",\n                  max: _ctx.time_max,\n                  min: _ctx.time_min,\n                  step: 0.5\n                }, {\n                  append: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.action_time,\n                    \"onUpdate:modelValue\": _cache[26] || (_cache[26] = $event => _ctx.action_time = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    items: _ctx.time_units,\n                    style: {\n                      \"width\": \"90px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"items\"]), _createVNode(_component_v_select, {\n                    modelValue: _ctx.action_unit,\n                    \"onUpdate:modelValue\": _cache[27] || (_cache[27] = $event => _ctx.action_unit = $event),\n                    \"hide-details\": \"\",\n                    \"single-line\": \"\",\n                    density: \"compact\",\n                    items: _ctx.time_units,\n                    style: {\n                      \"width\": \"90px\"\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"items\"])]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"modelValue\", \"max\", \"min\", \"step\"]), _createCommentVNode(\" <v-row>\\n                <v-col cols=\\\"auto\\\"> \"), _createVNode(_component_v_btn, {\n                  disabled: !_ctx.valid,\n                  color: \"success\",\n                  class: \"mr-4\",\n                  onClick: _cache[29] || (_cache[29] = $event => $options.saveBiogearsFiles())\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\" Submit \")]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"disabled\"]), _createVNode(_component_v_btn, {\n                  color: \"error\",\n                  class: \"mr-4\",\n                  onClick: $options.reset\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\" Reset Form \")]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"onClick\"])]),\n                _: 1 /* STABLE */\n              }), _createCommentVNode(\" </v-col> \\n              </v-row> \")]),\n              _: 1 /* STABLE */\n            }), _hoisted_19, _createVNode(_component_v_row, {\n              class: \"justify-center\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_col, {\n                cols: \"auto\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_v_btn, {\n                  onClick: _cache[30] || (_cache[30] = $event => $options.nextTab('option-2')),\n                  density: \"compact\",\n                  icon: \"mdi-arrow-left\"\n                })]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _hoisted_20]),\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","style","width","height","viewBox","version","id","xmlns","d","_createVNode","_component_v_toolbar","color","_component_v_toolbar_title","_createCommentVNode","_component_v_tabs","large","_ctx","_component_v_tab","value","_component_v_icon","start","_component_v_main","class","_component_v_container","_component_v_window","_component_v_form","ref","_component_v_window_item","_component_v_card","flat","_component_v_card_text","_hoisted_1","_hoisted_2","_hoisted_3","_component_v_col","cols","_component_v_btn","onClick","$options","density","icon","_hoisted_4","_hoisted_5","_component_v_text_field","rules","label","required","_component_v_select","items","v","_component_v_slider","max","min","step","append","type","suffix","_hoisted_6","_component_v_row","justify","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","sm","md","_hoisted_17","_createElementBlock","_Fragment","exp","index","key","region","_component_v_autocomplete","_createBlock","side","openclose","compartment","hemrate","severity","item","_component_v_combobox","Object","keys","multiple","chips","_hoisted_18","disabled","_hoisted_19","_hoisted_20"],"sourceRoot":"","sources":["/Users/meganluu/Desktop/Capstone/MoHSES-Scenario-User-Interface/src/views/BioGearsView.vue"],"sourcesContent":["<template>\n  <v-toolbar\n    color=\"#4b0082\"\n    style=\"color: white\"\n  >\n    <v-toolbar-title>BioGears Scenario Creation Tool</v-toolbar-title>\n  </v-toolbar>\n    \n  <!-- <v-row> -->\n    <!-- <v-col cols=\"3\"> -->\n      <v-tabs large v-model=\"tab\" color=\"#4b0082\">\n        <v-tab value=\"home\">\n          <v-icon start>\n            mdi-home\n          </v-icon>\n          About this page\n        </v-tab>\n        <v-tab value=\"option-1\">\n          <v-icon start>\n            mdi-account\n          </v-icon>\n          Patient Information\n        </v-tab>\n        <v-tab value=\"option-2\">\n          <v-icon start>\n            mdi-access-point\n          </v-icon>\n          Patient Vitals\n        </v-tab>\n        <v-tab value=\"option-3\">\n          <v-icon start>\n            mdi-list-status\n          </v-icon>\n          Configure Patient Scenario\n        </v-tab>\n      </v-tabs>\n    <!-- </v-col> -->\n\n    <!-- <v-col cols=\"8\" class=\"my-content\">\n      <v-window v-model=\"tab\">\n        <v-main> -->\n          <!-- <v-window-item value=\"home\" :transition=\"false\" :reverse-transition=\"false\"> -->\n      <v-main class=\"bg-grey-lighten-3\">\n       <v-container>\n          <v-window v-model=\"tab\" class=\"mt-n12\">\n             <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                <v-window-item value=\"home\">\n                   <v-card class=\"bg-grey-lighten-3\" flat>\n                    <v-card-text>\n                      <h1 style=\"font-size: 36px\">Welcome to the BioGears Scenario Creation Tool!</h1>\n                      <br>\n                      <p style=\"font-size: 14px\">This tool is designed to simplify the process of generating BioGears Scenario XML files. First,\n                      input patient information and healthy vitals to define a BioGears patient. Then configure injuries to define a specific patient\n                    scenario and click Submit. This will locally download BioGears-compatible Patient and Scenario XML files, which can then be inputted into BioGears via\n                  command line. After running BioGears with this file, user will have a MoHSES-compatible state file with data on the simulated injured patient's\n                vitals.</p>\n                    </v-card-text>\n                    </v-card>\n\n            <v-col cols=\"auto\">\n              <v-btn @click=\"nextTab('option-1')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\n            </v-col>\n          </v-window-item>\n          \n          <v-window-item value=\"option-1\">\n            <v-card flat>\n              <v-card-text>\n                <p style=\"font-size: 20px\">Please enter patient information:</p>\n                <br>\n                <v-text-field\n                v-model=\"patient_props['Name']\"\n                :rules=\"nameRules\"\n                label=\"Name\"\n                required>\n                </v-text-field>\n\n                <v-select\n                  v-model=\"patient_props['Sex']\"\n                  :items=\"genders\"\n                  :rules=\"[v => !!v || 'Sex is required']\"\n                  label=\"Sex\"\n                  required\n                ></v-select>\n\n                <v-slider v-model=\"patient_props['age']\" label=\"Age\" class=\"align-center\" :max=\"age_max\" :min=\"age_min\" :step=\"1\">\n                            <template v-slot:append>\n                               <v-text-field v-model=\"patient_props['age']\" hide-details single-line density=\"compact\" type=\"number\" suffix=\"years\" style=\"width: 180px\"></v-text-field>\n                            </template>\n                         </v-slider>\n                         <v-slider v-model=\"patient_props['height']\" label=\"Height\" class=\"align-center\" :max=\"height_max\" :min=\"height_min\" :step=\"0.1\">\n                            <template v-slot:append>\n                               <v-text-field v-model=\"patient_props['height']\" hide-details single-line density=\"compact\" type=\"number\" suffix=\"cm\" style=\"width: 180px\"></v-text-field>\n                            </template>\n                         </v-slider>\n                         <v-slider v-model=\"patient_props['weight']\" label=\"Weight\" class=\"align-center\" :max=\"weight_max\" :min=\"weight_min\" :step=\"0.1\">\n                            <template v-slot:append>\n                               <v-text-field v-model=\"patient_props['weight']\" hide-details single-line density=\"compact\" type=\"number\" suffix=\"kg\" style=\"width: 180px\"></v-text-field>\n                            </template>\n                         </v-slider>\n              </v-card-text>\n            </v-card>\n            <br>\n            <v-row justify=\"center\">\n              <v-col cols=\"auto\">\n                <v-btn @click=\"nextTab('home')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\n              </v-col>\n              <v-col cols=\"auto\">\n                <v-btn @click=\"nextTab('option-2')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\n              </v-col>\n            </v-row>\n            <br>\n          </v-window-item>\n\n        <v-window-item value=\"option-2\">\n          <v-card flat>\n            <v-card-text>\n              <p style=\"font-size: 20px\">Please enter <b>healthy</b>  patient vitals: </p>\n              <br>\n\n              <v-select\n                v-model=\"patient_vitals['BloodTypeABO']\"\n                :items=\"blood_types\"\n                label=\"Blood Type\"\n              ></v-select>\n\n              <v-select\n                v-model=\"patient_vitals['BloodTypeRh']\"\n                :items=\"rh\"\n                label=\"Rh\"\n              ></v-select>\n\n              <!-- <v-text-field\n                v-model=\"patient_vitals['mean_arterial_pressure']\"\n                label=\"Mean Arterial Pressure (mmHg)\"\n              ></v-text-field> -->\n\n              <v-text-field\n                v-model=\"patient_vitals['SystolicArterialPressureBaseline']\"\n                label=\"Systolic Arterial Pressure (mmHg)\"\n                required\n              ></v-text-field>\n              \n              <v-text-field\n                v-model=\"patient_vitals['DiastolicArterialPressureBaseline']\"\n                label=\"Diastolic Arterial Pressure (mmHg)\"\n                required\n              ></v-text-field>\n\n              <v-slider\n                v-model=\"patient_vitals['HeartRateBaseline']\"\n                label=\"Heart Rate\"\n                class=\"align-center\"\n                :max=\"heart_rate_max\"\n                :min=\"heart_rate_min\"\n                :step=\"1\"\n              ><template v-slot:append>\n                  <v-text-field\n                    v-model=\"patient_vitals['HeartRateBaseline']\"\n                    hide-details single-line density=\"compact\" type=\"number\" suffix=\"bpm\" style=\"width: 180px\"\n                  ></v-text-field>\n                </template>\n              </v-slider>\n              <v-slider\n                v-model=\"patient_vitals['RespirationRateBaseline']\"\n                label=\"Respiratory Rate\"\n                class=\"align-center\"\n                :max=\"resp_rate_max\"\n                :min=\"resp_rate_min\"\n                :step=\"1\"\n              >\n                <template v-slot:append>\n                  <v-text-field\n                    v-model=\"patient_vitals['RespirationRateBaseline']\"\n                    hide-details single-line density=\"compact\" type=\"number\" suffix=\"/min\" style=\"width: 180px\"\n                  ></v-text-field>\n                </template>\n              </v-slider>\n            </v-card-text> \n          </v-card>\n          <br>\n          <v-row justify=\"center\">\n            <v-col cols=\"auto\">\n              <v-btn @click=\"nextTab('option-1')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\n            </v-col>\n            <v-col cols=\"auto\">\n              <v-btn @click=\"nextTab('option-3')\" density=\"compact\" icon=\"mdi-arrow-right\"></v-btn>\n            </v-col>\n          </v-row>\n          <br>\n        </v-window-item>\n\n        <v-window-item value=\"option-3\">\n          <v-card flat>\n            <v-card-text>\n            <p style=\"font-size: 20px\">Please enter a title and brief description for this patient scenario: </p>\n            <br>\n            <v-text-field v-model=\"scenario_props['Name']\" label=\"Scenario Name\"> </v-text-field>\n            <v-text-field v-model=\"scenario_props['Description']\" label=\"Scenario Brief Description\"> </v-text-field>\n            <p style=\"font-size: 20px\">Please configure patient injuries and timeline:</p>\n            <br>\n            <br>\n            <v-row>\n              <v-col cols=\"12\" sm=\"8\" md=\"6\" class=\"my-content\">\n\n                <svg\n                  width=\"550px\"\n                  height=\"600px\"\n                  viewBox=\"15 0 20 100\"\n                  version=\"1.1\"\n                  id=\"svg46\"\n                  sodipodi:docname=\"human_sanika.svg\"\n                  inkscape:version=\"1.2.2 (732a01da63, 2022-12-09)\"\n                  xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n                  xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  xmlns:svg=\"http://www.w3.org/2000/svg\">\n                  <defs\n                    id=\"defs50\" />\n                  <path\n                    \n                    id=\"Chest\"\n                    d=\"m 2.4651865,21.528509 -1.72941989,3.09103 -1.89346001,0.94785 1.15295001,0.90662 0.90586,2.63773 2.09966989,0.86537 3.34636,-1.655 -0.83462,-6.50527 z m 8.9862405,0 1.72942,3.09103 1.89346,0.94785 -1.15295,0.90662 -0.90604,2.63773 -2.09968,0.86537 -3.3452405,-1.655 0.83425,-6.50527 z\"\n                    />\n                  <path\n                    \n                    id=\"Abdomen\"\n                    d=\"m 3.5133365,30.595379 3.11202,-1.40603 -0.0937,2.27965 -2.80138,1.4364 z m -1.93508,1.6685 1.29355,0.72139 -0.14997,-1.70899 z m 1.05303,-1.637 -2.47930989,-1.03259 0.93360999,2.52148 z m -1.5316399,1.73729 1.6900499,1.03372 0.28871,2.06743 -1.64881,-1.07515 z m 2.9114199,1.10421 0.0623,1.62387 2.30327,-0.49961 0.12448,-2.21703 z m 0.15561,2.40432 -0.0309,1.99844 2.20973,0.59353 0.0311,-3.1227 z m -2.6546,-0.98516 1.48384,1.0339 0.20622,2.10905 -1.64975,-1.32355 z m 5.23795,14.47521 -0.60647,-5.91209 -0.015,-3.84879 -2.18479,-1.07533 -0.24746,7.03017 z m 0.41581,-5.7e-4 0.60628,-5.91209 0.0154,-3.84915 2.18404,-1.07515 0.2474605,7.03017 z m -4.00588,-10.21155 -1.81341,-1.36479 -0.15748,1.83347 -1.28567989,2.37432 1.98044989,2.73595 1.03109,0.16554 0.37119,-3.88721 z m 7.2429405,-8.55562 -3.1120205,-1.40604 0.0937,2.27965 2.8011905,1.43603 z m 1.93471,1.66849 -1.29355,0.7212 0.14997,-1.70898 z m -1.05303,-1.63718 2.47968,-1.03241 -0.9336,2.52093 z m 1.53164,1.73729 -1.69005,1.03372 -0.28871,2.0678 1.64975,-1.07533 z m -2.9114305,1.10421 -0.0622,1.62387 -2.30308,-0.49961 -0.12448,-2.21722 z m -0.1556,2.4045 0.0311,1.99844 -2.20953,0.59391 -0.0311,-3.1227 z m 2.6545905,-0.98535 -1.48383,1.03372 -0.20622,2.10905 1.64862,-1.32355 z m -1.64787,4.26366 1.81341,-1.36479 0.15748,1.83347 1.28642,2.37338 -1.98044,2.73652 -1.03109,0.16554 -0.37026,-3.88816 z\"/>\n                  <path\n                    \n                    id=\"Pelvis\"\n                    d=\"m 0.73979661,43.812429 v 4.21363 l 2.94516989,5.8253 1.86028,5.78349 -0.19366,-4.0072 z m 3.24886989,13.42559 0.0647,0.15485 1.21294,2.90207 -0.78307,7.18803 -1.23618,-0.66102 1.0714,-6.69273 z m 1.52977,-7.75493 0.0221,-0.0277 -0.14866,-0.37945 -3.10172,-3.40449 -0.23283,-0.0825 2.05918,5.32009 z m -1.17263,2.01833 1.27705,3.29948 0.42631,-4.04862 -0.25196,-0.64303 z m 4.05219,-2.01795 -0.0221,-0.0281 0.14867,-0.37926 3.1017105,-3.40449 0.23246,-0.0825 -2.0584305,5.3199 z m 1.17263,2.01795 -1.27706,3.29948 -0.42631,-4.04843 0.25197,-0.64303 z m 3.6065705,-7.6888 v 4.21363 l -2.94574,5.82511 -1.8602705,5.78349 0.19365,-4.0072 z m -3.2494405,13.42596 -0.0649,0.15467 -1.21294,2.90207 0.78325,7.18803 1.2361905,-0.66122 -1.0714005,-6.69272 z\"\n                    />\n                  <path\n                    \n                    id=\"Head\"\n                    d=\"m 39.271427,10.801559 0.44208,-0.14964 0.16111,0.16427 1.48163,4.04751 2.32401,1.45118 2.39971,-1.52387 0.97577,-3.68969 0.52752,-0.55908 0.23367,0.0981 0.24198,-3.3446699 -2.03129,-2.31103 -2.84509,-0.51629 -2.20422,0.52915 -1.93631,2.63077 z m -28.40863,0.34495 0.0203,-2.2074699 -3.9668905,-2.7637 -3.74099,2.23559 -0.006,2.6352799 -0.60741,0.0403 0.27408,1.82447 0.97635,0.33932 0.44244,2.18029 1.82222,2.06556 2.03518,-0.0607 1.79223,-1.94408 0.3595705,-2.24066 0.97616,-0.33932 0.25159,-1.78416 z m -8.0771905,-0.34495 -0.0482,-2.5908499 4.20648,-2.46806 4.4276905,2.95361 -0.0405,1.9440799 0.24197,-3.3446699 -2.0312905,-2.31103 -2.84508,-0.51629 -2.20423,0.52915 -1.9363,2.63077 z\" />\n                  <path\n                    \n                    id=\"Neck\"\n                    d=\"m 43.483667,16.548089 -2.35767,-1.55045 -1.47119,-3.95143 -0.60741,0.0403 0.27409,1.82447 0.97635,0.33932 0.7613,2.21572 0.33017,1.06849 0.0895,2.14894 1.16448,0.008 0.10563,-0.70833 0.54716,-0.0606 z m 1.01793,1.47595 0.23768,0.64982 1.38107,-0.004 0.01,-2.38784 0.25971,-0.79061 0.57215,-2.1698 0.76359,-0.41018 0.25158,-1.78416 -0.62859,0.0193 -1.08488,3.89981 -2.39725,1.46684 0.2768,1.48507 z m -40.0829605,-1.67052 1.64975,2.35202 0.74426,2.62159 -1.73486,-1.38354 -0.86649,-2.97104 z m 5.08047,0 -1.64975,2.35202 -0.74538,2.62234 1.73486,-1.38354 0.86649,-2.97104 z\"\n                    />\n                  <path\n                    \n                    id=\"Extremities\"\n                    d=\"m 45.133277,68.516999 1.20605,3.01461 -0.70737,0.26558 -0.89755,3.51771 0.55802,-4.01191 z m 5.08496,-3.15003 -0.63355,1.8609 -0.16813,2.03261 -0.61313,1.93117 0.90584,-0.0851 0.28534,2.15982 z m -4.3014,6.58834 -1.27664,4.99697 0.28984,3.02284 0.67869,10.06546 1.66325,0.63506 3.504,-11.96959 -1.24986,-7.17525 z m -0.54053,20.8287 -0.85194,1.3581 -0.37189,0.79238 0.15589,1.21774 0.76983,0.74446 1.51186,0.12543 1.12989,-0.29192 0.24225,-0.95894 -0.80765,-1.30405 0.22563,-0.85987 -0.29679,-0.84153 0.0194,-1.81524 -1.53568,-0.54817 z m 1.19598,0.4675 -0.15943,1.25776 0.6023,0.97431 m 0.54436,0.29544 -1.06474,0.40084 -1.55326,-0.65137 m 3.56525,-39.90247 -3.97962,-1.70224 -0.56389,0.27131 -0.0528,1.79746 -0.075,4.64669 1.97837,6.04282 -0.47612,1.41403 1.42813,3.29446 1.7661,-0.30111 0.50079,-2.11605 0.1695,-1.75674 2.42102,-8.15763 0.009,-3.68308 z m 4.26465,-23.93238 -0.32785,-1.05121 -1.27383,-2.05489 1.38708,-2.96476 2.28579,0.91634 1.83971,1.74245 0.53937,1.78549 -0.26073,4.30868 z m 2.64394,15.3417 1.51839,0.0828 0.78033,-0.65476 1.16673,2.18281 0.79187,3.34623 -0.49843,0.21064 -0.55144,-2.21453 -0.50541,0.24292 0.30356,2.5012 -0.62882,0.23021 -0.36124,-2.50014 -0.56203,0.16666 0.16765,2.77019 -0.77603,0.30634 -0.19719,-2.87245 -0.45732,-0.0278 -0.22215,2.64829 -0.66539,0.24928 0.0254,-4.56692 -0.3374,-0.20146 -1.38845,1.65469 -0.32098,-0.35041 0.76973,-2.03928 z m 0.97685,-0.1799 1.43335,-0.74932 0.29002,-7.01054 c 0,0 -0.65,-2.77789 -0.64401,-3.06126 l -0.61212,-1.21783 -3.98124,-2.57566 1.0222,1.93525 -0.38967,4.82212 1.8218,7.69308 z m -13.45979,-5.10285 0.14418,2.97292 1.15984,-0.0241 0.048,-2.96488 2.80867,-0.81981 2.34029,-0.7541 1.34121,3.73319 -4.77886,1.36455 -2.33301,1.2158 -2.37536,-1.2333 -5.45663,-1.37716 1.51961,-3.95743 z m -7.0756,2.37946 5.48374,1.86457 2.27386,1.3378 2.74195,-1.74412 4.51804,-1.28077 0.90009,2.29721 0.675,3.4346 -0.81272,5.02838 -2.82636,0.16819 -4.11256,-1.67581 -1.00814,0.39118 -0.95849,-0.39888 -4.44053,1.94411 -2.77023,-0.51478 -0.95181,-6.15325 0.36754,-2.7864 z m 6.4333,24.38495 -1.20605,3.01461 0.70738,0.26558 0.89754,3.51771 -0.55801,-4.01191 z m -5.08496,-3.15003 0.63355,1.8609 0.16813,2.03261 0.61314,1.93117 -0.90585,-0.0851 -0.28534,2.15982 z m 4.3014,6.58834 1.27664,4.99697 -0.28984,3.02284 -0.67869,10.06546 -1.66325,0.63506 -3.50399,-11.96959 1.24985,-7.17525 z m 0.54053,20.8287 0.85194,1.3581 0.37189,0.79238 -0.15588,1.21774 -0.76984,0.74446 -1.51185,0.12543 -1.1299,-0.29192 -0.24225,-0.95894 0.80765,-1.30405 -0.22562,-0.85987 0.29679,-0.84153 -0.0194,-1.81524 1.53568,-0.54817 z m -1.19598,0.4675 0.15943,1.25776 -0.6023,0.97431 m -0.54436,0.29544 1.06474,0.40084 1.55326,-0.65137 m -4.19331,-39.53466 4.55099,-2.03879 0.63802,0.23079 0.0353,1.80672 0.075,4.64669 -1.97837,6.04282 0.47612,1.41403 -1.42812,3.29446 -1.76611,-0.30111 -0.50079,-2.11605 -0.1695,-1.75674 -2.42102,-8.15763 -0.34279,-3.64687 z m -3.98895,-24.48137 0.4297,-1.4164 1.30458,-1.68577 -1.39393,-2.96155 -2.28367,0.92162 -1.83567,1.7467 -0.53524,1.78673 0.27068,4.30806 z m -2.46869,15.35539 -1.5182,0.0863 -0.78184,-0.65295 -1.16168,2.1855 -0.78414,3.34805 0.49892,0.20949 0.54632,-2.2158 0.50597,0.24175 -0.29779,2.5019 0.62936,0.22875 0.35546,-2.50096 0.56242,0.16536 -0.16126,2.77057 0.77674,0.30455 0.19056,-2.87291 0.45724,-0.0289 0.22827,2.64778 0.66597,0.24774 -0.0359,-4.56685 0.33693,-0.20224 1.39227,1.65147 0.32017,-0.35115 -0.77444,-2.03749 z m -0.97726,-0.17765 -1.43509,-0.746 -0.30622,-7.00985 c 0,0 0.64359,-2.77938 0.63694,-3.06274 l 0.6093,-1.21924 3.62552,-2.56583 -0.68276,1.9919 0.41561,4.74788 -1.80402,7.69727 z m -12.59945,1.31596 1.5198,0.0506 0.76631,-0.67111 1.21262,2.15766 0.86245,3.32873 -0.49386,0.22113 -0.59815,-2.20238 -0.50016,0.25356 0.35639,2.49422 -0.62382,0.24345 -0.41402,-2.49194 -0.55839,0.17851 0.2262,2.76603 -0.76938,0.32268 -0.25788,-2.86764 -0.4578,-0.0181 -0.16611,2.6524 -0.65997,0.26329 -0.0712,-4.56643 -0.34158,-0.19428 -1.35316,1.68368 -0.32832,-0.34355 0.72644,-2.0551 z m 1.18497,-16.19302 -0.005,3.09419 0.57959,1.91184 0.54538,-2.41185 z m -23.9347704,16.19302 -1.5198,0.0506 -0.76631,-0.67112 -1.21262,2.15767 -0.86245,3.32873 0.49386,0.22113 0.59815,-2.20238 0.50016,0.25356 -0.35639,2.49422 0.62382,0.24345 0.41402,-2.49194 0.55839,0.17851 -0.2262,2.76603 0.76938,0.32268 0.25788,-2.86764 0.4578,-0.0181 0.16611,2.65239 0.65997,0.2633 0.0712,-4.56643 0.34158,-0.19428 1.35316,1.68367 0.32832,-0.34354 -0.72644,-2.0551 z m -1.18497,-16.19302 0.005,3.09419 -0.57959,1.91184 -0.54539,-2.41185 z m 7.0789299,37.41425 -0.12448,1.12295 0.87118,1.08171 0.29058,1.70599 0.58116,0.24933 0.49774,-2.57866 0.33182,-0.91486 -0.29058,-0.58247 z m 3.85854,0.0832 -0.62241,1.74685 -1.32767,2.57867 0.33182,2.37095 0.95423,-2.66209 0.78832,-1.4964 z m -4.97867989,-2.37058 0.95422989,5.11609 -0.62239989,-0.33313 -0.49793,1.6638 z m 4.27340989,7.94395 -0.29058,0.91486 -0.62241,3.86828 -0.0829,5.15733 0.87174,5.03304 -0.0418,-6.44714 0.91298,-2.57848 0.1243,-2.82837 z m -1.99151,2.32914 0.20735,7.73637 1.65968,6.23904 -1.80497,-0.85299 -3.00797989,-10.83584 1.03728,-6.82095 z m 2.98717,15.09818 -0.12448,3.45228 -0.29058,1.20637 h -0.87118 l -0.24877,-0.83181 -0.29059,-0.0416 0.0623,0.83181 -1.09934,-0.33333 -0.29058,-0.16629 -1.2448,-0.27033 -0.0412,-0.97747 1.2031899,-2.03781 0.82975,-1.04009 2.03294,-0.83181 z m -6.16386989,-37.46914 0.15504,4.75053 2.40262989,6.60968 -0.73638,1.90021 -2.3640099,-8.34435 z m 0.58117,-11.60768 0.15503,4.00684 -1.31754001,7.93154 -0.61978,-6.40308 z m 0.38769,5.1223 2.75150989,6.07239 0.61997,4.87425 -1.16232,6.85771 -2.51904989,-6.98163 -0.15504,-7.18801 z m 12.16631039,20.87063 0.1243,1.12295 -0.87118,1.08171 -0.29058,1.70599 -0.58116,0.24933 -0.49774,-2.57866 -0.33182,-0.91486 0.29058,-0.58247 z m -3.8585305,0.0832 0.6224,1.74685 1.3273005,2.57867 -0.33182,2.37095 -0.9542305,-2.66209 -0.78738,-1.49734 z m 4.9781105,-2.37039 -0.95423,5.11609 0.62241,-0.33295 0.49773,1.66381 z m -4.2728405,7.94394 0.29058,0.91486 0.6224005,3.8681 0.0829,5.15733 -0.8713605,5.03304 0.0412,-6.44714 -0.91242,-2.57848 -0.12561,-2.82837 z m 1.9915005,2.32915 -0.20753,7.73637 -1.6594905,6.23904 1.8047805,-0.853 3.00816,-10.83583 -1.03727,-6.82095 z m -2.9869805,15.09817 0.1243,3.45228 0.28983,1.20638 h 0.87136 l 0.24897,-0.83181 0.2905805,-0.0416 -0.0624,0.83181 1.09914,-0.33332 0.29058,-0.16629 1.24444,-0.27033 0.0416,-0.97748 -1.20319,-2.03743 -0.82974,-1.0399 -2.0329405,-0.83181 z m 6.1631205,-37.46932 -0.15504,4.75091 -2.40263,6.60949 0.7362,1.90021 2.36401,-8.34435 z m -0.58154,-11.60825 -0.15485,4.00722 1.31793,7.93154 0.61977,-6.40308 z m -0.38731,5.12268 -2.75152,6.07258 -0.62015,4.87425 1.16232,6.85771 2.51886,-6.98144 0.15504,-7.18764 z m -17.8749004,-10.94443 -1.30083,10.28927 1.10778,0.01 1.89387,-7.99609 -0.19174,-4.53719 z m -1.21978,-1.94971 0.58728,2.58635 -1.11875,9.15614 -0.55849,-0.21663 -0.2304,-6.77018 z m 0.71916,-0.2047 0.33838,1.70499 1.81931,-2.54418 0.66289,-1.26895 z m 2.8527,-2.6096 c 0.0259,-0.0144 0.0536,-0.0254 0.0824,-0.0324 l 1.48332001,-4.95503 -1.00455001,-2.08428 -1.65509,1.74532 -2.23034,6.67667 -0.0415,0.93739 c 1.06528,-0.84215 2.18961,-1.60679 3.36433,-2.28803 z m -1.6945,-5.75654 -1.64891,6.43421 0.36468,-4.92266 z m 21.7225804,10.52055 1.30083,10.28927 -1.10778,0.01 -1.89387,-7.99609 0.19174,-4.53719 z m 1.21978,-1.94971 -0.58729,2.58635 1.11876,9.15614 0.55849,-0.21663 0.2304,-6.77018 z m -0.55354,-0.2047 -0.33838,1.70499 -1.81932,-2.54418 -0.6629,-1.26895 z m -2.85271,-2.6096 c -0.0259,-0.0144 -0.0536,-0.0254 -0.0824,-0.0324 l -1.48333,-4.95503 1.00456,-2.08428 1.65511,1.74532 2.23034,6.67667 0.0415,0.93739 c -1.06528,-0.84215 -2.18962,-1.60679 -3.36434,-2.28803 z m 1.6945,-5.75654 1.64893,6.43421 -0.36469,-4.92266 z m -13.8386705,-9.20021 -3.55745989,1.97916 -0.72653,-0.35074 z m 0.107,0.43288 0.37119,1.73073 -2.18459,0.53561 -1.40114989,-0.49436 z m -3.98148989,1.97595 -0.75814,-0.41 -2.40806001,1.66799 -1.17364,1.50707 -0.62662,1.56259 0.0464,3.70195 1.3284,-1.72153 -0.0407,-2.59376 0.48843,-0.5005 c 0,0 3.09777001,-3.19057 3.14370001,-3.214 z m 0.2409,0.10873 c 0.002,0.0525 -3.32987001,3.54733 -3.32987001,3.54733 l -0.10067,3.10396 1.15426,-1.97782 2.22547001,-0.94804 1.56574989,-2.88481 z m 10.05660039,-2.51756 3.55748,1.97916 0.72653,-0.35074 z m -0.107,0.43288 -0.3711905,1.73073 2.1846005,0.53561 1.40116,-0.49436 z m 3.98151,1.97595 0.75814,-0.41 2.40806,1.66799 1.17364,1.50707 0.62662,1.5626 -0.0464,3.70194 -1.3284,-1.72153 0.0407,-2.59376 -0.48842,-0.50049 c 0,0 -3.09778,-3.19058 -3.14371,-3.21401 z m -0.2409,0.10873 c -10e-4,0.0525 3.32987,3.54733 3.32987,3.54733 l 0.10067,3.10396 -1.15426,-1.97782 -2.22547,-0.94804 -1.56576,-2.88481 z\"\n                    />\n                  <path\n                    \n                    id=\"Back\"\n                    d=\"m 40.739147,19.072339 0.063,-2.62462 -0.71441,1.15181 -4.37994,1.49796 4.97857,8.36746 1.83043,5.08188 -0.21949,-13.55362 z m -7.42423,1.95717 -1.57473,1.56517 -0.81404,2.06905 -0.38603,2.52859 1.83679,-1.23927 2.76223,-1.15538 1.84691,3.4342 1.13679,5.49715 0.0767,5.8593 4.07066,1.10938 -0.10355,-7.94098 -1.94107,-4.90022 -5.04395,-8.19334 z m 13.23814,-1.85796 -0.063,-2.62463 0.71441,1.15181 4.37994,1.49796 -4.97857,8.36746 -1.83043,5.08189 0.21949,-13.55362 z m 7.42423,1.95716 1.57473,1.56518 0.81404,2.06904 0.0384,2.52859 -1.48921,-1.23926 -2.76223,-1.15539 -1.84691,3.4342 -1.13679,5.49715 -0.0767,5.8593 -4.07066,1.10938 0.10355,-7.94098 1.94107,-4.90021 5.04395,-8.19335 z m -11.12961,-1.764514 0.53876,25.33066 0.48967,-0.0297 0.65658,-25.3387 -0.28147,-0.84188 -1.25059,-4.9e-4 z\" />\n                </svg>\n              </v-col>\n\n              <v-col>\n                <div v-for=\"(exp, index) in action\" :key=\"index\">\n                            <v-select v-model=\"exp.region\" label=\"Select Body Region\" :items=\"body_regions\"></v-select>\n                            <v-autocomplete v-model=\"exp.type\" label=\"Select Injury Type\" :items=\"patient_body[exp.region]\"></v-autocomplete>\n                            <v-row>\n                            <v-col>\n                            <v-select v-if=\"exp.type==='Tension Pneumothorax'\" v-model=\"exp.side\" label=\"Select side\" :items=\"sides\" style=\"width: 200px\" class=\"align-left\"></v-select>\n                          </v-col>\n                          <v-col>\n                            <v-select v-if=\"exp.type==='Tension Pneumothorax'\" v-model=\"exp.openclose\" label=\"Open or Closed\" :items=\"open_closed\" class=\"align-right\" style=\"width: 200px\"></v-select>\n                          </v-col>\n                          </v-row>\n                            <v-select v-if=\"exp.type==='Hemorrhage'\" v-model=exp.compartment label=\"Select compartment\" :items=\"hemorrhage_regions[exp.region]\"></v-select>\n                            <v-text-field v-if=\"exp.type==='Hemorrhage'\" v-model=\"exp.hemrate\" label=\"Initial Rate\" suffix=\"mL/min\"></v-text-field>\n                            <v-slider v-if=\"exp.type!='Hemorrhage'\" v-model=\"exp.severity\" label=\"Severity\" class=\"align-center\" :max=\"sev_max\" :min=\"sev_min\" :step=\"0.1\">\n                            <template v-slot:append>\n                              <v-text-field v-model=\"exp.severity\" hide-details single-line density=\"compact\" style=\"width: 90px\"></v-text-field>\n                            </template>\n                          </v-slider>\n                         </div>\n                         <v-btn @click=\"removeAction(-1)\">Remove Injury</v-btn>\n                         <v-btn @click=\"addAction\">Add Another Injury</v-btn>\n                          \n                <v-form\n                  ref=\"form\"\n                  v-model=\"valid\"\n                  lazy-validation\n                  >\n                    <v-combobox v-for=\"(item, index) in name\"\n                      :key=\"index\"\n                      :label=\"Object.keys(item)[0]\"\n                      :items='patient_body[Object.keys(item)[0]]'\n                      v-model=\"item[Object.keys(item)[0]]\" \n                      multiple\n                      chips      \n                  ></v-combobox>\n                </v-form>\n              </v-col>\n            </v-row>\n            <br>\n            <v-slider v-model=\"action_time\" label=\"Medical Responder Time to Scene\" class=\"align-center\" :max=\"time_max\" :min=\"time_min\" :step=\"0.5\">\n                            <template v-slot:append>\n                              <v-text-field v-model=\"action_time\" hide-details single-line density=\"compact\" :items=\"time_units\" style=\"width: 90px\"></v-text-field>\n                              <v-select v-model=\"action_unit\" hide-details single-line density=\"compact\" :items=\"time_units\" style=\"width: 90px\"></v-select>\n                            </template>\n                         </v-slider>\n                         \n\n                <!-- <v-row>\n                <v-col cols=\"auto\"> -->\n                <v-btn\n                  :disabled=\"!valid\"\n                  color=\"success\"\n                  class=\"mr-4\"\n                  @click=\"saveBiogearsFiles()\"\n                  >\n                  Submit\n                </v-btn>\n                <v-btn\n                  color=\"error\"\n                  class=\"mr-4\"\n                  @click=\"reset\"\n                  >\n                  Reset Form\n                </v-btn>  \n              </v-card-text>\n              <!-- </v-col> \n              </v-row> -->\n            </v-card>  \n            <br>\n            <v-row class=\"justify-center\">\n                <v-col cols=\"auto\">\n                    <v-btn @click=\"nextTab('option-2')\" density=\"compact\" icon=\"mdi-arrow-left\"></v-btn>\n                </v-col>\n                </v-row>\n                <br>   \n        </v-window-item>\n      </v-form>\n      </v-window>\n    </v-container>\n  </v-main>\n\n</template>\n\n\n<script>\nimport xmlbuilder from 'xmlbuilder'\n  export default {\n    data: () => ({\n      age_min: 0,\n      age_max: 120,\n      core_temp_min: 0,\n      core_temp_max: 70,\n      heart_rate_min: 0,\n      heart_rate_max: 350,\n      resp_rate_min: 0,\n      resp_rate_max: 200,\n      height_min: 0,\n      height_max: 200,\n      weight_min: 0,\n      weight_max: 200,\n      time_min: 0,\n      time_max: 60,\n      action_time: 0,\n      action_unit: 'min',\n      sev_min: 0,\n      sev_max: 1,\n      med_options: ['A', 'B', 'C'],\n      tab: 'home',\n      name: [],\n      sides: ['Left', 'Right'],\n      open_closed: ['Open', 'Closed'],\n      drawer: false,\n      valid: true,\n      expanded: [0],\n      action: [\n        { region: [],\n          type: [],\n          severity: 0.5,\n        },\n      ],\n\n      patient_props: {\n        \"Name\": [],\n        \"Sex\": [],\n        \"age\": 50,\n        \"weight\": 75,\n        \"height\": 150\n      },\n      patient_vitals: {\n        \"BloodTypeABO\": [],\n        \"BloodTypeRh\": [],\n        \"DiastolicArterialPressureBaseline\": [],\n        \"SystolicArterialPressureBaseline\":[],\n        \"HeartRateBaseline\": 60,\n        \"RespirationRateBaseline\": 14\n      },\n\n      scenario_props: {\n        'Name': [],\n        'Description': [],\n      },\n\n      genders: [\n        'Male',\n        'Female'\n      ],\n      patient_body: {\n        'Head':['Hemorrhage', 'Brain Injury', 'Burn Wound'],\n        'Neck':['Sprain', 'Burn Wound'], \n        'Chest':['Asthma', 'Heart Attack', 'Cardiac Arrest', 'Tension Pneumothorax', 'Burn Wound', 'Hemorrhage'], \n        'Back':['Burn Wound'],\n        'Abdomen':['Burn Wound'], \n        'Pelvis':['Burn Wound'],\n        'Extremities':['Burn Wound', 'Hemorrhage'],\n      },\n      hemorrhage_regions: {\n        'Head': ['Brain'],\n        'Chest': ['Aorta', 'Myocardium', 'Vena Cava', 'Lung'],\n        'Abdomen': ['Spleen', 'Liver', 'LeftKidney', 'RightKidney', 'Splanchnic', 'SmallIntestine', 'LargeIntestine'],\n        'Extremities': ['LeftArm', 'RightArm', 'LeftLeg', 'RightLeg']\n    },\n      body_regions: [\n        'Head',\n        'Neck', \n        'Chest', \n        'Back',\n        'Abdomen', \n        'Pelvis',\n        'Extremities']\n      ,\n      blood_types: [\n        'A',\n        'B',\n        'AB',\n        'O'\n      ],\n      rh: [\n        'Positive',\n        'Negative'\n      ],\n      time_units: [\n        's',\n        'min',\n        'hr'\n      ]\n    }),\n    methods: {\n        nextTab(id) {\n          this.tab = id;\n        },\n        addAction() {\n          this.action.push({\n            region: '',\n            type: '',\n            severity: ''\n          });\n        },\n        removeAction(index) {\n          this.action.splice(index, 1);\n        },\n        validate() {\n          this.$refs.form.validate()\n        },\n        reset() {\n          this.$refs.form.reset()\n        },\n        pathClicked(id) {\n          let pathElement = document.getElementById(id);\n          if (this.name.some(x => Object.keys(x).includes(id))) {\n            this.name = this.name.filter(x => !Object.keys(x).includes(id));\n          } else {\n            this.name.push({\n              [id]: ''\n            })\n          }\n          if (pathElement.classList.contains(\"active\")) {\n            pathElement.classList.remove(\"active\");\n          } else {\n            pathElement.classList.add(\"active\");\n          }\n        },\n\n        saveStateXML() {\n          const xml = xmlbuilder.create('Patient', {\n            encoding: 'UTF-8',\n            standalone: \"yes\"\n          })\n          xml.att({'xmlns':\"uri:/mil/tatrc/physiology/datamodel\", 'xmlns:xsi':'http://www.w3.org/2001/XMLSchema-instance',\n          'contentVersion':\"BioGears_7.5\"})\n\n          for (var key1 in this.patient_props) {\n            if (key1 == 'age') {\n              const Age = xml.ele('Age')\n              Age.att('value', this.patient_props[key1])\n              Age.att('units', 'yr')\n            }\n            else if (key1 == 'height') {\n              const Height = xml.ele('Height')\n              Height.att('value', this.patient_props[key1])\n              Height.att('units', '')\n            }\n            else if (key1 == 'weight') {\n              const Weight = xml.ele('Weight')\n              Weight.att('value', this.patient_props[key1])\n              Weight.att('units', 'kg')\n            }\n            else {\n              xml.ele(key1, this.patient_props[key1])\n            }\n          }\n        \n          for (var key2 in this.patient_vitals) {\n            if (key2 == 'BloodTypeRh') {\n              if (this.patient_vitals[key2] == 'Positive') {\n                xml.ele(key2, 'true')\n              }\n              else if (this.patient_vitals[key2] == 'Negative') {\n                xml.ele(key2, 'false')\n              }\n            }\n            else if (key2 == 'DiastolicArterialPressureBaseline') {\n              const DiastolicArterialPressureBaseline = xml.ele('DiastolicArterialPressureBaseline')\n              DiastolicArterialPressureBaseline.att('value', this.patient_vitals[key2])\n              DiastolicArterialPressureBaseline.att('units', 'mmHg')\n            }\n            else if (key2 == 'SystolicArterialPressureBaseline') {\n              const SystolicArterialPressureBaseline = xml.ele('SystolicArterialPressureBaseline')\n              SystolicArterialPressureBaseline.att('value', this.patient_vitals[key2])\n              SystolicArterialPressureBaseline.att('units', 'mmHg')\n            }\n            else if (key2 == 'HeartRateBaseline') {\n              const HeartRate = xml.ele('HeartRateBaseline')\n              HeartRate.att('value', this.patient_vitals[key2])\n              HeartRate.att('units', '1/min')\n            }\n            else if (key2 == 'RespirationRateBaseline') {\n              const RespRate = xml.ele('RespirationRateBaseline')\n              RespRate.att('value', this.patient_vitals[key2])\n              RespRate.att('units', '1/min')\n            }\n            else {\n              xml.ele(key2, this.patient_vitals[key2])\n            }\n          }\n\n          var xmlString = xml.end({\n            pretty: true\n          });\n          const blob = new Blob([xmlString], {\n            type: 'text/xml'\n          })\n          const link = document.createElement('a')\n          link.href = URL.createObjectURL(blob)\n          link.download = 'patientdata.xml'\n          link.click()\n        },\n\n        saveScenarioXML() {\n          const xml = xmlbuilder.create('Scenario', {\n            encoding: 'UTF-8',\n            standalone: \"yes\"\n          })\n          xml.att({'xmlns':\"uri:/mil/tatrc/physiology/datamodel\", 'xmlns:xsi':'http://www.w3.org/2001/XMLSchema-instance',\n          'contentVersion':\"BioGears_7.5\"})\n          \n          for (var key1 in this.scenario_props) {\n            xml.ele(key1, this.scenario_props[key1])\n          }\n          const InitialParams = xml.ele('InitialParameters')\n          InitialParams.ele('PatientFile', 'patientdata.xml')\n\n\n          const data_req = xml.ele('DataRequests')\n          data_req.att('SamplesPerSecond', 50)\n          const map = data_req.ele('DataRequest')\n          map.att('xsi:type', 'PhysiologyDataRequestData')\n          map.att('Name', 'MeanArterialPressure')\n          map.att('Unit', 'mmHg')\n          map.att('Precision', 1)\n          const sap = data_req.ele('DataRequest')\n          sap.att('xsi:type', 'PhysiologyDataRequestData')\n          sap.att('Name', 'SystolicArterialPressure')\n          sap.att('Unit', 'mmHg')\n          sap.att('Precision', 0)\n          const dap = data_req.ele('DataRequest')\n          dap.att('xsi:type', 'PhysiologyDataRequestData')\n          dap.att('Name', 'DiastolicArterialPressure')\n          dap.att('Unit', 'mmHg')\n          dap.att('Precision', 1)\n          const co = data_req.ele('DataRequest')\n          co.att('xsi:type', 'PhysiologyDataRequestData')\n          co.att('Name', 'CardiacOutput')\n          co.att('Unit', 'L/min')\n          co.att('Precision', 2)\n          const cvp = data_req.ele('DataRequest')\n          cvp.att('xsi:type', 'PhysiologyDataRequestData')\n          cvp.att('Name', 'CentralVenousPressure')\n          cvp.att('Unit', 'mmHg')\n          cvp.att('Precision', 2)\n          const hr = data_req.ele('DataRequest')\n          hr.att('xsi:type', 'PhysiologyDataRequestData')\n          hr.att('Name', 'HeartRate')\n          hr.att('Unit', '')\n          hr.att('Precision', 2)\n          const tv = data_req.ele('DataRequest')\n          tv.att('xsi:type', 'PhysiologyDataRequestData')\n          tv.att('Name', 'TidalVolume')\n          tv.att('Unit', 'mL')\n          tv.att('Precision', 3)\n          const rr = data_req.ele('DataRequest')\n          rr.att('xsi:type', 'PhysiologyDataRequestData')\n          rr.att('Name', 'RespirationRate')\n          rr.att('Unit', '1/min')\n          rr.att('Precision', 2)\n          const oxsat = data_req.ele('DataRequest')\n          oxsat.att('xsi:type', 'PhysiologyDataRequestData')\n          oxsat.att('Name', 'OxygenSaturation')\n          oxsat.att('Unit', 'unitless')\n          oxsat.att('Precision', 3)\n          const ct = data_req.ele('DataRequest')\n          ct.att('xsi:type', 'PhysiologyDataRequestData')\n          ct.att('Name', 'CoreTemperature')\n          ct.att('Unit', 'degC')\n          ct.att('Precision', 1)\n\n\n          for (var item2 in this.action) {\n            const act = xml.ele('Action')\n            if (this.action[item2]['type'] == 'Tension Pneumothorax') {\n              act.att('xsi:type', 'TensionPneumothoraxData')\n              act.att('Type', this.action[item2]['openclose'])\n              act.att('Side', this.action[item2]['side'])\n              const sev = act.ele('Severity')\n              sev.att('value', this.action[item2]['severity']) \n            }\n            else if (this.action[item2]['type'] == 'Hemorrhage') {\n              act.att('xsi:type', 'HemorrhageData')\n              act.att('Compartment', this.action[item2]['compartment'])\n              const initrate = act.ele('InitialRate')\n              initrate.att('value', this.action[item2]['hemrate'])\n              initrate.att('unit', 'mL/min')\n            }\n            else {\n            act.att('xsi:type', this.action[item2]['type'])\n            const sev = act.ele('Severity')\n            sev.att('value', this.action[item2]['severity']) \n            }\n          }\n          const time_act = xml.ele('Action')\n            time_act.att('xsi:type', 'AdvanceTimeData')\n            const time = time_act.ele('Time')\n            time.att('value', this.action_time)\n            time.att('unit', this.action_unit)\n\n          var xmlString = xml.end({\n            pretty: true\n          });\n          const blob = new Blob([xmlString], {\n            type: 'text/xml'\n          })\n          const link = document.createElement('a')\n          link.href = URL.createObjectURL(blob)\n          link.download = 'biogearsscenario.xml'\n          link.click()\n        },\n\n        saveBiogearsFiles() {\n          this.saveStateXML()\n          this.saveScenarioXML()\n        }\n\n    }, \n\n  }\n\n\n  </script>\n\n<style>\n.my-content {\n  margin-top: -50px; /* Adjust the top margin */\n  /* padding-left: 16px; Adjust the left padding */\n}\n\n@media (hover: hover) {\n  svg:hover {\n    cursor: pointer;\n  }\n  svg path:hover {\n    opacity: 0.8;\n  }\n}\n#HeadNeck.active {\n  fill: rgb(255, 0, 0);\n}\n#Chest.active {\n  fill: rgb(163, 0, 0);\n}\n#Extremities.active {\n  fill: rgb(89, 0, 0);\n}\n#Back.active {\n  fill: rgb(255, 138, 138);\n}\n#AbdomenPelvis.active {\n  fill: rgb(255, 135, 37);\n}\n.active {\n    fill: #0004ff;\n  }\n.noClick {\n  pointer-events: none;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}