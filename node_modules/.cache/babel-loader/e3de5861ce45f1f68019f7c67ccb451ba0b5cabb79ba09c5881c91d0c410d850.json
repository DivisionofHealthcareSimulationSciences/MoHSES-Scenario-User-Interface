{"ast":null,"code":"export default {\n  data: () => ({\n    chosenFile: null,\n    data: null\n  }),\n  methods: {\n    importFile() {\n      if (this.chosenFile === null) {\n        this.data = \"No File Chosen\";\n      } else {\n        var reader = new FileReader();\n        const file = Reflect.get(this.chosenFile, 'file');\n        console.log(this.chosenFile);\n        // Use the javascript reader object to load the contents\n        // of the file in the v-model prop\n        reader.readAsText(file);\n        reader.onload = () => {\n          this.data = reader.result;\n        };\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAqBA,eAAe;EACTA,IAAI,EAAE,OAAO;IACXC,UAAU,EAAE,IAAI;IAChBD,IAAI,EAAE;EACR,CAAC,CAAC;EACFE,OAAO,EAAE;IACPC,UAAU,GAAG;MAEf,IAAI,IAAI,CAACF,UAAS,KAAM,IAAI,EAAE;QAC5B,IAAI,CAACD,IAAG,GAAI,gBAAe;MAC7B,OAAO;QACL,IAAII,MAAK,GAAI,IAAIC,UAAU,EAAE;QAC7B,MAAMC,IAAG,GAAIC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,UAAU,EAAE,MAAM,CAAC;QACjDQ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,UAAU;QAC3B;QACA;QACAG,MAAM,CAACO,UAAU,CAACL,IAAI,CAAC;QACvBF,MAAM,CAACQ,MAAK,GAAI,MAAM;UACtB,IAAI,CAACZ,IAAG,GAAII,MAAM,CAACS,MAAM;QAG3B;MACF;IACJ;EACE;AACF","names":["data","chosenFile","methods","importFile","reader","FileReader","file","Reflect","get","console","log","readAsText","onload","result"],"sourceRoot":"","sources":["/Users/stlp/Desktop/Spring 2023/BIOEN 405/User Interface/MoHSES-Scenario-User-Interface/src/views/PlottingView.vue"],"sourcesContent":["<template>\n    <v-toolbar style=\"color: white\" color=\"#4b0082\">\n      <v-toolbar-title>BioGears Plotting Tool</v-toolbar-title>\n    </v-toolbar>\n    <v-main class=\"bg-grey-lighten-3\">\n      <v-container>\n        <v-card class=\"mt-n12\">\n          <v-card-text>\n            <p style=\"font-size: 20px\">Please upload your .CSV:</p>\n            <br>\n            <v-file-input v-model=\"chosenFile\"></v-file-input>\n            <v-spacer></v-spacer>\n            <v-btn @click=\"importFile\">Import File</v-btn>\n            <p>{{ this.data }}</p>\n        </v-card-text>\n        </v-card>\n      </v-container>\n    </v-main>\n  </template>\n  \n<script>\nexport default {\n      data: () => ({\n        chosenFile: null,\n        data: null\n      }),\n      methods: {\n        importFile() {\n      \n      if (this.chosenFile === null) {\n        this.data = \"No File Chosen\"\n      } else {\n        var reader = new FileReader();\n        const file = Reflect.get(this.chosenFile, 'file');\n        console.log(this.chosenFile)\n        // Use the javascript reader object to load the contents\n        // of the file in the v-model prop\n        reader.readAsText(file);\n        reader.onload = () => {\n        this.data = reader.result;\n\n        \n      }\n    }\n}\n  }\n}\n</script>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}