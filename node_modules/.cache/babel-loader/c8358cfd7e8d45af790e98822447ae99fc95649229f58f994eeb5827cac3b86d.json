{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_select = _resolveComponent(\"v-select\");\n  const _component_v_expansion_panel_title = _resolveComponent(\"v-expansion-panel-title\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_expansion_panel_text = _resolveComponent(\"v-expansion-panel-text\");\n  const _component_v_combobox = _resolveComponent(\"v-combobox\");\n  const _component_v_expansion_panel = _resolveComponent(\"v-expansion-panel\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_checkbox_btn = _resolveComponent(\"v-checkbox-btn\");\n  const _component_v_file_input = _resolveComponent(\"v-file-input\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_expansion_panels = _resolveComponent(\"v-expansion-panels\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_main = _resolveComponent(\"v-main\");\n  return _openBlock(), _createBlock(_component_v_main, null, {\n    default: _withCtx(() => [_createVNode(_component_v_row, {\n      class: \"justify-center\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"12\",\n        sm: \"8\",\n        md: \"6\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_form, {\n          ref: \"form\",\n          modelValue: _ctx.valid,\n          \"onUpdate:modelValue\": _cache[32] || (_cache[32] = $event => _ctx.valid = $event),\n          \"lazy-validation\": \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_select, {\n            modelValue: _ctx.patient_props['type'],\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.patient_props['type'] = $event),\n            items: _ctx.types,\n            rules: [v => !!v || 'Type is required'],\n            label: \"Instructor Type\",\n            required: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"rules\"]), _createVNode(_component_v_expansion_panels, {\n            modelValue: _ctx.expanded,\n            \"onUpdate:modelValue\": _cache[31] || (_cache[31] = $event => _ctx.expanded = $event)\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_expansion_panel, null, {\n              default: _withCtx(() => [_createVNode(_component_v_expansion_panel_title, null, {\n                default: _withCtx(() => [_createTextVNode(\" Scenario Properties \")]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.scenario_props['name'],\n                  \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.scenario_props['name'] = $event),\n                  label: \"Scenario Name\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                  modelValue: _ctx.scenario_props['authors'],\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.scenario_props['authors'] = $event),\n                  label: \"Authors\",\n                  required: \"\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _createVNode(_component_v_expansion_panel, null, {\n              default: _withCtx(() => [_createVNode(_component_v_expansion_panel_title, null, {\n                default: _withCtx(() => [_createTextVNode(\" Patient Properties \")]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.patient_props['name'],\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.patient_props['name'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Name\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.patient_props['title'],\n                  \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.patient_props['title'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Title or Rank\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.patient_props['age'],\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.patient_props['age'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Age\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_select, {\n                  modelValue: _ctx.patient_props['gender'],\n                  \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.patient_props['gender'] = $event),\n                  items: _ctx.genders,\n                  rules: [v => !!v || 'Gender is required'],\n                  label: \"Gender\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"rules\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.patient_props['height'],\n                  \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.patient_props['height'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Height [cm]\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.patient_props['weight'],\n                  \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => _ctx.patient_props['weight'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Weight [kg]\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _createVNode(_component_v_expansion_panel, null, {\n              default: _withCtx(() => [_createVNode(_component_v_expansion_panel_title, null, {\n                default: _withCtx(() => [_createTextVNode(\" Environment Properties \")]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_textarea, {\n                  modelValue: _ctx.environment_props['surrounding'],\n                  \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => _ctx.environment_props['surrounding'] = $event),\n                  label: \"Surrounding\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.environment_props['altitude'],\n                  \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => _ctx.environment_props['altitude'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Altitude or Elevation\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.environment_props['temperature'],\n                  \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => _ctx.environment_props['temperature'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Temperature [C]\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.environment_props['pressure'],\n                  \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => _ctx.environment_props['pressure'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Pressure [mmHg]\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.environment_props['co2'],\n                  \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => _ctx.environment_props['co2'] = $event),\n                  rules: _ctx.nameRules,\n                  label: \"Ambient CO2 [fraction]\",\n                  required: \"\"\n                }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                  modelValue: _ctx.environment_props['sounds'],\n                  \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => _ctx.environment_props['sounds'] = $event),\n                  label: \"Ambient Sounds\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                  modelValue: _ctx.environment_props['smells'],\n                  \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => _ctx.environment_props['smells'] = $event),\n                  label: \"Smells\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _createVNode(_component_v_expansion_panel, null, {\n              default: _withCtx(() => [_createVNode(_component_v_expansion_panel_title, null, {\n                default: _withCtx(() => [_createTextVNode(\" Educational Encounter Properties \")]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_textarea, {\n                  modelValue: _ctx.ed_props['instruction'],\n                  \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => _ctx.ed_props['instruction'] = $event),\n                  label: \"Instructions\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_textarea, {\n                  modelValue: _ctx.ed_props['narrative'],\n                  \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => _ctx.ed_props['narrative'] = $event),\n                  label: \"Narrative\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.ed_props['learnerCount'],\n                  \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => _ctx.ed_props['learnerCount'] = $event),\n                  label: \"Number of Learners\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.ed_props['role'],\n                  \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => _ctx.ed_props['role'] = $event),\n                  label: \"Roles\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                  modelValue: _ctx.ed_props['setup_checklist'],\n                  \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => _ctx.ed_props['setup_checklist'] = $event),\n                  label: \"Setup Checklist\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                  modelValue: _ctx.ed_props['equipment'],\n                  \"onUpdate:modelValue\": _cache[21] || (_cache[21] = $event => _ctx.ed_props['equipment'] = $event),\n                  label: \"Equipment\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                  modelValue: _ctx.ed_props['supplies'],\n                  \"onUpdate:modelValue\": _cache[22] || (_cache[22] = $event => _ctx.ed_props['supplies'] = $event),\n                  label: \"Supplies\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.ed_props['duration'],\n                  \"onUpdate:modelValue\": _cache[23] || (_cache[23] = $event => _ctx.ed_props['duration'] = $event),\n                  label: \"Estimated Duration\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.ed_props['scenario_type'],\n                  \"onUpdate:modelValue\": _cache[24] || (_cache[24] = $event => _ctx.ed_props['scenario_type'] = $event),\n                  label: \"Scenario Type\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.ed_props['assessment_type'],\n                  \"onUpdate:modelValue\": _cache[25] || (_cache[25] = $event => _ctx.ed_props['assessment_type'] = $event),\n                  label: \"Assessment Type\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                  modelValue: _ctx.ed_props['learner_group'],\n                  \"onUpdate:modelValue\": _cache[26] || (_cache[26] = $event => _ctx.ed_props['learner_group'] = $event),\n                  label: \"Learner Group\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                  modelValue: _ctx.ed_props['objectives'],\n                  \"onUpdate:modelValue\": _cache[27] || (_cache[27] = $event => _ctx.ed_props['objectives'] = $event),\n                  label: \"Learning Objectives\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                  modelValue: _ctx.ed_props['task'],\n                  \"onUpdate:modelValue\": _cache[28] || (_cache[28] = $event => _ctx.ed_props['task'] = $event),\n                  label: \"Task Descriptions\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                  modelValue: _ctx.ed_props['conditions'],\n                  \"onUpdate:modelValue\": _cache[29] || (_cache[29] = $event => _ctx.ed_props['conditions'] = $event),\n                  label: \"Performance Conditions\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                  modelValue: _ctx.ed_props['exit_criteria'],\n                  \"onUpdate:modelValue\": _cache[30] || (_cache[30] = $event => _ctx.ed_props['exit_criteria'] = $event),\n                  label: \"Exit Criteria\",\n                  multiple: \"\",\n                  chips: \"\",\n                  hint: \"Click \\\"enter\\\" to add multiple items\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }), _createVNode(_component_v_expansion_panel, null, {\n              default: _withCtx(() => [_createVNode(_component_v_expansion_panel_title, null, {\n                default: _withCtx(() => [_createTextVNode(\" Capabilities \")]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel_text, null, {\n                default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.capability, (exp, index) => {\n                  return _openBlock(), _createElementBlock(\"div\", {\n                    key: index\n                  }, [_createVNode(_component_v_checkbox_btn, {\n                    modelValue: exp.required,\n                    \"onUpdate:modelValue\": $event => exp.required = $event,\n                    label: \"Required\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_v_text_field, {\n                    modelValue: exp.name,\n                    \"onUpdate:modelValue\": $event => exp.name = $event,\n                    label: \"Capability Name\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_v_text_field, {\n                    modelValue: exp.data,\n                    \"onUpdate:modelValue\": $event => exp.data = $event,\n                    label: \"Configuration Data\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_v_text_field, {\n                    modelValue: exp.propertyName,\n                    \"onUpdate:modelValue\": $event => exp.propertyName = $event,\n                    label: \"Property Name\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_v_select, {\n                    modelValue: exp.dataType,\n                    \"onUpdate:modelValue\": $event => exp.dataType = $event,\n                    label: \"Data Type\",\n                    items: ['string', 'number', 'boolean', 'option']\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_v_file_input, {\n                    modelValue: exp.value,\n                    \"onUpdate:modelValue\": $event => exp.value = $event,\n                    label: \"Value\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_v_btn, {\n                    onClick: $event => $options.removeCapability(index)\n                  }, {\n                    default: _withCtx(() => [_createTextVNode(\"Remove Capability\")]),\n                    _: 2 /* DYNAMIC */\n                  }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _hoisted_1, _hoisted_2]);\n                }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_v_btn, {\n                  onClick: $options.addCapability\n                }, {\n                  default: _withCtx(() => [_createTextVNode(\"Add Capability\")]),\n                  _: 1 /* STABLE */\n                }, 8 /* PROPS */, [\"onClick\"])]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"]), _hoisted_3, _hoisted_4, _createVNode(_component_v_btn, {\n            disabled: !_ctx.valid,\n            color: \"success\",\n            class: \"mr-4\",\n            onClick: $options.saveXML\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" Submit \")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"disabled\", \"onClick\"]), _createVNode(_component_v_btn, {\n            color: \"error\",\n            class: \"mr-4\",\n            onClick: $options.reset\n          }, {\n            default: _withCtx(() => [_createTextVNode(\" Reset Form \")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","_createBlock","_component_v_main","_createVNode","_component_v_row","class","_component_v_col","cols","sm","md","_component_v_form","ref","_ctx","_component_v_select","items","rules","v","label","required","_component_v_expansion_panels","_component_v_expansion_panel","_component_v_expansion_panel_title","_component_v_expansion_panel_text","_component_v_text_field","_component_v_combobox","multiple","chips","hint","_component_v_textarea","_createElementBlock","_Fragment","exp","index","key","_component_v_checkbox_btn","name","data","propertyName","dataType","_component_v_file_input","value","_component_v_btn","onClick","$options","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","disabled","color"],"sourceRoot":"","sources":["C:\\Users\\sanik\\Downloads\\capstone\\MoHSES-Scenario-User-Interface\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\r\n<v-main>\r\n  <v-row class=\"justify-center\">\r\n      <v-col cols=\"12\" sm=\"8\" md=\"6\">\r\n      <v-form\r\n        ref=\"form\"\r\n        v-model=\"valid\"\r\n        lazy-validation\r\n      >\r\n        \r\n        <v-select\r\n          v-model=\"patient_props['type']\"\r\n          :items=\"types\"\r\n          :rules=\"[v => !!v || 'Type is required']\"\r\n          label=\"Instructor Type\"\r\n          required\r\n        ></v-select>\r\n\r\n        <v-expansion-panels v-model=\"expanded\">\r\n\r\n          <v-expansion-panel>\r\n          <v-expansion-panel-title>\r\n            Scenario Properties\r\n          </v-expansion-panel-title>\r\n          \r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"scenario_props['name']\"\r\n              label=\"Scenario Name\"\r\n              required\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-combobox\r\n              v-model=\"scenario_props['authors']\"\r\n              label=\"Authors\"\r\n              required\r\n              multiple\r\n              chips\r\n              hint='Click \"enter\" to add multiple items'\r\n            ></v-combobox>\r\n          </v-expansion-panel-text>\r\n\r\n          </v-expansion-panel>\r\n\r\n          <v-expansion-panel>\r\n          <v-expansion-panel-title>\r\n            Patient Properties\r\n          </v-expansion-panel-title>\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"patient_props['name']\"\r\n              :rules=\"nameRules\"\r\n              label=\"Name\"\r\n              required\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"patient_props['title']\"\r\n              :rules=\"nameRules\"\r\n              label=\"Title or Rank\"\r\n              required\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"patient_props['age']\"\r\n              :rules=\"nameRules\"\r\n              label=\"Age\"\r\n              required\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-select\r\n              v-model=\"patient_props['gender']\"\r\n              :items=\"genders\"\r\n              :rules=\"[v => !!v || 'Gender is required']\"\r\n              label=\"Gender\"\r\n              required\r\n            ></v-select>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"patient_props['height']\"\r\n              :rules=\"nameRules\"\r\n              label=\"Height [cm]\"\r\n              required\r\n              ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"patient_props['weight']\"\r\n              :rules=\"nameRules\"\r\n              label=\"Weight [kg]\"\r\n              required\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n          </v-expansion-panel>\r\n\r\n          <v-expansion-panel>\r\n          <v-expansion-panel-title>\r\n            Environment Properties\r\n          </v-expansion-panel-title>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-textarea\r\n              v-model=\"environment_props['surrounding']\"\r\n              label=\"Surrounding\"\r\n            ></v-textarea>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"environment_props['altitude']\"\r\n              :rules=\"nameRules\"\r\n              label=\"Altitude or Elevation\"\r\n              required\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"environment_props['temperature']\"\r\n              :rules=\"nameRules\"\r\n              label=\"Temperature [C]\"\r\n              required\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"environment_props['pressure']\"\r\n              :rules=\"nameRules\"\r\n              label=\"Pressure [mmHg]\"\r\n              required\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"environment_props['co2']\"\r\n              :rules=\"nameRules\"\r\n              label=\"Ambient CO2 [fraction]\"\r\n              required\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-combobox\r\n              v-model=\"environment_props['sounds']\"\r\n              label=\"Ambient Sounds\"\r\n              multiple\r\n              chips\r\n              hint='Click \"enter\" to add multiple items'\r\n            ></v-combobox>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-combobox\r\n              v-model=\"environment_props['smells']\"\r\n              label=\"Smells\"\r\n              multiple\r\n              chips\r\n              hint='Click \"enter\" to add multiple items'\r\n            ></v-combobox>\r\n          </v-expansion-panel-text>\r\n\r\n          </v-expansion-panel>\r\n\r\n          <v-expansion-panel>\r\n          <v-expansion-panel-title>\r\n            Educational Encounter Properties\r\n          </v-expansion-panel-title>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-textarea\r\n              v-model=\"ed_props['instruction']\"\r\n              label=\"Instructions\"\r\n            ></v-textarea>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-textarea\r\n              v-model=\"ed_props['narrative']\"\r\n              label=\"Narrative\"\r\n            ></v-textarea>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"ed_props['learnerCount']\"\r\n              label=\"Number of Learners\"\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"ed_props['role']\"\r\n              label=\"Roles\"\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-combobox\r\n              v-model=\"ed_props['setup_checklist']\"\r\n              label=\"Setup Checklist\"\r\n              multiple\r\n              chips\r\n              hint='Click \"enter\" to add multiple items'\r\n            ></v-combobox>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-combobox\r\n              v-model=\"ed_props['equipment']\"\r\n              label=\"Equipment\"\r\n              multiple\r\n              chips\r\n              hint='Click \"enter\" to add multiple items'\r\n            ></v-combobox>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-combobox\r\n              v-model=\"ed_props['supplies']\"\r\n              label=\"Supplies\"\r\n              multiple\r\n              chips\r\n              hint='Click \"enter\" to add multiple items'\r\n            ></v-combobox>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"ed_props['duration']\"\r\n              label=\"Estimated Duration\"\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"ed_props['scenario_type']\"\r\n              label=\"Scenario Type\"\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"ed_props['assessment_type']\"\r\n              label=\"Assessment Type\"\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-text-field\r\n              v-model=\"ed_props['learner_group']\"\r\n              label=\"Learner Group\"\r\n            ></v-text-field>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-combobox\r\n              v-model=\"ed_props['objectives']\"\r\n              label=\"Learning Objectives\"\r\n              multiple\r\n              chips\r\n              hint='Click \"enter\" to add multiple items'\r\n            ></v-combobox>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-combobox\r\n              v-model=\"ed_props['task']\"\r\n              label=\"Task Descriptions\"\r\n              multiple\r\n              chips\r\n              hint='Click \"enter\" to add multiple items'\r\n            ></v-combobox>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-combobox\r\n              v-model=\"ed_props['conditions']\"\r\n              label=\"Performance Conditions\"\r\n              multiple\r\n              chips\r\n              hint='Click \"enter\" to add multiple items'\r\n            ></v-combobox>\r\n          </v-expansion-panel-text>\r\n\r\n          <v-expansion-panel-text>\r\n            <v-combobox\r\n              v-model=\"ed_props['exit_criteria']\"\r\n              label=\"Exit Criteria\"\r\n              multiple\r\n              chips\r\n              hint='Click \"enter\" to add multiple items'\r\n            ></v-combobox>\r\n          </v-expansion-panel-text>\r\n          </v-expansion-panel>\r\n\r\n          <v-expansion-panel>\r\n          <v-expansion-panel-title>\r\n            Capabilities\r\n          </v-expansion-panel-title>\r\n          <v-expansion-panel-text>\r\n            <div v-for=\"(exp, index) in capability\" :key=\"index\">\r\n              <v-checkbox-btn v-model=\"exp.required\" label=\"Required\"></v-checkbox-btn>\r\n              <v-text-field v-model=\"exp.name\" label=\"Capability Name\"></v-text-field>\r\n              <v-text-field v-model=\"exp.data\" label=\"Configuration Data\"></v-text-field>\r\n              <v-text-field v-model=\"exp.propertyName\" label=\"Property Name\"></v-text-field>\r\n              <v-select v-model=\"exp.dataType\" label=\"Data Type\" :items=\"['string', 'number', 'boolean', 'option']\"></v-select>\r\n              <v-file-input v-model=\"exp.value\" label=\"Value\"></v-file-input>\r\n              <v-btn @click=\"removeCapability(index)\">Remove Capability</v-btn>\r\n              <br>\r\n              <br>\r\n            </div>\r\n            <v-btn @click=\"addCapability\">Add Capability</v-btn>\r\n          </v-expansion-panel-text>\r\n          </v-expansion-panel>\r\n\r\n\r\n        </v-expansion-panels>\r\n        <br>\r\n        <br>\r\n\r\n\r\n        <v-btn\r\n          :disabled=\"!valid\"\r\n          color=\"success\"\r\n          class=\"mr-4\"\r\n          @click=\"saveXML\"\r\n        >\r\n          Submit\r\n        </v-btn>\r\n\r\n        <v-btn\r\n          color=\"error\"\r\n          class=\"mr-4\"\r\n          @click=\"reset\"\r\n        >\r\n          Reset Form\r\n        </v-btn>\r\n\r\n      </v-form>\r\n      </v-col>\r\n      </v-row>\r\n\r\n    </v-main>\r\n</template>\r\n\r\n<script>\r\n  import xmlbuilder from 'xmlbuilder'\r\n\r\n  export default {\r\n    data: () => ({\r\n      drawer: false,\r\n      valid: true,\r\n      expanded: [0],\r\n      capability: [\r\n        { required: [],\r\n          name: [],\r\n          data: [],\r\n          propertyName: [],\r\n          dataType: [],\r\n          value: [] },\r\n      ],\r\n      scenario_props: {\r\n        \"name\":[],\r\n        \"authors\":[]\r\n      },\r\n      patient_props: {\r\n        \"type\": [],\r\n        \"name\": [],\r\n        \"title\": [],\r\n        \"age\": [],\r\n        \"gender\": [],\r\n        \"height\": [],\r\n        \"weight\": [],\r\n      },\r\n      environment_props: {\r\n        \"surrounding\": [],\r\n        \"altitude\":[],\r\n        \"temperature\":[],\r\n        \"pressure\":[],\r\n        \"co2\":[],\r\n        \"sounds\":[],\r\n        \"smells\":[]\r\n      },\r\n      ed_props: {\r\n        'instruction':[],\r\n        'narrative':[],\r\n        'learnerCount':[],\r\n        'role':[],\r\n        'setup_checklist':[],\r\n        'equipment':[],\r\n        'supplies':[],\r\n        'duration':[],\r\n        'scenario_type':[],\r\n        'assessment_type':[],\r\n        'learner_group':[],\r\n        'objectives':[],\r\n        'task':[],\r\n        'conditions':[],\r\n        'exit_criteria':[]\r\n      },\r\n      nameRules: [\r\n        v => !!v || 'Name is required',\r\n      ],\r\n      genders: [\r\n        'Male',\r\n        'Female'\r\n      ],\r\n      types: [\r\n        'Medical Doctor',\r\n        'Paramedic',\r\n        'Nurse'\r\n      ],\r\n    }),\r\n    methods: {\r\n      addCapability() {\r\n        this.capability.push({\r\n          required: '',\r\n          name: '',\r\n          data: '',\r\n          propertyName: '',\r\n          dataType: '',\r\n          value: ''\r\n          });\r\n      },\r\n      removeCapability(index) {\r\n        this.capability.splice(index, 1);\r\n      },\r\n      validate () {\r\n        this.$refs.form.validate()\r\n      },\r\n      reset () {\r\n        this.$refs.form.reset()\r\n      },\r\n      saveXML () {\r\n        const xml = xmlbuilder.create('AMMConfiguration', {encoding: 'UTF-8'})\r\n          xml.att({'xmlns:xsd':'http://www.w3.org/2001/XMLSchema',\r\n                'xmlns:xsi':'http://www.w3.org/2001/XMLSchema-instance'\r\n          })\r\n          const metadata = xml.ele('metadata')\r\n            for (var key1 in this.patient_props) {\r\n              if (Array.isArray(this.patient_props[key1])) {\r\n                for (var item1 in this.patient_props[key1]) {\r\n                  metadata.ele(key1, this.patient_props[key1][item1])\r\n                }\r\n              } else {\r\n                metadata.ele(key1, this.patient_props[key1])\r\n              }\r\n            }\r\n  \r\n            for (var key2 in this.environment_props) {\r\n              if (Array.isArray(this.environment_props[key2])) {\r\n                for (var item2 in this.environment_props[key2]) {\r\n                  metadata.ele(key2, this.environment_props[key2][item2])\r\n                }\r\n              } else {\r\n                metadata.ele(key2, this.environment_props[key2])\r\n              }\r\n            }\r\n            for (var key3 in this.ed_props) {\r\n              if (Array.isArray(this.ed_props[key3])) {\r\n                for (var item3 in this.ed_props[key3]) {\r\n                  metadata.ele(key3, this.ed_props[key3][item3])\r\n                }\r\n              } else {\r\n                metadata.ele(key3, this.ed_props[key3])\r\n              }\r\n            }\r\n            for (var item4 in this.capability) {\r\n              for (var key4 in this.capability[item4]) {\r\n                  metadata.ele(key4, this.capability[item4][key4])\r\n                }\r\n            }\r\n        var xmlString = xml.end({ pretty: true });\r\n        const blob = new Blob([xmlString], {type:'text/xml'})\r\n        const link = document.createElement('a')\r\n        link.href = URL.createObjectURL(blob)\r\n        link.download = 'data.xml'\r\n        link.click()\r\n      }\r\n    }\r\n  }\r\n  </script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}