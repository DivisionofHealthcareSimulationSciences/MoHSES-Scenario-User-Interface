{"ast":null,"code":"import { resolveComponent as _resolveComponent, withModifiers as _withModifiers, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_app_bar_nav_icon = _resolveComponent(\"v-app-bar-nav-icon\");\n  const _component_v_app_bar_title = _resolveComponent(\"v-app-bar-title\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_app_bar = _resolveComponent(\"v-app-bar\");\n  const _component_v_list_item = _resolveComponent(\"v-list-item\");\n  const _component_v_list = _resolveComponent(\"v-list\");\n  const _component_v_navigation_drawer = _resolveComponent(\"v-navigation-drawer\");\n  const _component_v_select = _resolveComponent(\"v-select\");\n  const _component_v_expansion_panel_title = _resolveComponent(\"v-expansion-panel-title\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_expansion_panel_text = _resolveComponent(\"v-expansion-panel-text\");\n  const _component_v_expansion_panel = _resolveComponent(\"v-expansion-panel\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_combobox = _resolveComponent(\"v-combobox\");\n  const _component_v_expansion_panels = _resolveComponent(\"v-expansion-panels\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_main = _resolveComponent(\"v-main\");\n  const _component_v_app = _resolveComponent(\"v-app\");\n  return _openBlock(), _createBlock(_component_v_app, null, {\n    default: _withCtx(() => [_createVNode(_component_v_app_bar, {\n      absolute: \"\",\n      dark: \"\",\n      \"shrink-on-scroll\": \"\",\n      \"scroll-target\": \"#scrolling-techniques-2\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_app_bar_nav_icon, {\n        onClick: _cache[0] || (_cache[0] = _withModifiers($event => _ctx.drawer = !_ctx.drawer, [\"stop\"]))\n      }), _createVNode(_component_v_app_bar_title, null, {\n        default: _withCtx(() => [_createTextVNode(\"CRESTing Healthcare Education\")]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n        icon: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_icon, null, {\n          default: _withCtx(() => [_createTextVNode(\"mdi-magnify\")]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_btn, {\n        icon: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_icon, null, {\n          default: _withCtx(() => [_createTextVNode(\"mdi-heart\")]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_btn, {\n        icon: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_icon, null, {\n          default: _withCtx(() => [_createTextVNode(\"mdi-dots-vertical\")]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _hoisted_1, _createVNode(_component_v_navigation_drawer, {\n      modelValue: _ctx.drawer,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.drawer = $event),\n      absolute: \"\",\n      bottom: \"\",\n      temporary: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_list, {\n        nav: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_list_item, {\n          title: \"About\",\n          to: \"/dashboard\"\n        })]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_main, null, {\n      default: _withCtx(() => [_createVNode(_component_v_row, {\n        class: \"justify-center\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_col, {\n          cols: \"12\",\n          sm: \"8\",\n          md: \"6\"\n        }, {\n          default: _withCtx(() => [_createCommentVNode(\" v-if=\\\"type === 'Medical Doctor' || type === 'Paramedic'\\\" \"), _createVNode(_component_v_form, {\n            ref: \"form\",\n            modelValue: _ctx.valid,\n            \"onUpdate:modelValue\": _cache[32] || (_cache[32] = $event => _ctx.valid = $event),\n            \"lazy-validation\": \"\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_select, {\n              modelValue: _ctx.patient_props['type'],\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.patient_props['type'] = $event),\n              items: _ctx.types,\n              rules: [v => !!v || 'Type is required'],\n              label: \"Instructor Type\",\n              required: \"\"\n            }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"rules\"]), _createVNode(_component_v_expansion_panels, {\n              modelValue: _ctx.expanded,\n              \"onUpdate:modelValue\": _cache[31] || (_cache[31] = $event => _ctx.expanded = $event)\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_expansion_panel, null, {\n                default: _withCtx(() => [_createVNode(_component_v_expansion_panel_title, null, {\n                  default: _withCtx(() => [_createTextVNode(\" Patient Properties \")]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_props['name'],\n                    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.patient_props['name'] = $event),\n                    rules: _ctx.nameRules,\n                    label: \"Name\",\n                    required: \"\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_props['title'],\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.patient_props['title'] = $event),\n                    rules: _ctx.nameRules,\n                    label: \"Title or Rank\",\n                    required: \"\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_props['age'],\n                    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.patient_props['age'] = $event),\n                    rules: _ctx.nameRules,\n                    label: \"Age\",\n                    required: \"\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_select, {\n                    modelValue: _ctx.patient_props['gender'],\n                    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.patient_props['gender'] = $event),\n                    items: _ctx.genders,\n                    rules: [v => !!v || 'Gender is required'],\n                    label: \"Gender\",\n                    required: \"\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"items\", \"rules\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_props['height'],\n                    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.patient_props['height'] = $event),\n                    rules: _ctx.nameRules,\n                    label: \"Height [cm]\",\n                    required: \"\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.patient_props['weight'],\n                    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => _ctx.patient_props['weight'] = $event),\n                    rules: _ctx.nameRules,\n                    label: \"Weight [kg]\",\n                    required: \"\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel, null, {\n                default: _withCtx(() => [_createVNode(_component_v_expansion_panel_title, null, {\n                  default: _withCtx(() => [_createTextVNode(\" Environment Properties \")]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_textarea, {\n                    modelValue: _ctx.environment_props['surrounding'],\n                    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => _ctx.environment_props['surrounding'] = $event),\n                    label: \"Surrounding\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.environment_props['altitude'],\n                    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => _ctx.environment_props['altitude'] = $event),\n                    rules: _ctx.nameRules,\n                    label: \"Altitude or Elevation\",\n                    required: \"\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.environment_props['temperature'],\n                    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => _ctx.environment_props['temperature'] = $event),\n                    rules: _ctx.nameRules,\n                    label: \"Temperature [C]\",\n                    required: \"\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.environment_props['pressure'],\n                    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => _ctx.environment_props['pressure'] = $event),\n                    rules: _ctx.nameRules,\n                    label: \"Pressure [mmHg]\",\n                    required: \"\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.environment_props['co2'],\n                    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => _ctx.environment_props['co2'] = $event),\n                    rules: _ctx.nameRules,\n                    label: \"Ambient CO2 [fraction]\",\n                    required: \"\"\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                    modelValue: _ctx.environment_props['sounds'],\n                    \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => _ctx.environment_props['sounds'] = $event),\n                    label: \"Ambient Sounds\",\n                    multiple: \"\",\n                    chips: \"\",\n                    hint: \"Click \\\"enter\\\" to add multiple items\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                    modelValue: _ctx.environment_props['smells'],\n                    \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => _ctx.environment_props['smells'] = $event),\n                    label: \"Smells\",\n                    multiple: \"\",\n                    chips: \"\",\n                    hint: \"Click \\\"enter\\\" to add multiple items\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel, null, {\n                default: _withCtx(() => [_createVNode(_component_v_expansion_panel_title, null, {\n                  default: _withCtx(() => [_createTextVNode(\" Educational Encounter Properties \")]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_textarea, {\n                    modelValue: _ctx.ed_props['instruction'],\n                    \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => _ctx.ed_props['instruction'] = $event),\n                    label: \"Instructions\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_textarea, {\n                    modelValue: _ctx.ed_props['narrative'],\n                    \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => _ctx.ed_props['narrative'] = $event),\n                    label: \"Narrative\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.ed_props['learnerCount'],\n                    \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => _ctx.ed_props['learnerCount'] = $event),\n                    label: \"Number of Learners\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.ed_props['role'],\n                    \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => _ctx.ed_props['role'] = $event),\n                    label: \"Roles\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                    modelValue: _ctx.ed_props['setup_checklist'],\n                    \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => _ctx.ed_props['setup_checklist'] = $event),\n                    label: \"Setup Checklist\",\n                    multiple: \"\",\n                    chips: \"\",\n                    hint: \"Click \\\"enter\\\" to add multiple items\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                    modelValue: _ctx.ed_props['equipment'],\n                    \"onUpdate:modelValue\": _cache[21] || (_cache[21] = $event => _ctx.ed_props['equipment'] = $event),\n                    label: \"Equipment\",\n                    multiple: \"\",\n                    chips: \"\",\n                    hint: \"Click \\\"enter\\\" to add multiple items\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                    modelValue: _ctx.ed_props['supplies'],\n                    \"onUpdate:modelValue\": _cache[22] || (_cache[22] = $event => _ctx.ed_props['supplies'] = $event),\n                    label: \"Supplies\",\n                    multiple: \"\",\n                    chips: \"\",\n                    hint: \"Click \\\"enter\\\" to add multiple items\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.ed_props['duration'],\n                    \"onUpdate:modelValue\": _cache[23] || (_cache[23] = $event => _ctx.ed_props['duration'] = $event),\n                    label: \"Estimated Duration\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.ed_props['scenario_type'],\n                    \"onUpdate:modelValue\": _cache[24] || (_cache[24] = $event => _ctx.ed_props['scenario_type'] = $event),\n                    label: \"Scenario Type\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.ed_props['assessment_type'],\n                    \"onUpdate:modelValue\": _cache[25] || (_cache[25] = $event => _ctx.ed_props['assessment_type'] = $event),\n                    label: \"Assessment Type\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_text_field, {\n                    modelValue: _ctx.ed_props['learner_group'],\n                    \"onUpdate:modelValue\": _cache[26] || (_cache[26] = $event => _ctx.ed_props['learner_group'] = $event),\n                    label: \"Learner Group\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                    modelValue: _ctx.ed_props['objectives'],\n                    \"onUpdate:modelValue\": _cache[27] || (_cache[27] = $event => _ctx.ed_props['objectives'] = $event),\n                    label: \"Learning Objectives\",\n                    multiple: \"\",\n                    chips: \"\",\n                    hint: \"Click \\\"enter\\\" to add multiple items\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                    modelValue: _ctx.ed_props['task'],\n                    \"onUpdate:modelValue\": _cache[28] || (_cache[28] = $event => _ctx.ed_props['task'] = $event),\n                    label: \"Task Descriptions\",\n                    multiple: \"\",\n                    chips: \"\",\n                    hint: \"Click \\\"enter\\\" to add multiple items\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                    modelValue: _ctx.ed_props['conditions'],\n                    \"onUpdate:modelValue\": _cache[29] || (_cache[29] = $event => _ctx.ed_props['conditions'] = $event),\n                    label: \"Performance Conditions\",\n                    multiple: \"\",\n                    chips: \"\",\n                    hint: \"Click \\\"enter\\\" to add multiple items\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text, null, {\n                  default: _withCtx(() => [_createVNode(_component_v_combobox, {\n                    modelValue: _ctx.ed_props['exit_criteria'],\n                    \"onUpdate:modelValue\": _cache[30] || (_cache[30] = $event => _ctx.ed_props['exit_criteria'] = $event),\n                    label: \"Exit Criteria\",\n                    multiple: \"\",\n                    chips: \"\",\n                    hint: \"Click \\\"enter\\\" to add multiple items\"\n                  }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                  _: 1 /* STABLE */\n                })]),\n\n                _: 1 /* STABLE */\n              }), _createVNode(_component_v_expansion_panel, null, {\n                default: _withCtx(() => [_createVNode(_component_v_expansion_panel_title, null, {\n                  default: _withCtx(() => [_createTextVNode(\" Capabilities \")]),\n                  _: 1 /* STABLE */\n                }), _createVNode(_component_v_expansion_panel_text)]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"modelValue\"]), _hoisted_2, _hoisted_3, _createVNode(_component_v_btn, {\n              disabled: !_ctx.valid,\n              color: \"success\",\n              class: \"mr-4\",\n              onClick: $options.saveXML\n            }, {\n              default: _withCtx(() => [_createTextVNode(\" Submit \")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"disabled\", \"onClick\"]), _createVNode(_component_v_btn, {\n              color: \"error\",\n              class: \"mr-4\",\n              onClick: $options.reset\n            }, {\n              default: _withCtx(() => [_createTextVNode(\" Reset Form \")]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onClick\"])]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";gCA2BIA,oBAAI;gCAgTAA,oBAAI;gCACJA,oBAAI;;;;;;;;;;;;;;;;;;;;;;;;;uBA3UVC,aAoWQC;sBAnWN,MAwBY,CAxBZC,aAwBYC;MAvBVC,QAAQ,EAAR,EAAQ;MACRC,IAAI,EAAJ,EAAI;MACJ,kBAAgB,EAAhB,EAAgB;MAChB,eAAa,EAAC;;wBAGd,MAAwE,CAAxEH,aAAwEI;QAAnDC,OAAK,qDAAOC,WAAM,IAAIA,WAAM;UAEjDN,aAAgEO;0BAA/C,MAA6B,kBAA7B,+BAA6B;;UAE9CP,aAAqBQ,sBAErBR,aAEQS;QAFDC,IAAI,EAAJ;MAAI;0BACT,MAA4B,CAA5BV,aAA4BW;4BAApB,MAAW,kBAAX,aAAW;;;;;UAGrBX,aAEQS;QAFDC,IAAI,EAAJ;MAAI;0BACT,MAA0B,CAA1BV,aAA0BW;4BAAlB,MAAS,kBAAT,WAAS;;;;;UAGnBX,aAEQS;QAFDC,IAAI,EAAJ;MAAI;0BACT,MAAkC,CAAlCV,aAAkCW;4BAA1B,MAAiB,kBAAjB,mBAAiB;;;;;;;;QAG7BC,UAAI,EAEJZ,aASsBa;kBARXP,WAAM;iEAANA,WAAM;MACfJ,QAAQ,EAAR,EAAQ;MACRY,MAAM,EAAN,EAAM;MACNC,SAAS,EAAT;;wBAEA,MAES,CAFTf,aAESgB;QAFDC,GAAG,EAAH;MAAG;0BACT,MAAyD,CAAzDjB,aAAyDkB;UAA5CC,KAAK,EAAC,OAAO;UAACC,EAAE,EAAC;;;;;;uCAIlCpB,aA4TSqB;wBA3TP,MAyTQ,CAzTRrB,aAyTQsB;QAzTDC,KAAK,EAAC;MAAgB;0BAC7B,MAuTQ,CAvTRvB,aAuTQwB;UAvTDC,IAAI,EAAC,IAAI;UAACC,EAAE,EAAC,GAAG;UAACC,EAAE,EAAC;;4BAC3B,MAAiE,CAAjEC,mFAAiE,EACjE5B,aAoTS6B;YAnTPC,GAAG,EAAC,MAAM;wBACDxB,UAAK;yEAALA,UAAK;YACd,iBAAe,EAAf;;8BAGA,MAMY,CANZN,aAMY+B;0BALDzB,kBAAa;yEAAbA,kBAAa;cACrB0B,KAAK,EAAE1B,UAAK;cACZ2B,KAAK,GAAGC,CAAC,MAAMA,CAAC;cACjBC,KAAK,EAAC,iBAAiB;cACvBC,QAAQ,EAAR;uEAGFpC,aAgRqBqC;0BAhRQ/B,aAAQ;2EAARA,aAAQ;;gCACnC,MA0DoB,CA1DpBN,aA0DoBsC;kCAzDpB,MAE0B,CAF1BtC,aAE0BuC;oCAFD,MAEzB,kBAFyB,sBAEzB;;oBACAvC,aAOyBwC;oCANvB,MAKgB,CALhBxC,aAKgByC;gCAJLnC,kBAAa;+EAAbA,kBAAa;oBACrB2B,KAAK,EAAE3B,cAAS;oBACjB6B,KAAK,EAAC,MAAM;oBACZC,QAAQ,EAAR;;;oBAIJpC,aAOyBwC;oCANvB,MAKgB,CALhBxC,aAKgByC;gCAJLnC,kBAAa;+EAAbA,kBAAa;oBACrB2B,KAAK,EAAE3B,cAAS;oBACjB6B,KAAK,EAAC,eAAe;oBACrBC,QAAQ,EAAR;;;oBAIJpC,aAOyBwC;oCANvB,MAKgB,CALhBxC,aAKgByC;gCAJLnC,kBAAa;+EAAbA,kBAAa;oBACrB2B,KAAK,EAAE3B,cAAS;oBACjB6B,KAAK,EAAC,KAAK;oBACXC,QAAQ,EAAR;;;oBAIJpC,aAQyBwC;oCAPvB,MAMY,CANZxC,aAMY+B;gCALDzB,kBAAa;+EAAbA,kBAAa;oBACrB0B,KAAK,EAAE1B,YAAO;oBACd2B,KAAK,GAAGC,CAAC,MAAMA,CAAC;oBACjBC,KAAK,EAAC,QAAQ;oBACdC,QAAQ,EAAR;;;oBAIJpC,aAOyBwC;oCANvB,MAKkB,CALlBxC,aAKkByC;gCAJPnC,kBAAa;+EAAbA,kBAAa;oBACrB2B,KAAK,EAAE3B,cAAS;oBACjB6B,KAAK,EAAC,aAAa;oBACnBC,QAAQ,EAAR;;;oBAIJpC,aAOyBwC;oCANvB,MAKgB,CALhBxC,aAKgByC;gCAJLnC,kBAAa;+EAAbA,kBAAa;oBACrB2B,KAAK,EAAE3B,cAAS;oBACjB6B,KAAK,EAAC,aAAa;oBACnBC,QAAQ,EAAR;;;;;;kBAKJpC,aAoEoBsC;kCAnEpB,MAE0B,CAF1BtC,aAE0BuC;oCAFD,MAEzB,kBAFyB,0BAEzB;;oBAEAvC,aAKyBwC;oCAJvB,MAGc,CAHdxC,aAGc0C;gCAFHpC,sBAAiB;+EAAjBA,sBAAiB;oBAC1B6B,KAAK,EAAC;;;oBAIVnC,aAOyBwC;oCANvB,MAKgB,CALhBxC,aAKgByC;gCAJLnC,sBAAiB;iFAAjBA,sBAAiB;oBACzB2B,KAAK,EAAE3B,cAAS;oBACjB6B,KAAK,EAAC,uBAAuB;oBAC7BC,QAAQ,EAAR;;;oBAIJpC,aAOyBwC;oCANvB,MAKgB,CALhBxC,aAKgByC;gCAJLnC,sBAAiB;iFAAjBA,sBAAiB;oBACzB2B,KAAK,EAAE3B,cAAS;oBACjB6B,KAAK,EAAC,iBAAiB;oBACvBC,QAAQ,EAAR;;;oBAIJpC,aAOyBwC;oCANvB,MAKgB,CALhBxC,aAKgByC;gCAJLnC,sBAAiB;iFAAjBA,sBAAiB;oBACzB2B,KAAK,EAAE3B,cAAS;oBACjB6B,KAAK,EAAC,iBAAiB;oBACvBC,QAAQ,EAAR;;;oBAIJpC,aAOyBwC;oCANvB,MAKgB,CALhBxC,aAKgByC;gCAJLnC,sBAAiB;iFAAjBA,sBAAiB;oBACzB2B,KAAK,EAAE3B,cAAS;oBACjB6B,KAAK,EAAC,wBAAwB;oBAC9BC,QAAQ,EAAR;;;oBAIJpC,aAQyBwC;oCAPvB,MAMc,CANdxC,aAMc2C;gCALHrC,sBAAiB;iFAAjBA,sBAAiB;oBAC1B6B,KAAK,EAAC,gBAAgB;oBACtBS,QAAQ,EAAR,EAAQ;oBACRC,KAAK,EAAL,EAAK;oBACLC,IAAI,EAAC;;;oBAIT9C,aAQyBwC;oCAPvB,MAMc,CANdxC,aAMc2C;gCALHrC,sBAAiB;iFAAjBA,sBAAiB;oBAC1B6B,KAAK,EAAC,QAAQ;oBACdS,QAAQ,EAAR,EAAQ;oBACRC,KAAK,EAAL,EAAK;oBACLC,IAAI,EAAC;;;;;;kBAMT9C,aAkIoBsC;kCAjIpB,MAE0B,CAF1BtC,aAE0BuC;oCAFD,MAEzB,kBAFyB,oCAEzB;;oBAEAvC,aAKyBwC;oCAJvB,MAGc,CAHdxC,aAGc0C;gCAFHpC,aAAQ;iFAARA,aAAQ;oBACjB6B,KAAK,EAAC;;;oBAIVnC,aAKyBwC;oCAJvB,MAGc,CAHdxC,aAGc0C;gCAFHpC,aAAQ;iFAARA,aAAQ;oBACjB6B,KAAK,EAAC;;;oBAIVnC,aAKyBwC;oCAJvB,MAGgB,CAHhBxC,aAGgByC;gCAFLnC,aAAQ;iFAARA,aAAQ;oBACjB6B,KAAK,EAAC;;;oBAIVnC,aAKyBwC;oCAJvB,MAGgB,CAHhBxC,aAGgByC;gCAFLnC,aAAQ;iFAARA,aAAQ;oBACjB6B,KAAK,EAAC;;;oBAIVnC,aAQyBwC;oCAPvB,MAMc,CANdxC,aAMc2C;gCALHrC,aAAQ;iFAARA,aAAQ;oBACjB6B,KAAK,EAAC,iBAAiB;oBACvBS,QAAQ,EAAR,EAAQ;oBACRC,KAAK,EAAL,EAAK;oBACLC,IAAI,EAAC;;;oBAIT9C,aAQyBwC;oCAPvB,MAMc,CANdxC,aAMc2C;gCALHrC,aAAQ;iFAARA,aAAQ;oBACjB6B,KAAK,EAAC,WAAW;oBACjBS,QAAQ,EAAR,EAAQ;oBACRC,KAAK,EAAL,EAAK;oBACLC,IAAI,EAAC;;;oBAIT9C,aAQyBwC;oCAPvB,MAMc,CANdxC,aAMc2C;gCALHrC,aAAQ;iFAARA,aAAQ;oBACjB6B,KAAK,EAAC,UAAU;oBAChBS,QAAQ,EAAR,EAAQ;oBACRC,KAAK,EAAL,EAAK;oBACLC,IAAI,EAAC;;;oBAIT9C,aAKyBwC;oCAJvB,MAGgB,CAHhBxC,aAGgByC;gCAFLnC,aAAQ;iFAARA,aAAQ;oBACjB6B,KAAK,EAAC;;;oBAIVnC,aAKyBwC;oCAJvB,MAGgB,CAHhBxC,aAGgByC;gCAFLnC,aAAQ;iFAARA,aAAQ;oBACjB6B,KAAK,EAAC;;;oBAIVnC,aAKyBwC;oCAJvB,MAGgB,CAHhBxC,aAGgByC;gCAFLnC,aAAQ;iFAARA,aAAQ;oBACjB6B,KAAK,EAAC;;;oBAIVnC,aAKyBwC;oCAJvB,MAGgB,CAHhBxC,aAGgByC;gCAFLnC,aAAQ;iFAARA,aAAQ;oBACjB6B,KAAK,EAAC;;;oBAIVnC,aAQyBwC;oCAPvB,MAMc,CANdxC,aAMc2C;gCALHrC,aAAQ;iFAARA,aAAQ;oBACjB6B,KAAK,EAAC,qBAAqB;oBAC3BS,QAAQ,EAAR,EAAQ;oBACRC,KAAK,EAAL,EAAK;oBACLC,IAAI,EAAC;;;oBAIT9C,aAQyBwC;oCAPvB,MAMc,CANdxC,aAMc2C;gCALHrC,aAAQ;iFAARA,aAAQ;oBACjB6B,KAAK,EAAC,mBAAmB;oBACzBS,QAAQ,EAAR,EAAQ;oBACRC,KAAK,EAAL,EAAK;oBACLC,IAAI,EAAC;;;oBAIT9C,aAQyBwC;oCAPvB,MAMc,CANdxC,aAMc2C;gCALHrC,aAAQ;iFAARA,aAAQ;oBACjB6B,KAAK,EAAC,wBAAwB;oBAC9BS,QAAQ,EAAR,EAAQ;oBACRC,KAAK,EAAL,EAAK;oBACLC,IAAI,EAAC;;;oBAIT9C,aAQyBwC;oCAPvB,MAMc,CANdxC,aAMc2C;gCALHrC,aAAQ;iFAARA,aAAQ;oBACjB6B,KAAK,EAAC,eAAe;oBACrBS,QAAQ,EAAR,EAAQ;oBACRC,KAAK,EAAL,EAAK;oBACLC,IAAI,EAAC;;;;;;kBAKT9C,aAMoBsC;kCALpB,MAE0B,CAF1BtC,aAE0BuC;oCAFD,MAEzB,kBAFyB,gBAEzB;;oBACAvC,aACyBwC;;;;;+CAK3BO,UAAI,EACJC,UAAI,EAGJhD,aAOQS;cANLwC,QAAQ,GAAG3C,UAAK;cACjB4C,KAAK,EAAC,SAAS;cACf3B,KAAK,EAAC,MAAM;cACXlB,OAAK,EAAE8C;;gCACT,MAED,kBAFC,UAED;;wDAEAnD,aAMQS;cALNyC,KAAK,EAAC,OAAO;cACb3B,KAAK,EAAC,MAAM;cACXlB,OAAK,EAAE8C;;gCACT,MAED,kBAFC,cAED","names":["_createElementVNode","_createBlock","_component_v_app","_createVNode","_component_v_app_bar","absolute","dark","_component_v_app_bar_nav_icon","onClick","_ctx","_component_v_app_bar_title","_component_v_spacer","_component_v_btn","icon","_component_v_icon","_hoisted_1","_component_v_navigation_drawer","bottom","temporary","_component_v_list","nav","_component_v_list_item","title","to","_component_v_main","_component_v_row","class","_component_v_col","cols","sm","md","_createCommentVNode","_component_v_form","ref","_component_v_select","items","rules","v","label","required","_component_v_expansion_panels","_component_v_expansion_panel","_component_v_expansion_panel_title","_component_v_expansion_panel_text","_component_v_text_field","_component_v_textarea","_component_v_combobox","multiple","chips","hint","_hoisted_2","_hoisted_3","disabled","color","$options"],"sourceRoot":"","sources":["/Users/stlp/Desktop/BIOEN 404/Vue Apps/my-project/src/App.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-app-bar\n      absolute\n      dark\n      shrink-on-scroll\n      scroll-target=\"#scrolling-techniques-2\"\n    >\n\n      <v-app-bar-nav-icon @click.stop=\"drawer = !drawer\"></v-app-bar-nav-icon>\n\n      <v-app-bar-title>CRESTing Healthcare Education</v-app-bar-title>\n\n      <v-spacer></v-spacer>\n\n      <v-btn icon>\n        <v-icon>mdi-magnify</v-icon>\n      </v-btn>\n\n      <v-btn icon>\n        <v-icon>mdi-heart</v-icon>\n      </v-btn>\n\n      <v-btn icon>\n        <v-icon>mdi-dots-vertical</v-icon>\n      </v-btn>\n    </v-app-bar>\n    <br>\n\n    <v-navigation-drawer\n      v-model=\"drawer\"\n      absolute\n      bottom\n      temporary\n    >\n      <v-list nav>\n        <v-list-item title=\"About\" to=\"/dashboard\"></v-list-item>\n      </v-list>\n    </v-navigation-drawer>\n\n    <v-main>\n      <v-row class=\"justify-center\">\n      <v-col cols=\"12\" sm=\"8\" md=\"6\">\n      <!-- v-if=\"type === 'Medical Doctor' || type === 'Paramedic'\" -->\n      <v-form\n        ref=\"form\"\n        v-model=\"valid\"\n        lazy-validation\n      >\n        \n        <v-select\n          v-model=\"patient_props['type']\"\n          :items=\"types\"\n          :rules=\"[v => !!v || 'Type is required']\"\n          label=\"Instructor Type\"\n          required\n        ></v-select>\n\n        <v-expansion-panels v-model=\"expanded\">\n          <v-expansion-panel>\n          <v-expansion-panel-title>\n            Patient Properties\n          </v-expansion-panel-title>\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"patient_props['name']\"\n              :rules=\"nameRules\"\n              label=\"Name\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"patient_props['title']\"\n              :rules=\"nameRules\"\n              label=\"Title or Rank\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"patient_props['age']\"\n              :rules=\"nameRules\"\n              label=\"Age\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-select\n              v-model=\"patient_props['gender']\"\n              :items=\"genders\"\n              :rules=\"[v => !!v || 'Gender is required']\"\n              label=\"Gender\"\n              required\n            ></v-select>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"patient_props['height']\"\n              :rules=\"nameRules\"\n              label=\"Height [cm]\"\n              required\n              ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"patient_props['weight']\"\n              :rules=\"nameRules\"\n              label=\"Weight [kg]\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n          </v-expansion-panel>\n\n          <v-expansion-panel>\n          <v-expansion-panel-title>\n            Environment Properties\n          </v-expansion-panel-title>\n\n          <v-expansion-panel-text>\n            <v-textarea\n              v-model=\"environment_props['surrounding']\"\n              label=\"Surrounding\"\n            ></v-textarea>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"environment_props['altitude']\"\n              :rules=\"nameRules\"\n              label=\"Altitude or Elevation\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"environment_props['temperature']\"\n              :rules=\"nameRules\"\n              label=\"Temperature [C]\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"environment_props['pressure']\"\n              :rules=\"nameRules\"\n              label=\"Pressure [mmHg]\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"environment_props['co2']\"\n              :rules=\"nameRules\"\n              label=\"Ambient CO2 [fraction]\"\n              required\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"environment_props['sounds']\"\n              label=\"Ambient Sounds\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"environment_props['smells']\"\n              label=\"Smells\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          </v-expansion-panel>\n\n          <v-expansion-panel>\n          <v-expansion-panel-title>\n            Educational Encounter Properties\n          </v-expansion-panel-title>\n\n          <v-expansion-panel-text>\n            <v-textarea\n              v-model=\"ed_props['instruction']\"\n              label=\"Instructions\"\n            ></v-textarea>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-textarea\n              v-model=\"ed_props['narrative']\"\n              label=\"Narrative\"\n            ></v-textarea>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['learnerCount']\"\n              label=\"Number of Learners\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['role']\"\n              label=\"Roles\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['setup_checklist']\"\n              label=\"Setup Checklist\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['equipment']\"\n              label=\"Equipment\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['supplies']\"\n              label=\"Supplies\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['duration']\"\n              label=\"Estimated Duration\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['scenario_type']\"\n              label=\"Scenario Type\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['assessment_type']\"\n              label=\"Assessment Type\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-text-field\n              v-model=\"ed_props['learner_group']\"\n              label=\"Learner Group\"\n            ></v-text-field>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['objectives']\"\n              label=\"Learning Objectives\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['task']\"\n              label=\"Task Descriptions\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['conditions']\"\n              label=\"Performance Conditions\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n\n          <v-expansion-panel-text>\n            <v-combobox\n              v-model=\"ed_props['exit_criteria']\"\n              label=\"Exit Criteria\"\n              multiple\n              chips\n              hint='Click \"enter\" to add multiple items'\n            ></v-combobox>\n          </v-expansion-panel-text>\n          </v-expansion-panel>\n\n          <v-expansion-panel>\n          <v-expansion-panel-title>\n            Capabilities\n          </v-expansion-panel-title>\n          <v-expansion-panel-text>\n          </v-expansion-panel-text>\n          </v-expansion-panel>\n\n\n        </v-expansion-panels>\n        <br>\n        <br>\n\n\n        <v-btn\n          :disabled=\"!valid\"\n          color=\"success\"\n          class=\"mr-4\"\n          @click=\"saveXML\"\n        >\n          Submit\n        </v-btn>\n\n        <v-btn\n          color=\"error\"\n          class=\"mr-4\"\n          @click=\"reset\"\n        >\n          Reset Form\n        </v-btn>\n\n      </v-form>\n      </v-col>\n      </v-row>\n\n    </v-main>\n  </v-app>\n</template>\n\n<script>\n  import xmlbuilder from 'xmlbuilder'\n\n  export default {\n    data: () => ({\n      drawer: false,\n      valid: true,\n      expanded: [0],\n      patient_props: {\n        \"type\": [],\n        \"name\": [],\n        \"title\": [],\n        \"age\": [],\n        \"gender\": [],\n        \"height\": [],\n        \"weight\": [],\n      },\n      environment_props: {\n        \"surrounding\": [],\n        \"altitude\":[],\n        \"temperature\":[],\n        \"pressure\":[],\n        \"co2\":[],\n        \"sounds\":[],\n        \"smells\":[]\n      },\n      ed_props: {\n        'instruction':[],\n        'narrative':[],\n        'learnerCount':[],\n        'role':[],\n        'setup_checklist':[],\n        'equipment':[],\n        'supplies':[],\n        'duration':[],\n        'scenario_type':[],\n        'assessment_type':[],\n        'learner_group':[],\n        'objectives':[],\n        'task':[],\n        'conditions':[],\n        'exit_criteria':[]\n      },\n      nameRules: [\n        v => !!v || 'Name is required',\n      ],\n      genders: [\n        'Male',\n        'Female'\n      ],\n      types: [\n        'Medical Doctor',\n        'Paramedic',\n        'Nurse'\n      ],\n    }),\n\n    methods: {\n      validate () {\n        this.$refs.form.validate()\n      },\n      reset () {\n        this.$refs.form.reset()\n      },\n      saveXML () {\n        const xml = xmlbuilder.create('AMMConfiguration', {encoding: 'UTF-8'})\n          xml.att({'xmlns:xsd':'http://www.w3.org/2001/XMLSchema',\n                'xmlns:xsi':'http://www.w3.org/2001/XMLSchema-instance'\n          })\n          const metadata = xml.ele('metadata')\n            for (var key1 in this.patient_props) {\n              if (Array.isArray(this.patient_props[key1])) {\n                for (var item1 in this.patient_props[key1]) {\n                  metadata.ele(key1, this.patient_props[key1][item1])\n                }\n              } else {\n                metadata.ele(key1, this.patient_props[key1])\n              }\n            }\n  \n            for (var key2 in this.environment_props) {\n              if (Array.isArray(this.environment_props[key2])) {\n                for (var item2 in this.environment_props[key2]) {\n                  metadata.ele(key2, this.environment_props[key2][item2])\n                }\n              } else {\n                metadata.ele(key2, this.environment_props[key2])\n              }\n            }\n            for (var key3 in this.ed_props) {\n              if (Array.isArray(this.ed_props[key3])) {\n                for (var item3 in this.ed_props[key3]) {\n                  metadata.ele(key3, this.ed_props[key3][item3])\n                }\n              } else {\n                metadata.ele(key3, this.ed_props[key3])\n              }\n            }\n        var xmlString = xml.end({ pretty: true });\n        const blob = new Blob([xmlString], {type:'text/xml'})\n        const link = document.createElement('a')\n        link.href = URL.createObjectURL(blob)\n        link.download = 'data.xml'\n        link.click()\n      }\n    }\n  }\n  </script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}