{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"20px\"\n  }\n}, \"Please upload your .CSV:\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  const _component_v_toolbar_title = _resolveComponent(\"v-toolbar-title\");\n  const _component_v_toolbar = _resolveComponent(\"v-toolbar\");\n  const _component_v_file_input = _resolveComponent(\"v-file-input\");\n  const _component_v_data_table = _resolveComponent(\"v-data-table\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_main = _resolveComponent(\"v-main\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_v_toolbar, {\n    style: {\n      \"color\": \"white\"\n    },\n    color: \"#4b0082\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_toolbar_title, null, {\n      default: _withCtx(() => [_createTextVNode(\"BioGears Plotting Tool\")]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }), _createVNode(_component_v_main, {\n    class: \"bg-grey-lighten-3\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_container, null, {\n      default: _withCtx(() => [_createVNode(_component_v_card, {\n        class: \"mt-n12\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card_text, null, {\n          default: _withCtx(() => [_hoisted_1, _hoisted_2, _createVNode(_component_v_file_input, {\n            modelValue: _ctx.file,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.file = $event),\n            accept: \".csv\",\n            onChange: _ctx.parseCsv\n          }, null, 8 /* PROPS */, [\"modelValue\", \"onChange\"]), _createVNode(_component_v_data_table, {\n            headers: _ctx.headers,\n            items: _ctx.items\n          }, null, 8 /* PROPS */, [\"headers\", \"items\"])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAQgBA,oBAAuD;EAApDC,KAAuB,EAAvB;IAAA;EAAA;AAAuB,GAAC,0BAAwB;gCACnDD,oBAAI;;;;;;;;;;;6DARhBE,aAEYC;IAFDF,KAAoB,EAApB;MAAA;IAAA,CAAoB;IAACG,KAAK,EAAC;;sBACnC,MAAyD,CAAzDF,aAAyDG;wBAAxC,MAAsB,kBAAtB,wBAAsB;;;;;MAE1CH,aAeSI;IAfDC,KAAK,EAAC;EAAmB;sBAC9B,MAac,CAbdL,aAacM;wBAZX,MAWS,CAXTN,aAWSO;QAXDF,KAAK,EAAC;MAAQ;0BACnB,MASc,CATdL,aAScQ;4BARX,MAAuD,CAAvDC,UAAuD,EACvDC,UAAI,EACJV,aAImBW;wBAHPC,SAAI;uEAAJA,SAAI;YACbC,MAAM,EAAC,MAAM;YACZC,QAAM,EAAEF;+DAEZZ,aAA+De;YAAhDC,OAAO,EAAEJ,YAAO;YAAGK,KAAK,EAAEL","names":["_createElementVNode","style","_createVNode","_component_v_toolbar","color","_component_v_toolbar_title","_component_v_main","class","_component_v_container","_component_v_card","_component_v_card_text","_hoisted_1","_hoisted_2","_component_v_file_input","_ctx","accept","onChange","_component_v_data_table","headers","items"],"sourceRoot":"","sources":["/Users/stlp/Desktop/Spring 2023/BIOEN 405/User Interface/MoHSES-Scenario-User-Interface/src/views/PlottingView.vue"],"sourcesContent":["<template>\n    <v-toolbar style=\"color: white\" color=\"#4b0082\">\n       <v-toolbar-title>BioGears Plotting Tool</v-toolbar-title>\n    </v-toolbar>\n    <v-main class=\"bg-grey-lighten-3\">\n       <v-container>\n          <v-card class=\"mt-n12\">\n             <v-card-text>\n                <p style=\"font-size: 20px\">Please upload your .CSV:</p>\n                <br>\n                <v-file-input\n                   v-model=\"file\"\n                   accept=\".csv\"\n                   @change=\"parseCsv\"\n                   ></v-file-input>\n                <v-data-table :headers=\"headers\" :items=\"items\"></v-data-table>\n             </v-card-text>\n          </v-card>\n       </v-container>\n    </v-main>\n </template>\n <script>\n   import * as d3 from 'd3';\n   export default {\n      data: () => ({\nexport default defineComponent({\n  name: 'CsvParser',\n  data() {\n    return {\n      headers: [],\n      items: [],\n    };\n  },\n  methods: {\n    async parseCsv(event) {\n      try {\n        const file = event.target.files[0];\n        const text = await file.text();\n        const csv = d3.csvParse(text);\n        this.headers = Object.keys(csv[0]);\n        this.items = csv;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  },\n});\n </script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}