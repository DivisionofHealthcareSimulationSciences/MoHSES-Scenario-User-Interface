{"ast":null,"code":"import max from \"./max.js\";\nimport maxIndex from \"./maxIndex.js\";\nimport min from \"./min.js\";\nimport minIndex from \"./minIndex.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, { numbers } from \"./number.js\";\nimport { ascendingDefined } from \"./sort.js\";\nimport greatest from \"./greatest.js\";\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length) || isNaN(p = +p)) return;\n  if (p <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n    i = (n - 1) * p,\n    i0 = Math.floor(i),\n    value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n    value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\nexport function quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length) || isNaN(p = +p)) return;\n  if (p <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n    i = (n - 1) * p,\n    i0 = Math.floor(i),\n    value0 = +valueof(values[i0], i0, values),\n    value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\nexport function quantileIndex(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length) || isNaN(p = +p)) return;\n  if (p <= 0 || n < 2) return minIndex(values);\n  if (p >= 1) return maxIndex(values);\n  var n,\n    i = Math.floor((n - 1) * p),\n    order = (i, j) => ascendingDefined(values[i], values[j]),\n    index = quickselect(Uint32Array.from(values, (_, i) => i), i, 0, n - 1, order);\n  return greatest(index.subarray(0, i + 1), i => values[i]);\n}","map":{"version":3,"names":["max","maxIndex","min","minIndex","quickselect","number","numbers","ascendingDefined","greatest","quantile","values","p","valueof","Float64Array","from","n","length","isNaN","i","i0","Math","floor","value0","subarray","value1","quantileSorted","quantileIndex","order","j","index","Uint32Array","_"],"sources":["C:/Users/sanik/Downloads/capstone/MoHSES-Scenario-User-Interface/node_modules/d3-array/src/quantile.js"],"sourcesContent":["import max from \"./max.js\";\r\nimport maxIndex from \"./maxIndex.js\";\r\nimport min from \"./min.js\";\r\nimport minIndex from \"./minIndex.js\";\r\nimport quickselect from \"./quickselect.js\";\r\nimport number, {numbers} from \"./number.js\";\r\nimport {ascendingDefined} from \"./sort.js\";\r\nimport greatest from \"./greatest.js\";\r\n\r\nexport default function quantile(values, p, valueof) {\r\n  values = Float64Array.from(numbers(values, valueof));\r\n  if (!(n = values.length) || isNaN(p = +p)) return;\r\n  if (p <= 0 || n < 2) return min(values);\r\n  if (p >= 1) return max(values);\r\n  var n,\r\n      i = (n - 1) * p,\r\n      i0 = Math.floor(i),\r\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\r\n      value1 = min(values.subarray(i0 + 1));\r\n  return value0 + (value1 - value0) * (i - i0);\r\n}\r\n\r\nexport function quantileSorted(values, p, valueof = number) {\r\n  if (!(n = values.length) || isNaN(p = +p)) return;\r\n  if (p <= 0 || n < 2) return +valueof(values[0], 0, values);\r\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\r\n  var n,\r\n      i = (n - 1) * p,\r\n      i0 = Math.floor(i),\r\n      value0 = +valueof(values[i0], i0, values),\r\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\r\n  return value0 + (value1 - value0) * (i - i0);\r\n}\r\n\r\nexport function quantileIndex(values, p, valueof) {\r\n  values = Float64Array.from(numbers(values, valueof));\r\n  if (!(n = values.length) || isNaN(p = +p)) return;\r\n  if (p <= 0 || n < 2) return minIndex(values);\r\n  if (p >= 1) return maxIndex(values);\r\n  var n,\r\n      i = Math.floor((n - 1) * p),\r\n      order = (i, j) => ascendingDefined(values[i], values[j]),\r\n      index = quickselect(Uint32Array.from(values, (_, i) => i), i, 0, n - 1, order);\r\n  return greatest(index.subarray(0, i + 1), i => values[i]);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}