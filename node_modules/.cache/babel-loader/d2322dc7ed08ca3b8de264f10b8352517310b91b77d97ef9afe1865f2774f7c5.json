{"ast":null,"code":"// Generated by CoffeeScript 2.4.1\n(function () {\n  // Implements the DOMImplementation interface\n  var XMLDOMImplementation;\n  module.exports = XMLDOMImplementation = class XMLDOMImplementation {\n    // Tests if the DOM implementation implements a specific feature.\n\n    // `feature` package name of the feature to test. In Level 1, the\n    //           legal values are \"HTML\" and \"XML\" (case-insensitive).\n    // `version` version number of the package name to test. \n    //           In Level 1, this is the string \"1.0\". If the version is \n    //           not specified, supporting any version of the feature will \n    //           cause the method to return true.\n    hasFeature(feature, version) {\n      return true;\n    }\n\n    // Creates a new document type declaration.\n\n    // `qualifiedName` qualified name of the document type to be created\n    // `publicId` public identifier of the external subset\n    // `systemId` system identifier of the external subset\n    createDocumentType(qualifiedName, publicId, systemId) {\n      throw new Error(\"This DOM method is not implemented.\");\n    }\n\n    // Creates a new document.\n\n    // `namespaceURI` namespace URI of the document element to create\n    // `qualifiedName` the qualified name of the document to be created\n    // `doctype` the type of document to be created or null\n    createDocument(namespaceURI, qualifiedName, doctype) {\n      throw new Error(\"This DOM method is not implemented.\");\n    }\n\n    // Creates a new HTML document.\n\n    // `title` document title\n    createHTMLDocument(title) {\n      throw new Error(\"This DOM method is not implemented.\");\n    }\n\n    // Returns a specialized object which implements the specialized APIs \n    // of the specified feature and version.\n\n    // `feature` name of the feature requested.\n    // `version` version number of the feature to test\n    getFeature(feature, version) {\n      throw new Error(\"This DOM method is not implemented.\");\n    }\n  };\n}).call(this);","map":{"version":3,"names":["XMLDOMImplementation","module","exports","hasFeature","feature","version","createDocumentType","qualifiedName","publicId","systemId","Error","createDocument","namespaceURI","doctype","createHTMLDocument","title","getFeature","call"],"sources":["C:/Users/sanik/Downloads/capstone/MoHSES-Scenario-User-Interface/node_modules/xmlbuilder/lib/XMLDOMImplementation.js"],"sourcesContent":["// Generated by CoffeeScript 2.4.1\r\n(function() {\r\n  // Implements the DOMImplementation interface\r\n  var XMLDOMImplementation;\r\n\r\n  module.exports = XMLDOMImplementation = class XMLDOMImplementation {\r\n    // Tests if the DOM implementation implements a specific feature.\r\n\r\n    // `feature` package name of the feature to test. In Level 1, the\r\n    //           legal values are \"HTML\" and \"XML\" (case-insensitive).\r\n    // `version` version number of the package name to test. \r\n    //           In Level 1, this is the string \"1.0\". If the version is \r\n    //           not specified, supporting any version of the feature will \r\n    //           cause the method to return true.\r\n    hasFeature(feature, version) {\r\n      return true;\r\n    }\r\n\r\n    // Creates a new document type declaration.\r\n\r\n    // `qualifiedName` qualified name of the document type to be created\r\n    // `publicId` public identifier of the external subset\r\n    // `systemId` system identifier of the external subset\r\n    createDocumentType(qualifiedName, publicId, systemId) {\r\n      throw new Error(\"This DOM method is not implemented.\");\r\n    }\r\n\r\n    // Creates a new document.\r\n\r\n    // `namespaceURI` namespace URI of the document element to create\r\n    // `qualifiedName` the qualified name of the document to be created\r\n    // `doctype` the type of document to be created or null\r\n    createDocument(namespaceURI, qualifiedName, doctype) {\r\n      throw new Error(\"This DOM method is not implemented.\");\r\n    }\r\n\r\n    // Creates a new HTML document.\r\n\r\n    // `title` document title\r\n    createHTMLDocument(title) {\r\n      throw new Error(\"This DOM method is not implemented.\");\r\n    }\r\n\r\n    // Returns a specialized object which implements the specialized APIs \r\n    // of the specified feature and version.\r\n\r\n    // `feature` name of the feature requested.\r\n    // `version` version number of the feature to test\r\n    getFeature(feature, version) {\r\n      throw new Error(\"This DOM method is not implemented.\");\r\n    }\r\n\r\n  };\r\n\r\n}).call(this);\r\n"],"mappings":"AAAA;AACA,CAAC,YAAW;EACV;EACA,IAAIA,oBAAoB;EAExBC,MAAM,CAACC,OAAO,GAAGF,oBAAoB,GAAG,MAAMA,oBAAoB,CAAC;IACjE;;IAEA;IACA;IACA;IACA;IACA;IACA;IACAG,UAAU,CAACC,OAAO,EAAEC,OAAO,EAAE;MAC3B,OAAO,IAAI;IACb;;IAEA;;IAEA;IACA;IACA;IACAC,kBAAkB,CAACC,aAAa,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;MACpD,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;IACxD;;IAEA;;IAEA;IACA;IACA;IACAC,cAAc,CAACC,YAAY,EAAEL,aAAa,EAAEM,OAAO,EAAE;MACnD,MAAM,IAAIH,KAAK,CAAC,qCAAqC,CAAC;IACxD;;IAEA;;IAEA;IACAI,kBAAkB,CAACC,KAAK,EAAE;MACxB,MAAM,IAAIL,KAAK,CAAC,qCAAqC,CAAC;IACxD;;IAEA;IACA;;IAEA;IACA;IACAM,UAAU,CAACZ,OAAO,EAAEC,OAAO,EAAE;MAC3B,MAAM,IAAIK,KAAK,CAAC,qCAAqC,CAAC;IACxD;EAEF,CAAC;AAEH,CAAC,EAAEO,IAAI,CAAC,IAAI,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}