{"ast":null,"code":"// Generated by CoffeeScript 2.4.1\n(function () {\n  var XMLDOMConfiguration, XMLDOMErrorHandler, XMLDOMStringList;\n  XMLDOMErrorHandler = require('./XMLDOMErrorHandler');\n  XMLDOMStringList = require('./XMLDOMStringList');\n\n  // Implements the DOMConfiguration interface\n  module.exports = XMLDOMConfiguration = function () {\n    class XMLDOMConfiguration {\n      constructor() {\n        var clonedSelf;\n        this.defaultParams = {\n          \"canonical-form\": false,\n          \"cdata-sections\": false,\n          \"comments\": false,\n          \"datatype-normalization\": false,\n          \"element-content-whitespace\": true,\n          \"entities\": true,\n          \"error-handler\": new XMLDOMErrorHandler(),\n          \"infoset\": true,\n          \"validate-if-schema\": false,\n          \"namespaces\": true,\n          \"namespace-declarations\": true,\n          \"normalize-characters\": false,\n          \"schema-location\": '',\n          \"schema-type\": '',\n          \"split-cdata-sections\": true,\n          \"validate\": false,\n          \"well-formed\": true\n        };\n        this.params = clonedSelf = Object.create(this.defaultParams);\n      }\n\n      // Gets the value of a parameter.\n\n      // `name` name of the parameter\n      getParameter(name) {\n        if (this.params.hasOwnProperty(name)) {\n          return this.params[name];\n        } else {\n          return null;\n        }\n      }\n\n      // Checks if setting a parameter to a specific value is supported.\n\n      // `name` name of the parameter\n      // `value` parameter value\n      canSetParameter(name, value) {\n        return true;\n      }\n\n      // Sets the value of a parameter.\n\n      // `name` name of the parameter\n      // `value` new value or null if the user wishes to unset the parameter\n      setParameter(name, value) {\n        if (value != null) {\n          return this.params[name] = value;\n        } else {\n          return delete this.params[name];\n        }\n      }\n    }\n    ;\n\n    // Returns the list of parameter names\n    Object.defineProperty(XMLDOMConfiguration.prototype, 'parameterNames', {\n      get: function () {\n        return new XMLDOMStringList(Object.keys(this.defaultParams));\n      }\n    });\n    return XMLDOMConfiguration;\n  }.call(this);\n}).call(this);","map":{"version":3,"names":["XMLDOMConfiguration","XMLDOMErrorHandler","XMLDOMStringList","require","module","exports","constructor","clonedSelf","defaultParams","params","Object","create","getParameter","name","hasOwnProperty","canSetParameter","value","setParameter","defineProperty","prototype","get","keys","call"],"sources":["C:/Users/sanik/Downloads/capstone/MoHSES-Scenario-User-Interface/node_modules/xmlbuilder/lib/XMLDOMConfiguration.js"],"sourcesContent":["// Generated by CoffeeScript 2.4.1\r\n(function() {\r\n  var XMLDOMConfiguration, XMLDOMErrorHandler, XMLDOMStringList;\r\n\r\n  XMLDOMErrorHandler = require('./XMLDOMErrorHandler');\r\n\r\n  XMLDOMStringList = require('./XMLDOMStringList');\r\n\r\n  // Implements the DOMConfiguration interface\r\n  module.exports = XMLDOMConfiguration = (function() {\r\n    class XMLDOMConfiguration {\r\n      constructor() {\r\n        var clonedSelf;\r\n        this.defaultParams = {\r\n          \"canonical-form\": false,\r\n          \"cdata-sections\": false,\r\n          \"comments\": false,\r\n          \"datatype-normalization\": false,\r\n          \"element-content-whitespace\": true,\r\n          \"entities\": true,\r\n          \"error-handler\": new XMLDOMErrorHandler(),\r\n          \"infoset\": true,\r\n          \"validate-if-schema\": false,\r\n          \"namespaces\": true,\r\n          \"namespace-declarations\": true,\r\n          \"normalize-characters\": false,\r\n          \"schema-location\": '',\r\n          \"schema-type\": '',\r\n          \"split-cdata-sections\": true,\r\n          \"validate\": false,\r\n          \"well-formed\": true\r\n        };\r\n        this.params = clonedSelf = Object.create(this.defaultParams);\r\n      }\r\n\r\n      // Gets the value of a parameter.\r\n\r\n      // `name` name of the parameter\r\n      getParameter(name) {\r\n        if (this.params.hasOwnProperty(name)) {\r\n          return this.params[name];\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n\r\n      // Checks if setting a parameter to a specific value is supported.\r\n\r\n      // `name` name of the parameter\r\n      // `value` parameter value\r\n      canSetParameter(name, value) {\r\n        return true;\r\n      }\r\n\r\n      // Sets the value of a parameter.\r\n\r\n      // `name` name of the parameter\r\n      // `value` new value or null if the user wishes to unset the parameter\r\n      setParameter(name, value) {\r\n        if (value != null) {\r\n          return this.params[name] = value;\r\n        } else {\r\n          return delete this.params[name];\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n    // Returns the list of parameter names\r\n    Object.defineProperty(XMLDOMConfiguration.prototype, 'parameterNames', {\r\n      get: function() {\r\n        return new XMLDOMStringList(Object.keys(this.defaultParams));\r\n      }\r\n    });\r\n\r\n    return XMLDOMConfiguration;\r\n\r\n  }).call(this);\r\n\r\n}).call(this);\r\n"],"mappings":"AAAA;AACA,CAAC,YAAW;EACV,IAAIA,mBAAmB,EAAEC,kBAAkB,EAAEC,gBAAgB;EAE7DD,kBAAkB,GAAGE,OAAO,CAAC,sBAAsB,CAAC;EAEpDD,gBAAgB,GAAGC,OAAO,CAAC,oBAAoB,CAAC;;EAEhD;EACAC,MAAM,CAACC,OAAO,GAAGL,mBAAmB,GAAI,YAAW;IACjD,MAAMA,mBAAmB,CAAC;MACxBM,WAAW,GAAG;QACZ,IAAIC,UAAU;QACd,IAAI,CAACC,aAAa,GAAG;UACnB,gBAAgB,EAAE,KAAK;UACvB,gBAAgB,EAAE,KAAK;UACvB,UAAU,EAAE,KAAK;UACjB,wBAAwB,EAAE,KAAK;UAC/B,4BAA4B,EAAE,IAAI;UAClC,UAAU,EAAE,IAAI;UAChB,eAAe,EAAE,IAAIP,kBAAkB,EAAE;UACzC,SAAS,EAAE,IAAI;UACf,oBAAoB,EAAE,KAAK;UAC3B,YAAY,EAAE,IAAI;UAClB,wBAAwB,EAAE,IAAI;UAC9B,sBAAsB,EAAE,KAAK;UAC7B,iBAAiB,EAAE,EAAE;UACrB,aAAa,EAAE,EAAE;UACjB,sBAAsB,EAAE,IAAI;UAC5B,UAAU,EAAE,KAAK;UACjB,aAAa,EAAE;QACjB,CAAC;QACD,IAAI,CAACQ,MAAM,GAAGF,UAAU,GAAGG,MAAM,CAACC,MAAM,CAAC,IAAI,CAACH,aAAa,CAAC;MAC9D;;MAEA;;MAEA;MACAI,YAAY,CAACC,IAAI,EAAE;QACjB,IAAI,IAAI,CAACJ,MAAM,CAACK,cAAc,CAACD,IAAI,CAAC,EAAE;UACpC,OAAO,IAAI,CAACJ,MAAM,CAACI,IAAI,CAAC;QAC1B,CAAC,MAAM;UACL,OAAO,IAAI;QACb;MACF;;MAEA;;MAEA;MACA;MACAE,eAAe,CAACF,IAAI,EAAEG,KAAK,EAAE;QAC3B,OAAO,IAAI;MACb;;MAEA;;MAEA;MACA;MACAC,YAAY,CAACJ,IAAI,EAAEG,KAAK,EAAE;QACxB,IAAIA,KAAK,IAAI,IAAI,EAAE;UACjB,OAAO,IAAI,CAACP,MAAM,CAACI,IAAI,CAAC,GAAGG,KAAK;QAClC,CAAC,MAAM;UACL,OAAO,OAAO,IAAI,CAACP,MAAM,CAACI,IAAI,CAAC;QACjC;MACF;IAEF;IAAC;;IAED;IACAH,MAAM,CAACQ,cAAc,CAAClB,mBAAmB,CAACmB,SAAS,EAAE,gBAAgB,EAAE;MACrEC,GAAG,EAAE,YAAW;QACd,OAAO,IAAIlB,gBAAgB,CAACQ,MAAM,CAACW,IAAI,CAAC,IAAI,CAACb,aAAa,CAAC,CAAC;MAC9D;IACF,CAAC,CAAC;IAEF,OAAOR,mBAAmB;EAE5B,CAAC,CAAEsB,IAAI,CAAC,IAAI,CAAC;AAEf,CAAC,EAAEA,IAAI,CAAC,IAAI,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}